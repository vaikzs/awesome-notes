"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[1503],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,b=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(b,o(o({ref:t},p),{},{components:n})):a.createElement(b,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9414:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","Node","GraphQL"]},l="GraphQL Basic Notes",c={unversionedId:"web/node/graphqlBasicNotes",id:"web/node/graphqlBasicNotes",title:"GraphQL Basic Notes",description:"Better REST",source:"@site/notes/web/node/graphqlBasicNotes.md",sourceDirName:"web/node",slug:"/web/node/graphqlBasicNotes",permalink:"/awesome-notes/web/node/graphqlBasicNotes",editUrl:"https://github.com/sabertazimi/awesome-notes/edit/main/notes/web/node/graphqlBasicNotes.md",tags:[{label:"Web",permalink:"/awesome-notes/tags/web"},{label:"Node",permalink:"/awesome-notes/tags/node"},{label:"GraphQL",permalink:"/awesome-notes/tags/graph-ql"}],version:"current",lastUpdatedBy:"sabertazimi",lastUpdatedAt:1648310706,formattedLastUpdatedAt:"3/26/2022",frontMatter:{author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","Node","GraphQL"]},sidebar:"sidebar",previous:{title:"Express Basic Notes",permalink:"/awesome-notes/web/node/expressBasicNotes"},next:{title:"Message Queue Basic Notes",permalink:"/awesome-notes/web/node/messageQueueBasicNotes"}},p={},u=[{value:"Better REST",id:"better-rest",level:2},{value:"GraphQL Client",id:"graphql-client",level:2},{value:"Basic Query Syntax",id:"basic-query-syntax",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"graphql-basic-notes"},"GraphQL Basic Notes"),(0,i.kt)("h2",{id:"better-rest"},"Better REST"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"No OverFetching"),(0,i.kt)("li",{parentName:"ul"},"No UnderFetching (need multiple RESTful request)"),(0,i.kt)("li",{parentName:"ul"},"Flexible (clients can specify their exact data requirements)"),(0,i.kt)("li",{parentName:"ul"},"strong ",(0,i.kt)("inlineCode",{parentName:"li"},"Schema")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Type System")," (just like database)")),(0,i.kt)("h2",{id:"graphql-client"},"GraphQL Client"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ctrl+enter"),": run query"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ctrl+space"),": auto complete in ",(0,i.kt)("inlineCode",{parentName:"li"},"()")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"shift+ctrl+p"),": prettify")),(0,i.kt)("h2",{id:"basic-query-syntax"},"Basic Query Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"{\n  site {\n    id\n    siteMetadata {\n      author\n    }\n    host\n    port\n    pathPrefix\n    buildTime\n  }\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "site": {\n      "id": "Site",\n      "siteMetadata": {\n        "author": "sabertazimi"\n      },\n      "host": "localhost",\n      "port": "8000",\n      "pathPrefix": "/react-blog",\n      "buildTime": "2019-03-05T13:40:39.129Z"\n    }\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},'query {\n  allFile(filter: {sourceInstanceName: {eq: "posts"}}) {\n    edges {\n      node {\n        relativePath\n        prettySize\n        root\n        dir\n        name\n        ext\n        internal {\n          mediaType\n        }\n        publicURL\n      }\n    }\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "allFile": {\n      "edges": [\n        {\n          "node": {\n            "relativePath": "gitBasicNotes.md",\n            "prettySize": "28.1 kB",\n            "root": "D:/",\n            "dir": "D:/Work/Source/react-blog/gatsby/_posts",\n            "name": "gitBasicNotes",\n            "ext": ".md",\n            "internal": {\n              "mediaType": "text/markdown"\n            },\n            "publicURL": "/static/gitBasicNotes-f4bad03605183759bb31c2db3ba69e53.md"\n          }\n        },\n        {\n          "node": {\n            "relativePath": "reactjsBasicNotes.md",\n            "prettySize": "5.87 kB",\n            "root": "D:/",\n            "dir": "D:/Work/Source/react-blog/gatsby/_posts",\n            "name": "reactjsBasicNotes",\n            "ext": ".md",\n            "internal": {\n              "mediaType": "text/markdown"\n            },\n            "publicURL": "/static/reactjsBasicNotes-a1d04d35063f3e13e6e7302aa40ef1ce.md"\n          }\n        }\n      ]\n    }\n  }\n}\n')))}d.isMDXComponent=!0}}]);