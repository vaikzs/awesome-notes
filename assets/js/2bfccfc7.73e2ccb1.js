"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[3060],{3905:function(e,n,a){a.d(n,{Zo:function(){return d},kt:function(){return p}});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),m=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},d=function(e){var n=m(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=m(a),p=i,k=u["".concat(s,".").concat(p)]||u[p]||c[p]||l;return a?t.createElement(k,r(r({ref:n},d),{},{components:a})):t.createElement(k,r({ref:n},d))}));function p(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=a[m];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7739:function(e,n,a){a.r(n),a.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return c}});var t=a(7462),i=a(3366),l=(a(7294),a(3905)),r=["components"],o={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Programming","Tools","CMake"]},s="CMake Basic Notes",m={unversionedId:"programming/tools/buildTools/CMakeBasicNotes",id:"programming/tools/buildTools/CMakeBasicNotes",title:"CMake Basic Notes",description:"Basic Build System",source:"@site/notes/programming/tools/buildTools/CMakeBasicNotes.md",sourceDirName:"programming/tools/buildTools",slug:"/programming/tools/buildTools/CMakeBasicNotes",permalink:"/awesome-notes/programming/tools/buildTools/CMakeBasicNotes",editUrl:"https://github.com/sabertazimi/awesome-notes/edit/main/notes/programming/tools/buildTools/CMakeBasicNotes.md",tags:[{label:"Programming",permalink:"/awesome-notes/tags/programming"},{label:"Tools",permalink:"/awesome-notes/tags/tools"},{label:"CMake",permalink:"/awesome-notes/tags/c-make"}],version:"current",lastUpdatedBy:"sabertazimi",lastUpdatedAt:1649250539,formattedLastUpdatedAt:"4/6/2022",frontMatter:{author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Programming","Tools","CMake"]},sidebar:"sidebar",previous:{title:"Linux Basic Notes",permalink:"/awesome-notes/programming/linux/linuxBasicNotes"},next:{title:"Git Basic Notes",permalink:"/awesome-notes/programming/tools/git/gitBasicNotes"}},d={},c=[{value:"Basic Build System",id:"basic-build-system",level:2},{value:"Basic Options",id:"basic-options",level:3},{value:"Flow Control",id:"flow-control",level:2},{value:"if control",id:"if-control",level:3},{value:"foreach control",id:"foreach-control",level:3},{value:"while control",id:"while-control",level:3},{value:"function control",id:"function-control",level:3},{value:"Basic Usage of Function",id:"basic-usage-of-function",level:4},{value:"Parse Arguments of Function",id:"parse-arguments-of-function",level:4},{value:"Useful Command",id:"useful-command",level:2},{value:"Checking Command",id:"checking-command",level:3},{value:"Testing Command",id:"testing-command",level:3},{value:"Option Command",id:"option-command",level:3},{value:"Math Command",id:"math-command",level:3},{value:"List Command",id:"list-command",level:3},{value:"Package Command",id:"package-command",level:3},{value:"Install Command",id:"install-command",level:3},{value:"install binaries",id:"install-binaries",level:4},{value:"install normal files",id:"install-normal-files",level:4},{value:"install scripts",id:"install-scripts",level:4},{value:"install directories",id:"install-directories",level:4},{value:"Install Demo",id:"install-demo",level:4},{value:"find packages",id:"find-packages",level:3},{value:"Basic Usage of Find",id:"basic-usage-of-find",level:4},{value:"Find CMake",id:"find-cmake",level:4},{value:"Full Find Demo",id:"full-find-demo",level:4},{value:"Useful Tools",id:"useful-tools",level:2},{value:"Config Command",id:"config-command",level:2},{value:"Version Config",id:"version-config",level:3},{value:"Project Config",id:"project-config",level:3},{value:"Environment Config",id:"environment-config",level:3},{value:"Library for Clients Usage",id:"library-for-clients-usage",level:3},{value:"Test Setting",id:"test-setting",level:2},{value:"Generator Expression",id:"generator-expression",level:2},{value:"Submodule and Dependencies",id:"submodule-and-dependencies",level:2},{value:"CMake Patterns",id:"cmake-patterns",level:2},{value:"Modern CMake",id:"modern-cmake",level:3},{value:"Interface vs Private",id:"interface-vs-private",level:4},{value:"Nice Patterns",id:"nice-patterns",level:3},{value:"Anti Patterns",id:"anti-patterns",level:3},{value:"Makefile Notes",id:"makefile-notes",level:2},{value:"Makefile Macro",id:"makefile-macro",level:3},{value:"Built-in Makefile Macro",id:"built-in-makefile-macro",level:4},{value:"Built-in Makefile Variable",id:"built-in-makefile-variable",level:3},{value:"Makefile Inexplicit Rules",id:"makefile-inexplicit-rules",level:3},{value:"Makefile C Rules",id:"makefile-c-rules",level:4},{value:"Makefile C++ Rules",id:"makefile-c-rules-1",level:4},{value:"Makefile ASM Rules",id:"makefile-asm-rules",level:4},{value:"Makefile Object Linking",id:"makefile-object-linking",level:4},{value:"Makefile Function",id:"makefile-function",level:3},{value:"Makefile Best Practice",id:"makefile-best-practice",level:3},{value:"Reference",id:"reference",level:2}],u={toc:c};function p(e){var n=e.components,a=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cmake-basic-notes"},"CMake Basic Notes"),(0,l.kt)("h2",{id:"basic-build-system"},"Basic Build System"),(0,l.kt)("p",null,"Build for executable:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'cmake_minimum_required(VERSION 2.8.9)\nproject(directory_test)\n\nadd_definitions(-DUSEXX)\nadd_compile_options(-std=c++11 -Wall -Wextra)\n\n# Bring the headers, such as Student.h into the project\ninclude_directories(include)\n\n# Can manually add the sources using the set command as follows:\n# set(SOURCES src/mainApp.cpp src/Student.cpp)\n\n# However, the file(GLOB...) allows for wildcard additions:\nfile(GLOB SOURCES "src/*.cpp")\n\nmessage(STATUS "CMake demo: build for executable")\n\nadd_executable(testStudent ${SOURCES})\n')),(0,l.kt)("p",null,"build for library"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'cmake_minimum_required(VERSION 2.8.9)\nproject(directory_test)\nset(CMAKE_BUILD_TYPE Release)\n\n# Bring the headers, such as Student.h into the project\ninclude_directories(include)\n\n# However, the file(GLOB...) allows for wildcard additions:\nfile(GLOB SOURCES "src/*.cpp")\n\n# Generate the shared library from the sources\n# flag: SHARED, STATIC, MODULE\nadd_library(testStudent SHARED ${SOURCES})\n\nmessage(STATUS "CMake demo: build for library")\n\n# Set the location for library installation -- i.e., /usr/lib in this case\n# not really necessary in this example. Use "sudo make install" to apply\ninstall(TARGETS testStudent DESTINATION /usr/lib)\n')),(0,l.kt)("p",null,"use a shared or static library"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'cmake_minimum_required(VERSION 2.8.9)\nproject(TestLibrary)\n\n# For the shared library:\nset(PROJECT_LINK_LIBS libTestStudent.so)\nlink_directories(~/exploringBB/extras/cmake/studentLib_shared/build)\n\n# For the static library:\n# set (PROJECT_LINK_LIBS libTestStudent.a)\n# link_directories(~/exploringBB/extras/cmake/studentLib_static/build)\n\ninclude_directories(~/exploringBB/extras/cmake/studentLib_shared/include)\n\nadd_executable(libTest libTest.cpp)\ntarget_link_libraries(libTest ${PROJECT_LINK_LIBS} )\n\nmessage(STATUS "CMake demo: use library")\n')),(0,l.kt)("p",null,"set output of library"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# \u6307\u5b9alib\u8f93\u51fa\u76ee\u5f55\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n# \u6307\u5b9a\u7248\u672c\nset(DEMO5_VERSION_MAJOR 1)\nset(DEMO5_VERSION_MINOR 1)\nset(DEMO5_VERSION_PATCH 1)\nset(DEMO5_VERSION ${DEMO5_VERSION_MAJOR}.${DEMO5_VERSION_MINOR}.${DEMO5_VERSION_PATCH})\n\naux_source_directory(. SRC_LIST)\n\nadd_library(demo5 SHARED ${SRC_LIST})\nset_target_properties(\n    demo5 PROPERTIES\n    VERSION ${DEMO5_VERSION}\n    SOVERSION ${DEMO5_VERSION_MAJOR}\n)\n")),(0,l.kt)("p",null,"build for library and executable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cmake_minimum_required(VERSION 3.5)\nproject(MiniSat VERSION 2.2 LANGUAGES CXX)\n\nadd_library(libMiniSat STATIC\n    miniSat/core/Solver.cc\n    miniSat/utils/Options.cc\n    miniSat/utils/System.cc\n    miniSat/simp/SimpSolver.cc\n)\n\ntarget_compile_features(libMiniSat\n    PUBLIC\n      cxx_attributes\n      cxx_defaulted_functions\n      cxx_deleted_functions\n      cxx_final\n)\n\ntarget_include_directories(libMiniSat PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})\n\ntarget_compile_definitions(libMiniSat PUBLIC __STDC_LIMIT_MACROS __STDC_FORMAT_MACROS)\n\n# Also build the two MiniSat executables\nadd_executable(miniSat miniSat/core/Main.cc)\ntarget_link_libraries(miniSat libMiniSat)\n\nadd_executable(miniSat-simp miniSat/simp/Main.cc)\ntarget_link_libraries(miniSat-simp libMiniSat)\n")),(0,l.kt)("h3",{id:"basic-options"},"Basic Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"make VERBOSE=1\n")),(0,l.kt)("p",null,"Standard options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-DCMAKE_BUILD_TYPE=")," Pick from Release, RelWithDebInfo, Debug, or sometimes more"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-DCMAKE_INSTALL_PREFIX=")," /usr/local (the default), ~/.local"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-D BUILD_SHARED_LIBS=")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--trace")," print every line of CMake")),(0,l.kt)("h2",{id:"flow-control"},"Flow Control"),(0,l.kt)("h3",{id:"if-control"},"if control"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unary:\xa0NOT,\xa0TARGET,\xa0EXISTS\xa0(file),\xa0DEFINED"),(0,l.kt)("li",{parentName:"ul"},"Binary:\xa0STREQUAL,\xa0AND,\xa0OR,\xa0MATCHES(regular expression),\xa0VERSION_LESS,\xa0VERSION_LESS_EQUAL")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'if(WIN32)\n    message("This is win32 platform")\nelse()\n    message("This is not win32 platform")\nendif()\n')),(0,l.kt)("h3",{id:"foreach-control"},"foreach control"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'set(FOR_LIST demo1.cpp demo2.cpp demo3.cpp)\nforeach(f ${FOR_LIST})\n    message("now is file: " ${f})\nendforeach ()\n')),(0,l.kt)("h3",{id:"while-control"},"while control"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'set(A "1")\nset(B "1")\nwhile(A LESS "1000000")\n    message("${A}")                 # Print A\n    math(EXPR T "${A} + ${B}")      # Add values of A and B; store result in T\n    set(A "${B}")                   # Assign the value of B to A\n    set(B "${T}")                   # Assign the value of T to B\nendwhile()\n')),(0,l.kt)("h3",{id:"function-control"},"function control"),(0,l.kt)("h4",{id:"basic-usage-of-function"},"Basic Usage of Function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'function(doubleIt VALUE)\n    math(EXPR RESULT "${VALUE} * 2")\n    message("${RESULT}")\nendfunction()\n\ndoubleIt("4")          # Prints: 8\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'function(doubleIt VARNAME VALUE)\n    math(EXPR RESULT "${VALUE} * 2")\n    set(${VARNAME} "${RESULT}" PARENT_SCOPE)\nendfunction()\n\ndoubleIt(RESULT "4")   # Tell the function to set the variable named RESULT\nmessage("${RESULT}")   # Prints: 8\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'function(doubleEach)\n    foreach(ARG ${ARGN})           # Iterate over each argument\n        math(EXPR N "${ARG} * 2")  # Double ARG numeric value\n        message("${N}")            # Print N\n    endforeach()\nendfunction()\n\ndoubleEach(5 6 7 8)                # Prints 10, 12, 14, 16 on separate lines\n')),(0,l.kt)("h4",{id:"parse-arguments-of-function"},"Parse Arguments of Function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'function(COMPLEX)\ncmake_parse_arguments(\n    COMPLEX_PREFIX\n    "SINGLE;ANOTHER"\n    "ONE_VALUE;ALSO_ONE_VALUE"\n    "MULTI_VALUES"\n    ${ARGN}\n)\n\nendfunction()\n\ncomplex(SINGLE ONE_VALUE value MULTI_VALUES some other values)\n')),(0,l.kt)("p",null,"Inside the function after this call, you'll find:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'COMPLEX_PREFIX_SINGLE = TRUE\nCOMPLEX_PREFIX_ANOTHER = FALSE\nCOMPLEX_PREFIX_ONE_VALUE = "value"\nCOMPLEX_PREFIX_ALSO_ONE_VALUE = <UNDEFINED>\nCOMPLEX_PREFIX_MULTI_VALUES = "some;other;values"\n')),(0,l.kt)("h2",{id:"useful-command"},"Useful Command"),(0,l.kt)("h3",{id:"checking-command"},"Checking Command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# does this system provide the log and exp functions?\ninclude(CheckFunctionExists)\ncheck_function_exists(log HAVE_LOG)\ncheck_function_exists(exp HAVE_EXP)\n")),(0,l.kt)("h3",{id:"testing-command"},"Testing Command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'#define a macro to simplify adding tests, then use it\nmacro(do_test arg result)\n  add_test(TutorialComp${arg} Tutorial ${arg})\n  set_tests_properties(TutorialComp${arg}\n    PROPERTIES PASS_REGULAR_EXPRESSION ${result})\nendmacro(do_test)\n\n# do a bunch of result based tests\ndo_test(25 "25 is 5")\ndo_test(-25 "-25 is 0")\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'include(CTest)\n\n# does the application run\nadd_test (TutorialRuns Tutorial 25)\n\n# does it sqrt of 25\nadd_test (TutorialComp25 Tutorial 25)\nset_tests_properties (TutorialComp25 PROPERTIES PASS_REGULAR_EXPRESSION "25 is 5")\n\n# does it handle negative numbers\nadd_test (TutorialNegative Tutorial -25)\nset_tests_properties (\n    TutorialNegative PROPERTIES\n    PASS_REGULAR_EXPRESSION "-25 is 0"\n)\n\n# does it handle small numbers\nadd_test (TutorialSmall Tutorial 0.0001)\nset_tests_properties (\n    TutorialSmall PROPERTIES\n    PASS_REGULAR_EXPRESSION "0.0001 is 0.01"\n)\n\n# does the usage message work?\nadd_test (TutorialUsage Tutorial)\nset_tests_properties (\n    TutorialUsage PROPERTIES\n    PASS_REGULAR_EXPRESSION "Usage:.*number"\n)\n')),(0,l.kt)("h3",{id:"option-command"},"Option Command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# \u662f\u5426\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u51fd\u6570\uff1f\noption(USE_MATH\n        "Use tutorial provided math implementation" ON)\n\n# add the MathFunctions library?\nif(USE_MATH)\n  include_directories("${PROJECT_SOURCE_DIR}/MathFunctions")\n  add_subdirectory(MathFunctions)\n  set(EXTRA_LIBS ${EXTRA_LIBS} MathFunctions)\nendif(USE_MATH)\n\n# add the executable\nadd_executable(Tutorial tutorial.cxx)\ntarget_link_libraries(Tutorial  ${EXTRA_LIBS})\n')),(0,l.kt)("h3",{id:"math-command"},"Math Command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'set(ARGS "EXPR;T;1 + 1")\nmath(${ARGS})                      # Equivalent to calling math(EXPR T "1 + 1")\n')),(0,l.kt)("h3",{id:"list-command"},"List Command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'set(MY_LIST These are separate arguments)\nlist(REMOVE_ITEM MY_LIST "separate")  # Removes "separate" from the list\nmessage("${MY_LIST}")                 # Prints: These;are;arguments\n')),(0,l.kt)("h3",{id:"package-command"},"Package Command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# build a CPack driven installer package\ninclude(InstallRequiredSystemLibraries)\nset(CPACK_RESOURCE_FILE_LICENSE\n     "${CMAKE_CURRENT_SOURCE_DIR}/License.txt")\nset(CPACK_PACKAGE_VERSION_MAJOR "${Tutorial_VERSION_MAJOR}")\nset(CPACK_PACKAGE_VERSION_MINOR "${Tutorial_VERSION_MINOR}")\ninclude(CPack)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cpack --config CPackConfig.cmake\ncpack --config CPackSourceConfig.cmake\n")),(0,l.kt)("h3",{id:"install-command"},"Install Command"),(0,l.kt)("h4",{id:"install-binaries"},"install binaries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSTALL(TARGETS targets...\n        [[ARCHIVE|LIBRARY|RUNTIME]\n        [DESTINATION < dir >]\n        [PERMISSIONS permissions...]\n        [CONFIGURATIONS\n        [Debug|Release|...]]\n        [COMPONENT < component >]\n        [OPTIONAL]\n        ] [...])\n\nINSTALL(TARGETS myRun myLib myStaticLib\n        RUNTIME DESTINATION bin\n        LIBRARY DESTINATION lib\n        ARCHIVE DESTINATION libStatic\uff09\n")),(0,l.kt)("h4",{id:"install-normal-files"},"install normal files"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSTALL(FILES files... DESTINATION <dir>\n     [PERMISSIONS permissions...]\n     [CONFIGURATIONS [Debug|Release|...]]\n     [COMPONENT <component>]\n     [RENAME <name>] [OPTIONAL])\n\n\nINSTALL(FILES COPYRIGHT README DESTINATION share/doc/cmake/t2)\n")),(0,l.kt)("h4",{id:"install-scripts"},"install scripts"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSTALL(PROGRAMS files... DESTINATION <dir>\n     [PERMISSIONS permissions...]\n     [CONFIGURATIONS [Debug|Release|...]]\n     [COMPONENT <component>]\n     [RENAME <name>] [OPTIONAL])\n\n\nINSTALL(PROGRAMS runHello.sh DESTINATION bin)\n")),(0,l.kt)("h4",{id:"install-directories"},"install directories"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'INSTALL(DIRECTORY dirs... DESTINATION <dir>\n     [FILE_PERMISSIONS permissions...]\n     [DIRECTORY_PERMISSIONS permissions...]\n     [USE_SOURCE_PERMISSIONS]\n     [CONFIGURATIONS [Debug|Release|...]]\n     [COMPONENT <component>]\n     [[PATTERN <pattern> | REGEX <regex>]\n     [EXCLUDE] [PERMISSIONS permissions...]] [...])\n\nINSTALL(DIRECTORY icons scripts/ DESTINATION share/myProj\n     PATTERN "CVS" EXCLUDE\n     PATTERN "scripts/*"\n     PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ\n     GROUP_EXECUTE GROUP_READ)\n')),(0,l.kt)("h4",{id:"install-demo"},"Install Demo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"find_package(Bar 2.0 REQUIRED)\nadd_library(Foo ...)\ntarget_link_libraries(Foo PRIVATE Bar::Bar)\n\ninstall(TARGETS Foo EXPORT FooTargets\n  LIBRARY DESTINATION lib\n  ARCHIVE DESTINATION lib\n  RUNTIME DESTINATION bin\n  INCLUDES DESTINATION include\n)\n\ninstall(EXPORT FooTargets\n  FILE FooTargets.cmake\n  NAMESPACE Foo::\n  DESTINATION lib/cmake/Foo\n)\n")),(0,l.kt)("h3",{id:"find-packages"},"find packages"),(0,l.kt)("p",null,"find modules"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cmake \u2013-help-module-list\nls /usr/share/cmake/Modules/\n\ncmake --help-module FindBZip2\n")),(0,l.kt)("h4",{id:"basic-usage-of-find"},"Basic Usage of Find"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"project(helloWorld)\nadd_executable(helloWorld hello.c)\nfind_package (BZip2)\nif (BZIP2_FOUND)\n    include_directories(${BZIP_INCLUDE_DIRS})\n    target_link_libraries(helloWorld ${BZIP2_LIBRARIES})\nendif (BZIP2_FOUND)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'find_path(Foo_INCLUDE_DIR foo.h)\nfind_library(Foo_LIBRARY foo)\nmark_as_advanced(Foo_INCLUDE_DIR Foo_LIBRARY)\n\ninclude(FindPackageHandleStandardArgs)\nfind_package_handle_standard_args(Foo\n  REQUIRED_VARS Foo_LIBRARY Foo_INCLUDE_DIR\n)\n\nif(Foo_FOUND AND NOT TARGET Foo::Foo)\n  add_library(Foo::Foo UNKNOWN IMPORTED)\n  set_target_properties(Foo::Foo PROPERTIES\n    IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"\n    IMPORTED_LOCATION "${Foo_LIBRARY}"\n    INTERFACE_INCLUDE_DIRECTORIES "${Foo_INCLUDE_DIR}"\n  )\nendif()\n')),(0,l.kt)("h4",{id:"find-cmake"},"Find CMake"),(0,l.kt)("p",null,"Find.cmake: add find module for project"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# cmake/FindDEMO9LIB.cmake\n# \u8f85\u52a9\u8f93\u51fa\u4fe1\u606f\nmessage("now using FindDEMO9LIB.cmake find demo9 lib")\n\n# \u5c06demo9.h\u6587\u4ef6\u8def\u5f84\u8d4b\u503c\u7ed9DEMO9LIB_INCLUDE_DIR\nFIND_PATH(DEMO9LIB_INCLUDE_DIR demo9.h /usr/include/demo9/\n        /usr/local/demo9/include/)\nmessage("./h dir ${DEMO9LIB_INCLUDE_DIR}")\n\n# \u5c06libDemo9_lib.a\u6587\u4ef6\u8def\u5f84\u8d4b\u503c\u7ed9DEMO9LIB_LIBRARY\nFIND_LIBRARY(DEMO9LIB_LIBRARY libDemo9_lib.a /usr/local/demo9/lib/)\nmessage("lib dir: ${DEMO9LIB_LIBRARY}")\n\nif(DEMO9LIB_INCLUDE_DIR AND DEMO9LIB_LIBRARY)\n    # \u8bbe\u7f6e\u53d8\u91cf\u7ed3\u679c\n    set(DEMO9LIB_FOUND TRUE)\nendif(DEMO9LIB_INCLUDE_DIR AND DEMO9LIB_LIBRARY)\n')),(0,l.kt)("h4",{id:"full-find-demo"},"Full Find Demo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# CMakeLists.txt\ncmake_minimum_required(VERSION 3.5)\n\nproject(demo9)\n\n# create libDemo9_lib.a\nset(SRC_LIB demo9.cpp)\nadd_library(demo9_lib STATIC ${SRC_LIB})\n\n# install it\ninstall(TARGETS demo9_lib DESTINATION demo9/lib)\ninstall(FILES demo9.h DESTINATION demo9/include)\n\n# create demo9_main executable\nset(SRC_EXE demo9_main.cpp)\n\n# set demo9_lib cmake module path\nset(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\nmessage("cmake_module_path: ${CMAKE_MODULE_PATH}")\nfind_package(DEMO9LIB)\n\nif(DEMO9LIB_FOUND)\n    add_executable(demo9_main ${SRC_EXE})\n    message("found demo9 ${DEMO9LIB_INCLUDE_DIR} ${DEMO9LIB_LIBRARY}")\n    include_directories(${DEMO9LIB_INCLUDE_DIR})\n    target_link_libraries(demo9_main ${DEMO9LIB_LIBRARY})\nelse()\n    message("not found DEMO9LIB_FOUND")\nendif(DEMO9LIB_FOUND)\n')),(0,l.kt)("h2",{id:"useful-tools"},"Useful Tools"),(0,l.kt)("p",null,"ldd and ar"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ldd library.so\nar -t library.a\n")),(0,l.kt)("p",null,"Makefile"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# -----------------------------------------------------------------------------\n# CMake project wrapper Makefile ----------------------------------------------\n# -----------------------------------------------------------------------------\n\nSHELL := /bin/bash\nRM    := rm -rf\nMKDIR := mkdir -p\n\nall: ./build/Makefile\n    @ $(MAKE) -C build\n\n./build/Makefile:\n    @  ($(MKDIR) build > /dev/null)\n    @  (cd build > /dev/null 2>&1 && cmake ..)\n\nclean:\n    @  ($(MKDIR) build > /dev/null)\n    @  (cd build > /dev/null 2>&1 && cmake .. > /dev/null 2>&1)\n    @- $(MAKE) --silent -C build clean || true\n    @- $(RM) ./build/Makefile\n    @- $(RM) ./build/src\n    @- $(RM) ./build/test\n    @- $(RM) ./build/CMake*\n    @- $(RM) ./build/cmake.*\n    @- $(RM) ./build/*.cmake\n    @- $(RM) ./build/*.txt\n\nifeq ($(findstring clean,$(MAKECMDGOALS)),)\n    $(MAKECMDGOALS): ./build/Makefile\n    @ $(MAKE) -C build $(MAKECMDGOALS)\nendif\n")),(0,l.kt)("h2",{id:"config-command"},"Config Command"),(0,l.kt)("h3",{id:"version-config"},"Version Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cmake_minimum_required(VERSION 3.1)\n\nif(${CMAKE_VERSION} VERSION_LESS 3.13)\n  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})\nelse()\n  cmake_policy(VERSION 3.13)\nendif()\n")),(0,l.kt)("h3",{id:"project-config"},"Project Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'project(MyProject VERSION 1.0 DESCRIPTION "Very nice project" LANGUAGES CXX)\n')),(0,l.kt)("h3",{id:"environment-config"},"Environment Config"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"set(ENV{variable_name} value)")," and get\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"$ENV{variable_name}"),"\xa0environment variables"),(0,l.kt)("h3",{id:"library-for-clients-usage"},"Library for Clients Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'include(CMakePackageConfigHelpers)\nwrite_basic_package_version_file("FooConfigVersion.cmake"\n  VERSION ${Foo_VERSION}\n  COMPATIBILITY SameMajorVersion\n)\n\ninstall(FILES "FooConfig.cmake" "FooConfigVersion.cmake"\n  DESTINATION lib/cmake/Foo\n)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'include(CMakeFindDependencyMacro)\nfind_dependency(Bar 2.0)\ninclude("${CMAKE_CURRENT_LIST_DIR}/FooTargets.cmake")\n')),(0,l.kt)("h2",{id:"test-setting"},"Test Setting"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'set(CTEST_SOURCE_DIRECTORY "/source")\nset(CTEST_BINARY_DIRECTORY "/binary")\n\nset(ENV{CXXFLAGS} "--coverage")\nset(CTEST_CMAKE_GENERATOR "Ninja")\nset(CTEST_USE_LAUNCHERS 1)\n\nset(CTEST_COVERAGE_COMMAND "gcov")\nset(CTEST_MEMORYCHECK_COMMAND "valgrind")\n#set(CTEST_MEMORYCHECK_TYPE "ThreadSanitizer")\n\nctest_start("Continuous")\nctest_configure()\nctest_build()\nctest_test()\nctest_coverage()\nctest_memcheck()\nctest_submit()\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"macro(package_add_test TESTNAME)\n    add_executable(${TESTNAME} ${ARGN})\n    target_link_libraries(${TESTNAME} gtest gmock gtest_main)\n    add_test(${TESTNAME} COMMAND ${TESTNAME})\n    set_target_properties(${TESTNAME} PROPERTIES FOLDER tests)\nendmacro()\n\npackage_add_test(test1 test1.cpp)\n")),(0,l.kt)("h2",{id:"generator-expression"},"Generator Expression"),(0,l.kt)("p",null,"Most CMake commands happen at configure time,\ninclude the if statements seen above.\nGenerator expressions were added at runtime.\nThey are evaluated in target properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If you want to put a compile flag only for the DEBUG configuration"),(0,l.kt)("li",{parentName:"ul"},"Limiting an item to a certain language only, such as CXX"),(0,l.kt)("li",{parentName:"ul"},"Accessing configuration dependent properties, like target file location"),(0,l.kt)("li",{parentName:"ul"},"Giving a different location for build and install directories")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'target_include_directories(MyTarget PUBLIC\n  $<BUILD_INTERFACE:"${CMAKE_CURRENT_SOURCE_DIR}/include">\n  $<INSTALL_INTERFACE:include>\n)\n')),(0,l.kt)("h2",{id:"submodule-and-dependencies"},"Submodule and Dependencies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'find_package(Git QUIET)\n\nif(GIT_FOUND AND EXISTS "${PROJECT_SOURCE_DIR}/.git")\n  execute_process(COMMAND\n    ${GIT_EXECUTABLE} submodule update --init --recursive\n    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} RESULT_VARIABLE GIT_SUBMOD_RESULT\n  )\n\n  if(NOT GIT_SUBMOD_RESULT EQUAL "0")\n    message(FATAL_ERROR "git submodule update --init failed with ${GIT_SUBMOD_RESULT}")\n  endif()\nendif()\n')),(0,l.kt)("h2",{id:"cmake-patterns"},"CMake Patterns"),(0,l.kt)("h3",{id:"modern-cmake"},"Modern CMake"),(0,l.kt)("p",null,"Modern CMake is all about targets and properties."),(0,l.kt)("p",null,"Constructors of Targets:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"add_executable()"),(0,l.kt)("li",{parentName:"ul"},"add_library()")),(0,l.kt)("p",null,"Member variables of Targets:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Target properties")),(0,l.kt)("p",null,"Member functions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"get_target_property()"),(0,l.kt)("li",{parentName:"ul"},"set_target_properties()"),(0,l.kt)("li",{parentName:"ul"},"get_property(TARGET)"),(0,l.kt)("li",{parentName:"ul"},"set_property(TARGET)"),(0,l.kt)("li",{parentName:"ul"},"target_compile_definitions()"),(0,l.kt)("li",{parentName:"ul"},"target_compile_features()"),(0,l.kt)("li",{parentName:"ul"},"target_compile_options()"),(0,l.kt)("li",{parentName:"ul"},"target_include_directories()"),(0,l.kt)("li",{parentName:"ul"},"target_link_libraries()"),(0,l.kt)("li",{parentName:"ul"},"target_sources()")),(0,l.kt)("h4",{id:"interface-vs-private"},"Interface vs Private"),(0,l.kt)("p",null,"interface properties model usage requirements,\nwhereas private properties model build requirements of targets."),(0,l.kt)("h3",{id:"nice-patterns"},"Nice Patterns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Think in targets (Object-Oriented)"),(0,l.kt)("li",{parentName:"ul"},"Export your interface: You should be able to run from build or install"),(0,l.kt)("li",{parentName:"ul"},"Write a Config.cmake file: This is what a library author should do to support clients"),(0,l.kt)("li",{parentName:"ul"},"Make ALIAS targets to keep usage consistent"),(0,l.kt)("li",{parentName:"ul"},"Combine common functionality into clearly documented functions"),(0,l.kt)("li",{parentName:"ul"},"Use lowercase function names"),(0,l.kt)("li",{parentName:"ul"},"Upper case is for variables"),(0,l.kt)("li",{parentName:"ul"},"Use cmake_policy and/or range of versions")),(0,l.kt)("h3",{id:"anti-patterns"},"Anti Patterns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Do not use global functions: e.g ",(0,l.kt)("inlineCode",{parentName:"li"},"link_directories"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"include_libraries")),(0,l.kt)("li",{parentName:"ul"},"Don't add unneeded PUBLIC requirements e.g ",(0,l.kt)("inlineCode",{parentName:"li"},"-Wall")),(0,l.kt)("li",{parentName:"ul"},"Don't GLOB files"),(0,l.kt)("li",{parentName:"ul"},"Link to built files directly: Always link to targets if available"),(0,l.kt)("li",{parentName:"ul"},"Never skip PUBLIC/PRIVATE when linking")),(0,l.kt)("h2",{id:"makefile-notes"},"Makefile Notes"),(0,l.kt)("h3",{id:"makefile-macro"},"Makefile Macro"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"foo := a.o b.o c.o\nbar := $(foo:.o=.c)\nfirst_second = Hello\na = first\nb = second\nall = $($a_$b)\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"$a_$b")," \u7ec4\u6210\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"first_second"),", \u4e8e\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"$(all)")," \u7684\u503c\u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"Hello"),"."),(0,l.kt)("h4",{id:"built-in-makefile-macro"},"Built-in Makefile Macro"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AR: \u51fd\u6570\u5e93\u6253\u5305\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"ar"),"."),(0,l.kt)("li",{parentName:"ul"},"AS: \u6c47\u7f16\u8bed\u8a00\u7f16\u8bd1\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"as"),"."),(0,l.kt)("li",{parentName:"ul"},"CC: C \u8bed\u8a00\u7f16\u8bd1\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"cc"),"."),(0,l.kt)("li",{parentName:"ul"},"CXX: C++\u8bed\u8a00\u7f16\u8bd1\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"g++"),"."),(0,l.kt)("li",{parentName:"ul"},"CO: \u4ece RCS \u6587\u4ef6\u4e2d\u6269\u5c55\u6587\u4ef6\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"co"),"."),(0,l.kt)("li",{parentName:"ul"},"CPP: C \u7a0b\u5e8f\u7684\u9884\u5904\u7406\u5668\uff08\u8f93\u51fa\u662f\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\uff09. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"$(CC) \u2013E"),"."),(0,l.kt)("li",{parentName:"ul"},"FC: Fortran \u548c RatFor \u7684\u7f16\u8bd1\u5668\u548c\u9884\u5904\u7406\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"f77"),"."),(0,l.kt)("li",{parentName:"ul"},"GET: \u4ece SCCS \u6587\u4ef6\u4e2d\u6269\u5c55\u6587\u4ef6\u7684\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"get"),"."),(0,l.kt)("li",{parentName:"ul"},"LEX: Lex \u65b9\u6cd5\u5206\u6790\u5668\u7a0b\u5e8f\uff08\u9488\u5bf9\u4e8e C \u6216 RatFor\uff09. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"lex"),"."),(0,l.kt)("li",{parentName:"ul"},"PC: Pascal \u8bed\u8a00\u7f16\u8bd1\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"pc"),"."),(0,l.kt)("li",{parentName:"ul"},"YACC: Yacc \u6587\u6cd5\u5206\u6790\u5668\uff08\u9488\u5bf9\u4e8e C \u7a0b\u5e8f\uff09. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"yacc"),"."),(0,l.kt)("li",{parentName:"ul"},"YACCR: Yacc \u6587\u6cd5\u5206\u6790\u5668\uff08\u9488\u5bf9\u4e8e RatFor \u7a0b\u5e8f\uff09. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"yacc \u2013r"),"."),(0,l.kt)("li",{parentName:"ul"},"MAKEINFO: \u8f6c\u6362 TexInfo \u6e90\u6587\u4ef6\uff08.texi\uff09\u5230 Info \u6587\u4ef6\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"makeinfo"),"."),(0,l.kt)("li",{parentName:"ul"},"TEX: \u4ece TeX \u6e90\u6587\u4ef6\u521b\u5efa TeX DVI \u6587\u4ef6\u7684\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"tex"),"."),(0,l.kt)("li",{parentName:"ul"},"TEXI2DVI: \u4ece TexInfo \u6e90\u6587\u4ef6\u521b\u5efa\u519b TeX DVI \u6587\u4ef6\u7684\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"texi2dvi"),"."),(0,l.kt)("li",{parentName:"ul"},"WEAVE: \u8f6c\u6362 Web \u5230 TeX \u7684\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"weave"),"."),(0,l.kt)("li",{parentName:"ul"},"CWEAVE: \u8f6c\u6362 C Web \u5230 TeX \u7684\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"cweave"),"."),(0,l.kt)("li",{parentName:"ul"},"TANGLE: \u8f6c\u6362 Web \u5230 Pascal \u8bed\u8a00\u7684\u7a0b\u5e8f. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"tangle"),"."),(0,l.kt)("li",{parentName:"ul"},"CTANGLE: \u8f6c\u6362 C Web \u5230 C. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"ctangle"),"."),(0,l.kt)("li",{parentName:"ul"},"RM: \u5220\u9664\u6587\u4ef6\u547d\u4ee4. \u9ed8\u8ba4\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"rm \u2013f"),"."),(0,l.kt)("li",{parentName:"ul"},"ARFLAGS: \u51fd\u6570\u5e93\u6253\u5305\u7a0b\u5e8f AR \u547d\u4ee4\u7684\u53c2\u6570. \u9ed8\u8ba4\u503c\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"rv"),"."),(0,l.kt)("li",{parentName:"ul"},"ASFLAGS: \u6c47\u7f16\u8bed\u8a00\u7f16\u8bd1\u5668\u53c2\u6570. \uff08\u5f53\u660e\u663e\u5730\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},".s"),"\u6216 ",(0,l.kt)("inlineCode",{parentName:"li"},".S"),"\u6587\u4ef6\u65f6\uff09."),(0,l.kt)("li",{parentName:"ul"},"CFLAGS: C \u8bed\u8a00\u7f16\u8bd1\u5668\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"CXXFLAGS: C++\u8bed\u8a00\u7f16\u8bd1\u5668\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"COFLAGS: RCS \u547d\u4ee4\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"CPPFLAGS: C \u9884\u5904\u7406\u5668\u53c2\u6570. (C \u548c Fortran \u7f16\u8bd1\u5668\u4e5f\u4f1a\u7528\u5230\uff09."),(0,l.kt)("li",{parentName:"ul"},"FFLAGS: Fortran \u8bed\u8a00\u7f16\u8bd1\u5668\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"GFLAGS: SCCS ",(0,l.kt)("inlineCode",{parentName:"li"},"get")," \u7a0b\u5e8f\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"LDFLAGS: \u94fe\u63a5\u5668\u53c2\u6570. (\u5982: ",(0,l.kt)("inlineCode",{parentName:"li"},"ld"),")."),(0,l.kt)("li",{parentName:"ul"},"LFLAGS: Lex \u6587\u6cd5\u5206\u6790\u5668\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"PFLAGS: Pascal \u8bed\u8a00\u7f16\u8bd1\u5668\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"RFLAGS: RatFor \u7a0b\u5e8f\u7684 Fortran \u7f16\u8bd1\u5668\u53c2\u6570."),(0,l.kt)("li",{parentName:"ul"},"YFLAGS: Yacc \u6587\u6cd5\u5206\u6790\u5668\u53c2\u6570.")),(0,l.kt)("h3",{id:"built-in-makefile-variable"},"Built-in Makefile Variable"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$@"),': \u8868\u793a\u89c4\u5219\u4e2d\u7684\u76ee\u6807\u6587\u4ef6\u96c6. \u5728\u6a21\u5f0f\u89c4\u5219\u4e2d, \u5982\u679c\u6709\u591a\u4e2a\u76ee\u6807\uff0c\u90a3\u4e48 "$@"\u5c31\u662f\u5339\u914d\u4e8e\u76ee\u6807\u4e2d\u6a21\u5f0f\u5b9a\u4e49\u7684\u96c6\u5408.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$%"),": \u4ec5\u5f53\u76ee\u6807\u662f\u51fd\u6570\u5e93\u6587\u4ef6\u4e2d\uff0c\u8868\u793a\u89c4\u5219\u4e2d\u7684\u76ee\u6807\u6210\u5458\u540d.\n\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u76ee\u6807\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"foo.a(bar.o)"),"\uff0c\u90a3\u4e48 ",(0,l.kt)("inlineCode",{parentName:"li"},"$%")," \u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"bar.o"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"$@")," \u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"foo.a"),".\n\u5982\u679c\u76ee\u6807\u4e0d\u662f\u51fd\u6570\u5e93\u6587\u4ef6 (Unix \u4e0b\u662f",(0,l.kt)("inlineCode",{parentName:"li"},"[.a]"),", Windows \u4e0b\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"[.lib]"),"), \u90a3\u4e48\u5176\u503c\u4e3a\u7a7a."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$<"),": \u4f9d\u8d56\u76ee\u6807\u4e2d\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\u540d\u5b57. \u5982\u679c\u4f9d\u8d56\u76ee\u6807\u662f\u4ee5\u6a21\u5f0f\uff08\u5373 ",(0,l.kt)("inlineCode",{parentName:"li"},"%"),"\uff09\u5b9a\u4e49\u7684,\n\u90a3\u4e48 ",(0,l.kt)("inlineCode",{parentName:"li"},"$<")," \u5c06\u662f\u7b26\u5408\u6a21\u5f0f\u7684\u4e00\u7cfb\u5217\u7684\u6587\u4ef6\u96c6. \u6ce8\u610f, \u5176\u662f\u4e00\u4e2a\u4e00\u4e2a\u53d6\u51fa\u6765\u7684."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$?"),": \u6240\u6709\u6bd4\u76ee\u6807\u65b0\u7684\u4f9d\u8d56\u76ee\u6807\u7684\u96c6\u5408. \u4ee5\u7a7a\u683c\u5206\u9694."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$^"),": \u6240\u6709\u7684\u4f9d\u8d56\u76ee\u6807\u7684\u96c6\u5408. \u4ee5\u7a7a\u683c\u5206\u9694. \u5982\u679c\u5728\u4f9d\u8d56\u76ee\u6807\u4e2d\u6709\u591a\u4e2a\u91cd\u590d\u7684\uff0c\u90a3\u4e2a\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u53bb\u9664\u91cd\u590d\u7684\u4f9d\u8d56\u76ee\u6807\uff0c\u53ea\u4fdd\u7559\u4e00\u4efd."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$+"),": \u8fd9\u4e2a\u53d8\u91cf\u5f88\u50cf ",(0,l.kt)("inlineCode",{parentName:"li"},"$^"),"\uff0c\u4e5f\u662f\u6240\u6709\u4f9d\u8d56\u76ee\u6807\u7684\u96c6\u5408. \u53ea\u662f\u5b83\u4e0d\u53bb\u9664\u91cd\u590d\u7684\u4f9d\u8d56\u76ee\u6807."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(@D)"),": \u8868\u793a ",(0,l.kt)("inlineCode",{parentName:"li"},"$@")," \u7684\u76ee\u5f55\u90e8\u5206 (\u4e0d\u4ee5\u659c\u6760\u4f5c\u4e3a\u7ed3\u5c3e),\n\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"$@")," \u503c\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"dir/foo.o"),"\uff0c\u90a3\u4e48 ",(0,l.kt)("inlineCode",{parentName:"li"},"$(@D)")," \u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"dir"),"\uff0c\n\u800c\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"$@")," \u4e2d\u6ca1\u6709\u5305\u542b\u659c\u6760\u7684\u8bdd\uff0c\u5176\u503c\u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},".")," (\u5f53\u524d\u76ee\u5f55)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(@F)"),": \u8868\u793a ",(0,l.kt)("inlineCode",{parentName:"li"},"$@")," \u7684\u6587\u4ef6\u90e8\u5206\uff0c\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"$@")," \u503c\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"dir/foo.o"),", \u90a3\u4e48 ",(0,l.kt)("inlineCode",{parentName:"li"},"$(@F)")," \u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"foo.o"),",\n",(0,l.kt)("inlineCode",{parentName:"li"},"$(@F)")," \u76f8\u5f53\u4e8e\u51fd\u6570 ",(0,l.kt)("inlineCode",{parentName:"li"},"$(notdir $@)"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(*D)"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"$(*F)"),": \u548c\u4e0a\u9762\u6240\u8ff0\u7684\u540c\u7406\uff0c\u4e5f\u662f\u53d6\u6587\u4ef6\u7684\u76ee\u5f55\u90e8\u5206\u548c\u6587\u4ef6\u90e8\u5206.\n\u5bf9\u4e8e\u4e0a\u9762\u7684\u90a3\u4e2a\u4f8b\u5b50\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"$(*D)")," \u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"li"},"dir"),"\uff0c\u800c ",(0,l.kt)("inlineCode",{parentName:"li"},"$(*F)")," \u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"li"},"foo"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(%D)"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"$(%F)"),": \u5206\u522b\u8868\u793a\u4e86\u51fd\u6570\u5305\u6587\u4ef6\u6210\u5458\u7684\u76ee\u5f55\u90e8\u5206\u548c\u6587\u4ef6\u90e8\u5206.\n\u8fd9\u5bf9\u4e8e\u5f62\u540c ",(0,l.kt)("inlineCode",{parentName:"li"},"archive(member)")," \u5f62\u5f0f\u7684\u76ee\u6807\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"member")," \u4e2d\u5305\u542b\u4e86\u4e0d\u540c\u7684\u76ee\u5f55\u5f88\u6709\u7528."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(<D)"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"$(<F)"),": \u5206\u522b\u8868\u793a\u4f9d\u8d56\u6587\u4ef6\u7684\u76ee\u5f55\u90e8\u5206\u548c\u6587\u4ef6\u90e8\u5206."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(^D)"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"$(^F)"),": \u5206\u522b\u8868\u793a\u6240\u6709\u4f9d\u8d56\u6587\u4ef6\u7684\u76ee\u5f55\u90e8\u5206\u548c\u6587\u4ef6\u90e8\u5206 (\u65e0\u76f8\u540c\u7684)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(+D)"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"$(+F)"),": \u5206\u522b\u8868\u793a\u6240\u6709\u4f9d\u8d56\u6587\u4ef6\u7684\u76ee\u5f55\u90e8\u5206\u548c\u6587\u4ef6\u90e8\u5206 (\u53ef\u4ee5\u6709\u76f8\u540c\u7684)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$(?D)"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"$(?F)"),": \u5206\u522b\u8868\u793a\u88ab\u66f4\u65b0\u7684\u4f9d\u8d56\u6587\u4ef6\u7684\u76ee\u5f55\u90e8\u5206\u548c\u6587\u4ef6\u90e8\u5206.")),(0,l.kt)("h3",{id:"makefile-inexplicit-rules"},"Makefile Inexplicit Rules"),(0,l.kt)("h4",{id:"makefile-c-rules"},"Makefile C Rules"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<n>.o")," \u7684\u76ee\u6807\u7684\u4f9d\u8d56\u76ee\u6807\u4f1a\u81ea\u52a8\u63a8\u5bfc\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.c"),",\n\u5e76\u4e14\u5176\u751f\u6210\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"$(CC) \u2013c $(CPPFLAGS) $(CFLAGS)"),"."),(0,l.kt)("h4",{id:"makefile-c-rules-1"},"Makefile C++ Rules"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<n>.o")," \u7684\u76ee\u6807\u7684\u4f9d\u8d56\u76ee\u6807\u4f1a\u81ea\u52a8\u63a8\u5bfc\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.cc")," \u6216\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.C"),",\n\u5e76\u4e14\u5176\u751f\u6210\u547d\u4ee4\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"$(CXX) \u2013c $(CPPFLAGS) $(CFLAGS)"),"\n(\u5efa\u8bae\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},".cc")," \u4f5c\u4e3a C++\u6e90\u6587\u4ef6\u7684\u540e\u7f00, \u800c\u4e0d\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},".C"),")."),(0,l.kt)("h4",{id:"makefile-asm-rules"},"Makefile ASM Rules"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<n>.o")," \u7684\u76ee\u6807\u7684\u4f9d\u8d56\u76ee\u6807\u4f1a\u81ea\u52a8\u63a8\u5bfc\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.s"),"\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7f16\u8bd1\u54c1 ",(0,l.kt)("inlineCode",{parentName:"p"},"as"),"\uff0c\u5e76\u4e14\u5176\u751f\u6210\u547d\u4ee4\u662f\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},"$(AS) $(ASFLAGS)"),"\u3002\n",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.s")," \u7684\u76ee\u6807\u7684\u4f9d\u8d56\u76ee\u6807\u4f1a\u81ea\u52a8\u63a8\u5bfc\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.S"),"\uff0c\u9ed8\u8ba4\u4f7f\u7528 C \u9884\u7f16\u8bd1\u5668 ",(0,l.kt)("inlineCode",{parentName:"p"},"cpp"),"\uff0c\u5e76\u4e14\u5176\u751f\u6210\u547d\u4ee4\u662f\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},"$(AS) $(ASFLAGS)"),"\u3002"),(0,l.kt)("h4",{id:"makefile-object-linking"},"Makefile Object Linking"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<n>"),"\u76ee\u6807\u4f9d\u8d56\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"<n>.o"),"\uff0c\u901a\u8fc7\u8fd0\u884c C \u7684\u7f16\u8bd1\u5668\u6765\u8fd0\u884c\u94fe\u63a5\u7a0b\u5e8f\u751f\u6210\uff08\u4e00\u822c\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"ld"),"\uff09\uff0c\u5176\u751f\u6210\u547d\u4ee4\u662f\uff1a\n",(0,l.kt)("inlineCode",{parentName:"p"},"$(CC) $(LDFLAGS) <n>.o $(LOADLIBES) $(LDLIBS)"),"\n\u8fd9\u4e2a\u89c4\u5219\u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u7684\u5de5\u7a0b\u6709\u6548\uff0c\u540c\u65f6\u4e5f\u5bf9\u591a\u4e2a Object \u6587\u4ef6\uff08\u7531\u4e0d\u540c\u7684\u6e90\u6587\u4ef6\u751f\u6210\uff09\u7684\u4e5f\u6709\u6548\u3002\u4f8b\u5982\u5982\u4e0b\u89c4\u5219\uff1a"),(0,l.kt)("p",null,"x : y.o z.o"),(0,l.kt)("p",null,"\u5e76\u4e14 ",(0,l.kt)("inlineCode",{parentName:"p"},"x.c"),"\u3001 ",(0,l.kt)("inlineCode",{parentName:"p"},"y.c"),"\u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"z.c"),"\u90fd\u5b58\u5728\u65f6\uff0c\u9690\u542b\u89c4\u5219\u5c06\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a"),(0,l.kt)("p",null,"cc -c x.c -o x.o\ncc -c y.c -o y.o\ncc -c z.c -o z.o\ncc x.o y.o z.o -o x\nrm -f x.o\nrm -f y.o\nrm -f z.o"),(0,l.kt)("h3",{id:"makefile-function"},"Makefile Function"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"filter"),(0,l.kt)("li",{parentName:"ul"},"shell"),(0,l.kt)("li",{parentName:"ul"},"subst"),(0,l.kt)("li",{parentName:"ul"},"wildcard")),(0,l.kt)("h3",{id:"makefile-best-practice"},"Makefile Best Practice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"$(filter %.o,$(files)): %.o: %.c\n$(filter %.elc,$(files)): %.elc: %.el\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"$(CC) -c $(CFLAGS) $< -o $@\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"(%.o) : %.c\n$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $*.o\n$(AR) r $@ $*.o\n$(RM) $*.o\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"%.d: %.c\n@set -e; rm -f $@; /\n$(CC) -M $(CPPFLAGS) $< > $@.$$$$; /\nsed 's,/($*/)/.o[ :]*,/1.o $@ : ,g' < $@.$$$$ > $@; /\n$(RM) -f $@.$$$$\n")),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cmake.org/cmake/help/latest"},"Official Reference")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://file.ncnynl.com/ros/CMake%20Practice.pdf"},"CMake Practice")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cgold.readthedocs.io/en/latest"},"CGold CMake")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cliutils.gitlab.io/modern-cmake"},"Modern CMake"))))}p.isMDXComponent=!0}}]);