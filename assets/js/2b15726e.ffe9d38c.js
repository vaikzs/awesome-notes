"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[5927],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(k,i(i({ref:n},u),{},{components:t})):a.createElement(k,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7517:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=["components"],l={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","React"]},s="React Basic Notes",c={unversionedId:"web/react/reactBasicNotes",id:"web/react/reactBasicNotes",title:"React Basic Notes",description:"React Core Packages",source:"@site/notes/web/react/reactBasicNotes.md",sourceDirName:"web/react",slug:"/web/react/reactBasicNotes",permalink:"/awesome-notes/web/react/reactBasicNotes",editUrl:"https://github.com/sabertazimi/awesome-notes/edit/main/notes/web/react/reactBasicNotes.md",tags:[{label:"Web",permalink:"/awesome-notes/tags/web"},{label:"React",permalink:"/awesome-notes/tags/react"}],version:"current",lastUpdatedBy:"sabertazimi",lastUpdatedAt:1651006569,formattedLastUpdatedAt:"4/26/2022",frontMatter:{author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","React"]},sidebar:"sidebar",previous:{title:"Node Basic Notes",permalink:"/awesome-notes/web/node/nodeBasicNotes"},next:{title:"React Router Basic Notes",permalink:"/awesome-notes/web/react/reactRouterBasicNotes"}},u={},p=[{value:"React Core Packages",id:"react-core-packages",level:2},{value:"React Virtual DOM",id:"react-virtual-dom",level:2},{value:"React Core Workflow",id:"react-core-workflow",level:2},{value:"Create RootContainer",id:"create-rootcontainer",level:3},{value:"Legacy Root",id:"legacy-root",level:4},{value:"Concurrent Root",id:"concurrent-root",level:4},{value:"Update RootContainer",id:"update-rootcontainer",level:3},{value:"ReactComponent SetState",id:"reactcomponent-setstate",level:3},{value:"ClassComponent Update",id:"classcomponent-update",level:3},{value:"FunctionComponent Update",id:"functioncomponent-update",level:3},{value:"React Scheduler",id:"react-scheduler",level:2},{value:"Scheduler Priority",id:"scheduler-priority",level:3},{value:"Scheduler Workflow",id:"scheduler-workflow",level:3},{value:"Scheduler Time Slicing",id:"scheduler-time-slicing",level:3},{value:"Scheduler Task Queue",id:"scheduler-task-queue",level:3},{value:"Scheduler Work Loop",id:"scheduler-work-loop",level:3},{value:"React Fiber",id:"react-fiber",level:2},{value:"React Fiber Type",id:"react-fiber-type",level:3},{value:"React Fiber Work Tag",id:"react-fiber-work-tag",level:3},{value:"React Fiber Mode",id:"react-fiber-mode",level:3},{value:"React Fiber Effects",id:"react-fiber-effects",level:3},{value:"React Fiber Lanes",id:"react-fiber-lanes",level:3},{value:"React Fiber Trees",id:"react-fiber-trees",level:3},{value:"React Fiber Work Loop",id:"react-fiber-work-loop",level:3},{value:"React Reconciler",id:"react-reconciler",level:2},{value:"Reconciler Render Workflow",id:"reconciler-render-workflow",level:3},{value:"Host Root Fiber Rendering",id:"host-root-fiber-rendering",level:4},{value:"Host Component Fiber Rendering",id:"host-component-fiber-rendering",level:4},{value:"Class Component Fiber Rendering",id:"class-component-fiber-rendering",level:4},{value:"Function Component Fiber Rendering",id:"function-component-fiber-rendering",level:4},{value:"Reconciler Update Workflow",id:"reconciler-update-workflow",level:3},{value:"Reconciler Diff Workflow",id:"reconciler-diff-workflow",level:3},{value:"Different Types Elements",id:"different-types-elements",level:4},{value:"Same Type DOM Elements",id:"same-type-dom-elements",level:4},{value:"Same Type Component Elements",id:"same-type-component-elements",level:4},{value:"Reconcile Array Elements",id:"reconcile-array-elements",level:4},{value:"Reconciler Commit Workflow",id:"reconciler-commit-workflow",level:3},{value:"Renderer and HostConfig Protocol",id:"renderer-and-hostconfig-protocol",level:4},{value:"Commit Root",id:"commit-root",level:4},{value:"Before Mutation Phase",id:"before-mutation-phase",level:4},{value:"Mutation Phase",id:"mutation-phase",level:4},{value:"Layout Phase",id:"layout-phase",level:4},{value:"Reconciler Performance Tips",id:"reconciler-performance-tips",level:3},{value:"Minimal Reconciler Implementation",id:"minimal-reconciler-implementation",level:3},{value:"Props and States",id:"props-and-states",level:2},{value:"setState",id:"setstate",level:3},{value:"componentDidMount",id:"componentdidmount",level:3},{value:"Props Validation",id:"props-validation",level:3},{value:"Element and Component",id:"element-and-component",level:2},{value:"JSX",id:"jsx",level:3},{value:"JSX Transform",id:"jsx-transform",level:4},{value:"Functional and Class component",id:"functional-and-class-component",level:3},{value:"Stateless and Stateful component",id:"stateless-and-stateful-component",level:3},{value:"Stateless component",id:"stateless-component",level:4},{value:"Stateful component",id:"stateful-component",level:4},{value:"Component Lifecycle",id:"component-lifecycle",level:3},{value:"Creation and Mounting Phase",id:"creation-and-mounting-phase",level:4},{value:"Updating Phase",id:"updating-phase",level:4},{value:"Unmounting Phase",id:"unmounting-phase",level:4},{value:"Render Function",id:"render-function",level:3},{value:"React Element API",id:"react-element-api",level:3},{value:"React Clone Element API",id:"react-clone-element-api",level:4},{value:"React Children API",id:"react-children-api",level:4},{value:"Refs",id:"refs",level:3},{value:"String Refs",id:"string-refs",level:4},{value:"Forward Refs",id:"forward-refs",level:4},{value:"Callback Refs",id:"callback-refs",level:4},{value:"Compound Components",id:"compound-components",level:3},{value:"React Synthetic Events",id:"react-synthetic-events",level:2},{value:"React Reusability Patterns",id:"react-reusability-patterns",level:2},{value:"HOC",id:"hoc",level:3},{value:"Render Props",id:"render-props",level:3},{value:"React Hooks Reuse Pattern",id:"react-hooks-reuse-pattern",level:3},{value:"React Hooks",id:"react-hooks",level:2},{value:"Hooks Types",id:"hooks-types",level:3},{value:"Hooks Memoized State",id:"hooks-memoized-state",level:3},{value:"Hooks Workflow",id:"hooks-workflow",level:3},{value:"Minimal Hooks Implementation",id:"minimal-hooks-implementation",level:3},{value:"UseState Hook",id:"usestate-hook",level:3},{value:"UseState Hooks Dispatcher",id:"usestate-hooks-dispatcher",level:4},{value:"UseState Hooks Usage",id:"usestate-hooks-usage",level:4},{value:"UseReducer Hook",id:"usereducer-hook",level:3},{value:"UseReducer Hooks Dispatcher",id:"usereducer-hooks-dispatcher",level:4},{value:"UseReducer Hooks Usage",id:"usereducer-hooks-usage",level:4},{value:"UseMemo Hook",id:"usememo-hook",level:3},{value:"UseMemo Hooks Dispatcher",id:"usememo-hooks-dispatcher",level:4},{value:"UseMemo Hooks Usage",id:"usememo-hooks-usage",level:4},{value:"UseCallback Hook",id:"usecallback-hook",level:3},{value:"UseCallback Hooks Dispatcher",id:"usecallback-hooks-dispatcher",level:4},{value:"UseCallback Hooks Usage",id:"usecallback-hooks-usage",level:4},{value:"UseRef Hook",id:"useref-hook",level:3},{value:"UseRef Hooks Dispatcher",id:"useref-hooks-dispatcher",level:4},{value:"Refs Basis",id:"refs-basis",level:4},{value:"Refs Values",id:"refs-values",level:4},{value:"Refs Update Mechanism",id:"refs-update-mechanism",level:4},{value:"UseContext Hook",id:"usecontext-hook",level:3},{value:"UseContext Hooks Dispatcher",id:"usecontext-hooks-dispatcher",level:4},{value:"UseContext Hooks Usage",id:"usecontext-hooks-usage",level:4},{value:"UseEffect Hook",id:"useeffect-hook",level:3},{value:"UseEffect Hooks Dispatcher",id:"useeffect-hooks-dispatcher",level:4},{value:"UseEffect Lifecycle",id:"useeffect-lifecycle",level:4},{value:"UseEffect Nasty Loop",id:"useeffect-nasty-loop",level:4},{value:"UseEffect Deps List",id:"useeffect-deps-list",level:4},{value:"UseEffect Closure",id:"useeffect-closure",level:4},{value:"UseEffect State",id:"useeffect-state",level:4},{value:"UseEffect Cleanup",id:"useeffect-cleanup",level:4},{value:"UseEffect Reference",id:"useeffect-reference",level:4},{value:"UseLayoutEffect Hook",id:"uselayouteffect-hook",level:3},{value:"UseInsertionEffect Hook",id:"useinsertioneffect-hook",level:3},{value:"UseDebugValue Hook",id:"usedebugvalue-hook",level:3},{value:"UseImperativeHandle Hook",id:"useimperativehandle-hook",level:3},{value:"UseDeferredValue Hook",id:"usedeferredvalue-hook",level:3},{value:"UseTransition Hook",id:"usetransition-hook",level:3},{value:"UseId Hook",id:"useid-hook",level:3},{value:"UseSyncExternalStore Hook",id:"usesyncexternalstore-hook",level:3},{value:"Custom Hooks",id:"custom-hooks",level:3},{value:"Custom LifeCycle Hooks",id:"custom-lifecycle-hooks",level:3},{value:"Custom Async Data Hook",id:"custom-async-data-hook",level:3},{value:"Custom Previous Hook",id:"custom-previous-hook",level:3},{value:"Custom Interval Hook",id:"custom-interval-hook",level:3},{value:"Custom Debounce Hook",id:"custom-debounce-hook",level:3},{value:"Custom EventListener Hook",id:"custom-eventlistener-hook",level:3},{value:"Custom Mouse Hook",id:"custom-mouse-hook",level:3},{value:"Custom Observer Hook",id:"custom-observer-hook",level:3},{value:"Custom Locked Body Hook",id:"custom-locked-body-hook",level:3},{value:"Custom Script Loading Hook",id:"custom-script-loading-hook",level:3},{value:"Custom Media Query Hook",id:"custom-media-query-hook",level:3},{value:"Custom Cookie Hook",id:"custom-cookie-hook",level:3},{value:"Custom LocalStorage Hook",id:"custom-localstorage-hook",level:3},{value:"Custom Form Hook",id:"custom-form-hook",level:3},{value:"UseState Only Form Hook",id:"usestate-only-form-hook",level:4},{value:"UseState and UseRef Form Hook",id:"usestate-and-useref-form-hook",level:4},{value:"UseState and UseRef with DOM Refs Form Hook",id:"usestate-and-useref-with-dom-refs-form-hook",level:4},{value:"Custom URL Params Hook",id:"custom-url-params-hook",level:3},{value:"Custom Router Hook",id:"custom-router-hook",level:3},{value:"Custom History Hook",id:"custom-history-hook",level:3},{value:"Custom Store Hook",id:"custom-store-hook",level:3},{value:"Custom Recoil Hook",id:"custom-recoil-hook",level:3},{value:"Custom Atom Hook",id:"custom-atom-hook",level:3},{value:"Hooks Best Practice",id:"hooks-best-practice",level:3},{value:"React Style Guide",id:"react-style-guide",level:2},{value:"Naming Style",id:"naming-style",level:3},{value:"Props Style",id:"props-style",level:3},{value:"Refs Style",id:"refs-style",level:3},{value:"Alignment Style",id:"alignment-style",level:3},{value:"Quotes Style",id:"quotes-style",level:3},{value:"Spacing Style",id:"spacing-style",level:3},{value:"Ordering of Class Component",id:"ordering-of-class-component",level:3},{value:"Project Structure Best Practice",id:"project-structure-best-practice",level:3},{value:"React Style Best Practice",id:"react-style-best-practice",level:3},{value:"Modern React",id:"modern-react",level:2},{value:"ES6 Binding for This",id:"es6-binding-for-this",level:3},{value:"Context API",id:"context-api",level:3},{value:"Ref with Context",id:"ref-with-context",level:4},{value:"Error Boundary",id:"error-boundary",level:3},{value:"React Fragment",id:"react-fragment",level:3},{value:"React Portals",id:"react-portals",level:3},{value:"Concurrent Features",id:"concurrent-features",level:3},{value:"Batching Updates",id:"batching-updates",level:3},{value:"Suspense",id:"suspense",level:3},{value:"Suspense and Lazy",id:"suspense-and-lazy",level:4},{value:"Suspense for SSR",id:"suspense-for-ssr",level:4},{value:"React Performance",id:"react-performance",level:2},{value:"React Performance Mental Model",id:"react-performance-mental-model",level:3},{value:"React Performance Best Practice",id:"react-performance-best-practice",level:3},{value:"Re-rendering Problem",id:"re-rendering-problem",level:3},{value:"Code Splitting",id:"code-splitting",level:3},{value:"Server Side Rendering",id:"server-side-rendering",level:2},{value:"Pros of SSR",id:"pros-of-ssr",level:3},{value:"Performance",id:"performance",level:4},{value:"SEO",id:"seo",level:4},{value:"SSR Library",id:"ssr-library",level:3},{value:"SSR Example",id:"ssr-example",level:3},{value:"React with TypeScript",id:"react-with-typescript",level:2},{value:"Props Types",id:"props-types",level:3},{value:"React Refs Types",id:"react-refs-types",level:3},{value:"Function Component Types",id:"function-component-types",level:3},{value:"Class Component Types",id:"class-component-types",level:3},{value:"Generic Component Types",id:"generic-component-types",level:3},{value:"Component Props Type",id:"component-props-type",level:3},{value:"Component Return Type",id:"component-return-type",level:3},{value:"React Event Types",id:"react-event-types",level:3},{value:"React Event Handler Types",id:"react-event-handler-types",level:4},{value:"React Form Event Types",id:"react-form-event-types",level:4},{value:"React HTML and CSS Types",id:"react-html-and-css-types",level:3},{value:"React Input Types",id:"react-input-types",level:4},{value:"React Portals Types",id:"react-portals-types",level:3},{value:"React Redux Types",id:"react-redux-types",level:3},{value:"React Hooks Types",id:"react-hooks-types",level:3},{value:"UseState Hook Type",id:"usestate-hook-type",level:4},{value:"UseReducer Hook Type",id:"usereducer-hook-type",level:4},{value:"UseRef Hook Type",id:"useref-hook-type",level:4},{value:"DOM Element Ref Type",id:"dom-element-ref-type",level:5},{value:"Mutable Value Ref",id:"mutable-value-ref",level:5},{value:"Custom Hooks Types",id:"custom-hooks-types",level:4},{value:"React Testing",id:"react-testing",level:2},{value:"Shallow Renderer",id:"shallow-renderer",level:3},{value:"Test Renderer",id:"test-renderer",level:3},{value:"Enzyme Mindset",id:"enzyme-mindset",level:3},{value:"React Testing Library Mindset",id:"react-testing-library-mindset",level:3},{value:"React Testing Library Installation",id:"react-testing-library-installation",level:3},{value:"React Testing Library Basis",id:"react-testing-library-basis",level:3},{value:"React Testing Library Events",id:"react-testing-library-events",level:3},{value:"FireEvent API",id:"fireevent-api",level:4},{value:"UserEvent API",id:"userevent-api",level:4},{value:"React Hooks Testing Library",id:"react-hooks-testing-library",level:3},{value:"Basic Hook Testing",id:"basic-hook-testing",level:4},{value:"Async Hook Testing",id:"async-hook-testing",level:4},{value:"Error Hook Testing",id:"error-hook-testing",level:4},{value:"React Testing Library API",id:"react-testing-library-api",level:3},{value:"React Testing Library Reference",id:"react-testing-library-reference",level:3},{value:"Create React App",id:"create-react-app",level:2},{value:"Create React APP CLI",id:"create-react-app-cli",level:3},{value:"React Scripts",id:"react-scripts",level:3},{value:"React Scripts Initialization",id:"react-scripts-initialization",level:4},{value:"React Scripts Commands",id:"react-scripts-commands",level:4},{value:"React Scripts Start",id:"react-scripts-start",level:5},{value:"React Scripts Configuration",id:"react-scripts-configuration",level:4},{value:"CRA Usage",id:"cra-usage",level:3},{value:"CRA CSS",id:"cra-css",level:4},{value:"CRA Public Folder",id:"cra-public-folder",level:4},{value:"CRA Environment Variables",id:"cra-environment-variables",level:4},{value:"CRA Code Splitting",id:"cra-code-splitting",level:4},{value:"CRA Service Worker",id:"cra-service-worker",level:4},{value:"CRA Deployment",id:"cra-deployment",level:4},{value:"SPA Deployment",id:"spa-deployment",level:4},{value:"Custom CRA",id:"custom-cra",level:3},{value:"CRA MonoRepo",id:"cra-monorepo",level:4},{value:"Custom React Scripts",id:"custom-react-scripts",level:4},{value:"Custom CRA Templates",id:"custom-cra-templates",level:4},{value:"React Internationalization",id:"react-internationalization",level:2},{value:"Simple i18n Implementation",id:"simple-i18n-implementation",level:3},{value:"React i18n Library",id:"react-i18n-library",level:3},{value:"i18n Solution",id:"i18n-solution",level:3},{value:"Styled Component",id:"styled-component",level:2},{value:"Shared CSS Styles",id:"shared-css-styles",level:3},{value:"Styled Component Extension",id:"styled-component-extension",level:3},{value:"Styled Component Props",id:"styled-component-props",level:3},{value:"Micro Frontends",id:"micro-frontends",level:2},{value:"Application EntryPoint",id:"application-entrypoint",level:3},{value:"Styles Isolation",id:"styles-isolation",level:3},{value:"Scripts Isolation",id:"scripts-isolation",level:3},{value:"Application Communication",id:"application-communication",level:3},{value:"Interviews",id:"interviews",level:2}],d={toc:p};function m(e){var n=e.components,l=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"react-basic-notes"},"React Basic Notes"),(0,o.kt)("h2",{id:"react-core-packages"},"React Core Packages"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Scheduler")," \u8c03\u5ea6\u5668: \u8c03\u5ea6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7, \u9ad8\u4f18\u4efb\u52a1\u4f18\u5148\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler")," \u534f\u8c03\u5668:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u88c5\u8f7d ",(0,o.kt)("inlineCode",{parentName:"li"},"Renderer"),"."),(0,o.kt)("li",{parentName:"ul"},"\u63a5\u6536 ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOM")," \u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"React")," \u6a21\u5757 (\u7528\u6237\u4ee3\u7801) \u53d1\u8d77\u7684\u66f4\u65b0\u8bf7\u6c42:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactFiberReconciler.updateContainer"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactFiberClassComponent.setState"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactFiberHooks.dispatchAction"),"."))),(0,o.kt)("li",{parentName:"ul"},"\u627e\u51fa\u53d8\u5316\u7ec4\u4ef6, \u6784\u5efa Fiber Tree."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Renderer")," \u6e32\u67d3\u5668:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5f15\u5bfc ",(0,o.kt)("inlineCode",{parentName:"li"},"React")," \u5e94\u7528\u542f\u52a8 (e.g ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOM.createRoot(rootNode).render(<App />)"),")."),(0,o.kt)("li",{parentName:"ul"},"\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig")," \u534f\u8bae, \u5c06\u53d8\u5316\u7684\u7ec4\u4ef6\u6e32\u67d3\u5230\u9875\u9762\u4e0a.")))),(0,o.kt)("p",null,"\u5176\u4e2d ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u6784\u5efa Fiber Tree \u7684\u8fc7\u7a0b\u88ab\u5305\u88c5\u6210\u4e00\u4e2a\u56de\u8c03\u51fd\u6570, \u4f20\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"Scheduler")," \u6a21\u5757\u7b49\u5f85\u8c03\u5ea6.\n",(0,o.kt)("inlineCode",{parentName:"p"},"Scheduler")," \u5c06\u56de\u8c03\u51fd\u6570\u8fdb\u4e00\u6b65\u5305\u88c5\u6210\u4efb\u52a1\u5bf9\u8c61, \u653e\u5165\u591a\u4f18\u5148\u7ea7\u8c03\u5ea6\u7684\u4efb\u52a1\u961f\u5217, \u5faa\u73af\u6d88\u8d39\u4efb\u52a1\u961f\u5217, \u76f4\u81f3\u961f\u5217\u6e05\u7a7a.\nScheduler Work Loop (\u4efb\u52a1\u8c03\u5ea6\u5faa\u73af) \u8d1f\u8d23\u8c03\u5ea6 ",(0,o.kt)("inlineCode",{parentName:"p"},"Task"),",\nReconciler Work Loop (",(0,o.kt)("inlineCode",{parentName:"p"},"Fiber")," \u6784\u9020\u5faa\u73af) \u8d1f\u8d23\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"p"},"Task"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"React")," runtime main logic:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Updates: ",(0,o.kt)("inlineCode",{parentName:"li"},"Add"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Delete"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Mutation")," updates from ",(0,o.kt)("inlineCode",{parentName:"li"},"User Code"),"."),(0,o.kt)("li",{parentName:"ul"},"Registration:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler")," receive updates request from ",(0,o.kt)("inlineCode",{parentName:"li"},"User Code"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Scheduler")," register new ",(0,o.kt)("inlineCode",{parentName:"li"},"Task"),"."))),(0,o.kt)("li",{parentName:"ul"},"Execution:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Scheduler")," consume ",(0,o.kt)("inlineCode",{parentName:"li"},"Task")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"TaskQueue")," in work loop."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler")," execute ",(0,o.kt)("inlineCode",{parentName:"li"},"Task")," work.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," \u6784\u9020\u5faa\u73af: construct ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," tree."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"commitRoot"),": render ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," tree with ",(0,o.kt)("inlineCode",{parentName:"li"},"Renderer"),"."))))),(0,o.kt)("li",{parentName:"ul"},"\u4efb\u52a1\u8c03\u5ea6\u5faa\u73af\u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," \u6784\u9020\u5faa\u73af\u76f8\u4e92\u914d\u5408\u53ef\u5b9e\u73b0",(0,o.kt)("strong",{parentName:"li"},"\u53ef\u4e2d\u65ad\u6e32\u67d3"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6e32\u67d3\u4e2d\u65ad (",(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.renderRootConcurrent().shouldYield()"),"):",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5b58\u5728\u66f4\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1 (Priority Scheduling)."),(0,o.kt)("li",{parentName:"ul"},"\u5f53\u524d\u5e27\u6ca1\u6709\u5269\u4f59\u65f6\u95f4 (Time Slicing)."))),(0,o.kt)("li",{parentName:"ul"},"\u6e32\u67d3\u6062\u590d (",(0,o.kt)("inlineCode",{parentName:"li"},"Scheduler.workLoop()"),"):\n\u5c06 ",(0,o.kt)("inlineCode",{parentName:"li"},"callback()")," \u8fd4\u56de\u7684\u4efb\u52a1\u653e\u5165\u4efb\u52a1\u961f\u5217, \u7ee7\u7eed\u8fdb\u884c\u8c03\u5ea6\u76f4\u81f3\u6e05\u7a7a\u4efb\u52a1\u961f\u5217.")))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://7kms.github.io/react-illustration-series/main/macro-structure"},(0,o.kt)("img",{alt:"React Core Packages",src:t(5813).Z,width:"1918",height:"1382"}))),(0,o.kt)("h2",{id:"react-virtual-dom"},"React Virtual DOM"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reduce rendering times with reconciliation algorithm,\nimproving rendering efficiency."),(0,o.kt)("li",{parentName:"ul"},"Cross platform code."),(0,o.kt)("li",{parentName:"ul"},"Functional programming without details on DOM manipulation."),(0,o.kt)("li",{parentName:"ul"},"Virtual DOM \u5f88\u591a\u65f6\u5019\u90fd\u4e0d\u662f\u6700\u4f18\u7684\u64cd\u4f5c,\n\u4f46\u5b83\u5177\u6709\u666e\u9002\u6027, \u5728\u6548\u7387\u4e0e\u53ef\u7ef4\u62a4\u6027\u4e4b\u95f4\u8fbe\u5230\u5e73\u8861."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/snabbdom/snabbdom"},"SnabbDOM"),":\nvirtual DOM library focus on modularity and performance.")),(0,o.kt)("h2",{id:"react-core-workflow"},"React Core Workflow"),(0,o.kt)("h3",{id:"create-rootcontainer"},"Create RootContainer"),(0,o.kt)("h4",{id:"legacy-root"},"Legacy Root"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMLegacy.js"},"react-dom/src/client/ReactDOMLegacy"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"render"),"."),(0,o.kt)("li",{parentName:"ul"},"legacyRenderSubtreeIntoContainer."),(0,o.kt)("li",{parentName:"ul"},"legacyCreateRootFromDOMContainer."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberReconciler.new.js"},"react-reconciler/src/ReactFiberReconciler"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"createContainer"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponentTree.js"},"react-dom/src/client/ReactDOMComponentTree"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"markContainerAsRoot."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberRoot.new.js"},"react-reconciler/src/ReactFiberRoot"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"createFiberRoot"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiber.new.js"},"react-reconciler/src/ReactFiber"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"createHostRootFiber."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js"},"react-reconciler/src/ReactUpdateQueue"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"initializeUpdateQueue"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/DOMPluginEventSystem.js"},"react-dom/src/events/DOMPluginEventSystem"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"listenToAllSupportedEvents:\n\u4e8b\u4ef6\u7edf\u4e00\u5728 rootContainer \u4e0a\u5904\u7406 dispatchDiscreteEvent.")))),(0,o.kt)("h4",{id:"concurrent-root"},"Concurrent Root"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMRoot.js"},"react-dom/src/client/ReactDOMRoot"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"createRoot"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberReconciler.new.js"},"react-reconciler/src/ReactFiberReconciler"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"createContainer"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponentTree.js"},"react-dom/src/client/ReactDOMComponentTree"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"markContainerAsRoot."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberRoot.new.js"},"react-reconciler/src/ReactFiberRoot"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"createFiberRoot"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiber.new.js"},"react-reconciler/src/ReactFiber"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"createHostRootFiber."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js"},"react-reconciler/src/ReactUpdateQueue"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"initializeUpdateQueue"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/DOMPluginEventSystem.js"},"react-dom/src/events/DOMPluginEventSystem"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"listenToAllSupportedEvents:\n\u4e8b\u4ef6\u7edf\u4e00\u5728 rootContainer \u4e0a\u5904\u7406 dispatchDiscreteEvent."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOMRoot.render(<App />)"),".")),(0,o.kt)("h3",{id:"update-rootcontainer"},"Update RootContainer"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMLegacy.js"},"react-dom/src/client/ReactDOMLegacy"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"render."),(0,o.kt)("li",{parentName:"ul"},"legacyRenderSubtreeIntoContainer."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMRoot.js"},"react-dom/src/client/ReactDOMRoot"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"render."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberReconciler.new.js"},"react-reconciler/src/ReactFiberReconciler"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateContainer"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js"},"react-reconciler/src/ReactUpdateQueue"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"createUpdate."),(0,o.kt)("li",{parentName:"ul"},"enqueueUpdate."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"scheduleUpdateOnFiber"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ensureRootIsScheduled"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberSyncTaskQueue.new.js"},"react-reconciler/src/ReactFiberSyncTaskQueue"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"flushSyncCallbacks."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"performSyncWorkOnRoot"),"."),(0,o.kt)("li",{parentName:"ul"},"renderRootSync."),(0,o.kt)("li",{parentName:"ul"},"workLoopSync."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"performUnitOfWork"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"react-reconciler/src/ReactFiberBeginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"beginWork"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateHostRoot"),"/",(0,o.kt)("strong",{parentName:"li"},"updateXXXComponent"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOMComponent.createElement"),"."),(0,o.kt)("li",{parentName:"ul"},"reconcileChildren."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js"},"react-reconciler/src/ReactChildFiber"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"reconcileChildFibers."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeUnitOfWork"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCompleteWork.new.js"},"react-reconciler/src/ReactFiberCompleteWork"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeWork"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"commitRoot"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMHostConfig.js"},"react-dom/src/client/ReactDOMHostConfig"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"appendChildToContainer."),(0,o.kt)("li",{parentName:"ul"},"finalizeInitialChildren."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponent.js"},"react-dom/src/client/ReactDOMComponent"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"setInitialProperties:\n\u8bbe\u7f6e\u521d\u59cb\u5316\u5c5e\u6027, \u5904\u7406\u7279\u6b8a\u5143\u7d20\u548c\u4e8b\u4ef6.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Legacy Mode\nimport type { ReactElement } from 'react';\nimport Reconciler from './reconciler';\nimport type { Container } from './types';\n\nconst Renderer = {\n  render: (\n    element: ReactElement,\n    container: Container | null,\n    callback?: Function\n  ): void => {\n    if (container) {\n      const root = Reconciler.createContainer(container, 0, false, null);\n      Reconciler.updateContainer(element, root, null);\n    }\n  },\n};\n\nexport default Renderer;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Modern Mode\nimport type { ReactElement } from 'react';\nimport Reconciler from './reconciler';\nimport type { Container, OpaqueRoot } from './types';\n\nconst Renderer = {\n  createRoot: (\n    container: Container | null,\n    callback?: Function\n  ): OpaqueRoot => {\n    if (container) {\n      const root = Reconciler.createContainer(container, 0, false, null);\n\n      root.render = function (element: ReactElement) {\n        Reconciler.updateContainer(element, this, null);\n      };\n\n      return root;\n    }\n  },\n};\n\nexport default Renderer;\n")),(0,o.kt)("h3",{id:"reactcomponent-setstate"},"ReactComponent SetState"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/ReactDOMEventListener.js"},"react-dom/src/events/ReactDOMEventListener"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"dispatchDiscreteEvent."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react/src/ReactBaseClasses.js"},"react/src/ReactBaseClasses"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"setState"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberClassComponent.new.js"},"react-reconciler/src/ReactFiberClassComponent"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"enqueueSetState."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js"},"react-reconciler/src/ReactUpdateQueue"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"createUpdate."),(0,o.kt)("li",{parentName:"ul"},"enqueueUpdate."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"scheduleUpdateOnFiber"),"."),(0,o.kt)("li",{parentName:"ul"},"discreteUpdates."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberSyncTaskQueue.new.js"},"react-reconciler/src/ReactFiberSyncTaskQueue"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"flushSyncCallbacks."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"performSyncWorkOnRoot"),"."),(0,o.kt)("li",{parentName:"ul"},"workLoopSync."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"performUnitOfWork"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"react-reconciler/src/ReactFiberBeginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"beginWork"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateXXXComponent"),"."),(0,o.kt)("li",{parentName:"ul"},"reconcileChildren."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js"},"react-reconciler/src/ReactChildFiber"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"reconcileChildFibers."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeUnitOfWork"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCompleteWork.new.js"},"react-reconciler/src/ReactFiberCompleteWork"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeWork"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"commitRoot"),"."),(0,o.kt)("li",{parentName:"ul"},"commitMutationEffects."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCommitWork.new.js"},"react-reconciler/src/ReactFiberCommitWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"commitWork."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMHostConfig.js"},"react-dom/src/client/ReactDOMHostConfig"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"commitUpdate."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponentTree.js"},"react-dom/src/client/ReactDOMComponentTree"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"updateFiberProps."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/client/ReactDOMComponent.js"},"react-dom/src/client/ReactDOMComponent"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"updateProperties:\nApply the diff.")))),(0,o.kt)("h3",{id:"classcomponent-update"},"ClassComponent Update"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"performSyncWorkOnRoot."),(0,o.kt)("li",{parentName:"ul"},"workLoopSync."),(0,o.kt)("li",{parentName:"ul"},"performUnitOfWork."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"react-reconciler/src/ReactFiberBeginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"beginWork"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateClassComponent"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberClassComponent.new.js"},"react-reconciler/src/ReactFiberClassComponent"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"updateClassInstance."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"react-reconciler/src/ReactFiberBeginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"finishClassComponent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"instance.render")," (User defined Component)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reconcileChildren"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js"},"react-reconciler/src/ReactChildFiber"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"reconcileChildFibers.")))),(0,o.kt)("h3",{id:"functioncomponent-update"},"FunctionComponent Update"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"react-reconciler/src/ReactFiberWorkLoop"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"performSyncWorkOnRoot."),(0,o.kt)("li",{parentName:"ul"},"workLoopSync."),(0,o.kt)("li",{parentName:"ul"},"performUnitOfWork."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"react-reconciler/src/ReactFiberBeginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"beginWork."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateFunctionComponent"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js"},"react-reconciler/src/ReactFiberHooks"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"renderWithHooks."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"FunctionComponent()")," (User defined Function)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Hooks"),": useXXX -> mountXXX -> updateXXX."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"react-reconciler/src/ReactFiberBeginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reconcileChildren"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactChildFiber.new.js"},"react-reconciler/src/ReactChildFiber"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"reconcileChildFibers.")))),(0,o.kt)("h2",{id:"react-scheduler"},"React Scheduler"),(0,o.kt)("p",null,"Work loop in scheduler focus on ",(0,o.kt)("strong",{parentName:"p"},"Task Scheduling"),",\nnot only including ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler.performSyncWorkOnRoot"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler.performConcurrentWorkOnRoot"),",\nbut also for non-react tasks\n(meaning ",(0,o.kt)("inlineCode",{parentName:"p"},"Scheduler")," module can work standalone without ",(0,o.kt)("inlineCode",{parentName:"p"},"React"),")."),(0,o.kt)("h3",{id:"scheduler-priority"},"Scheduler Priority"),(0,o.kt)("p",null,"React 16, unstable concurrent mode with\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/scheduler/src/SchedulerPriorities.js"},(0,o.kt)("inlineCode",{parentName:"a"},"Priorities")),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ImmediatePriority: \u7acb\u5373\u6267\u884c\u4f18\u5148\u7ea7, \u7ea7\u522b\u6700\u9ad8, ",(0,o.kt)("inlineCode",{parentName:"li"},"expirationTime = -1"),"."),(0,o.kt)("li",{parentName:"ul"},"UserBlockingPriority: \u7528\u6237\u963b\u585e\u4f18\u5148\u7ea7, ",(0,o.kt)("inlineCode",{parentName:"li"},"expirationTime = 250"),"."),(0,o.kt)("li",{parentName:"ul"},"NormalPriority: \u6b63\u5e38\u4f18\u5148\u7ea7, ",(0,o.kt)("inlineCode",{parentName:"li"},"expirationTime = 5000"),"."),(0,o.kt)("li",{parentName:"ul"},"LowPriority: \u4f4e\u4f18\u5148\u7ea7, ",(0,o.kt)("inlineCode",{parentName:"li"},"expirationTime = 10000"),"."),(0,o.kt)("li",{parentName:"ul"},"IdlePriority: \u53ef\u95f2\u7f6e\u4f18\u5148\u7ea7, ",(0,o.kt)("inlineCode",{parentName:"li"},"expirationTime = maxSigned31BitInt"),".")),(0,o.kt)("p",null,"React 17, stable concurrent mode with\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberLane.new.js"},(0,o.kt)("inlineCode",{parentName:"a"},"Lanes")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export type Lanes = number;\nexport type Lane = number;\n\nexport const TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\n\nexport const InputContinuousHydrationLane: Lane = /*    */ 0b0000000000000000000000000000010;\nexport const InputContinuousLane: Lanes = /*            */ 0b0000000000000000000000000000100;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000000001000;\nexport const DefaultLane: Lanes = /*                    */ 0b0000000000000000000000000010000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000000000000100000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111111111111000000;\nconst TransitionLane1: Lane = /*                        */ 0b0000000000000000000000001000000;\nconst TransitionLane2: Lane = /*                        */ 0b0000000000000000000000010000000;\nconst TransitionLane3: Lane = /*                        */ 0b0000000000000000000000100000000;\nconst TransitionLane4: Lane = /*                        */ 0b0000000000000000000001000000000;\nconst TransitionLane5: Lane = /*                        */ 0b0000000000000000000010000000000;\nconst TransitionLane6: Lane = /*                        */ 0b0000000000000000000100000000000;\nconst TransitionLane7: Lane = /*                        */ 0b0000000000000000001000000000000;\nconst TransitionLane8: Lane = /*                        */ 0b0000000000000000010000000000000;\nconst TransitionLane9: Lane = /*                        */ 0b0000000000000000100000000000000;\nconst TransitionLane10: Lane = /*                       */ 0b0000000000000001000000000000000;\nconst TransitionLane11: Lane = /*                       */ 0b0000000000000010000000000000000;\nconst TransitionLane12: Lane = /*                       */ 0b0000000000000100000000000000000;\nconst TransitionLane13: Lane = /*                       */ 0b0000000000001000000000000000000;\nconst TransitionLane14: Lane = /*                       */ 0b0000000000010000000000000000000;\nconst TransitionLane15: Lane = /*                       */ 0b0000000000100000000000000000000;\nconst TransitionLane16: Lane = /*                       */ 0b0000000001000000000000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000111110000000000000000000000;\nconst RetryLane1: Lane = /*                             */ 0b0000000010000000000000000000000;\nconst RetryLane2: Lane = /*                             */ 0b0000000100000000000000000000000;\nconst RetryLane3: Lane = /*                             */ 0b0000001000000000000000000000000;\nconst RetryLane4: Lane = /*                             */ 0b0000010000000000000000000000000;\nconst RetryLane5: Lane = /*                             */ 0b0000100000000000000000000000000;\n\nexport const SomeRetryLane: Lane = RetryLane1;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0001000000000000000000000000000;\n\nconst NonIdleLanes = /*                                 */ 0b0001111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0010000000000000000000000000000;\nexport const IdleLane: Lanes = /*                       */ 0b0100000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n")),(0,o.kt)("h3",{id:"scheduler-workflow"},"Scheduler Workflow"),(0,o.kt)("p",null,"Scheduler main ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/scheduler/src/forks/Scheduler.js"},"workflow"),":"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"scheduleCallback(callback)"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"push(queue, newTask)")," (Wrap ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," into ",(0,o.kt)("inlineCode",{parentName:"p"},"task"),")\n(For delayed task -> ",(0,o.kt)("inlineCode",{parentName:"p"},"requestHostTimeout(handleTimeout, delayTime)"),")\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"requestHostCallback(flushWork)"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"messageChannelPort.postMessage(null)"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"performWorkUntilDeadline()"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"flushWork(hasTimeRemaining, currentTime)"),":\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"workLoop(hasTimeRemaining, currentTime)"),":"),(0,o.kt)("p",null,"\u5c06 Reconciler \u7684\u5de5\u4f5c (Callback)\n\u5305\u88c5\u6210 Task \u7ec4\u6210 Task Queue,\n\u6309\u7167\u65f6\u95f4\u5206\u7247\u673a\u5236,\n\u4e0d\u65ad\u5730\u6d88\u8d39 Task Queue."),(0,o.kt)("p",null,"\u5bf9\u4e8e\u5ef6\u65f6\u4efb\u52a1 (Delayed Task),\n\u4f1a\u5c06\u5176\u5148\u653e\u5165 Timer Queue,\n\u7b49\u5f85\u5ef6\u65f6\u5b8c\u6210\u540e\u518d\u5c06\u5176\u653e\u5165 Task Queue."),(0,o.kt)("h3",{id:"scheduler-time-slicing"},"Scheduler Time Slicing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// \u65f6\u95f4\u5207\u7247\u5468\u671f, \u9ed8\u8ba4\u662f 5ms.\n// \u5982\u679c\u4e00\u4e2a task \u8fd0\u884c\u8d85\u8fc7\u8be5\u5468\u671f, \u4e0b\u4e00\u4e2a task \u6267\u884c\u524d, \u4f1a\u628a\u63a7\u5236\u6743\u5f52\u8fd8\u6d4f\u89c8\u5668.\nconst yieldInterval = 5;\nconst maxYieldInterval = 300;\n\nlet deadline = 0; // currentTime + yieldInterval.\nlet needsPaint = false;\nlet isMessageLoopRunning = false;\nlet scheduledHostCallback = null;\n\nconst channel = new MessageChannel();\nconst port = channel.port2;\nchannel.port1.onmessage = performWorkUntilDeadline;\n\nconst scheduling = navigator.scheduling;\nconst getCurrentTime = performance.now;\n\n// \u8bf7\u6c42\u56de\u8c03:\nconst requestHostCallback = callback => {\n  // 1. \u4fdd\u5b58 callback.\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    // 2. \u901a\u8fc7 MessageChannel \u53d1\u9001\u6d88\u606f.\n    port.postMessage(null);\n  }\n};\n\n// \u53d6\u6d88\u56de\u8c03:\nconst cancelHostCallback = () => {\n  scheduledHostCallback = null;\n};\n\nconst requestHostTimeout = (callback, ms) => {\n  taskTimeoutID = setTimeout(() => {\n    callback(getCurrentTime());\n  }, ms);\n};\n\nconst cancelHostTimeout = () => {\n  clearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n};\n\n// \u662f\u5426\u8ba9\u51fa\u4e3b\u7ebf\u7a0b (time slice):\nconst shouldYieldToHost = () => {\n  const currentTime = getCurrentTime();\n\n  if (currentTime >= deadline) {\n    if (needsPaint || scheduling.isInputPending()) {\n      // There is either a pending paint or a pending input.\n      return true;\n    }\n\n    // There's no pending input.\n    // Only yield if we've reached the max yield interval.\n    return currentTime >= maxYieldInterval;\n  } else {\n    // There's still time left in the frame.\n    return false;\n  }\n};\n\n// \u8bf7\u6c42\u7ed8\u5236:\nconst requestPaint = () => {\n  needsPaint = true;\n};\n\n// \u5b9e\u9645\u56de\u8c03\u51fd\u6570\u5904\u7406:\nconst performWorkUntilDeadline = () => {\n  if (scheduledHostCallback !== null) {\n    // 1. \u8bbe\u7f6e currentTime \u4e0e deadline.\n    const currentTime = getCurrentTime();\n    deadline = currentTime + yieldInterval;\n    const hasTimeRemaining = true;\n\n    try {\n      // 2. \u6267\u884c\u56de\u8c03, \u8fd4\u56de\u662f\u5426\u6709\u8fd8\u6709\u5269\u4f59\u4efb\u52a1.\n      const hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n\n      if (!hasMoreWork) {\n        // \u6ca1\u6709\u5269\u4f59\u4efb\u52a1, \u9000\u51fa.\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      } else {\n        port.postMessage(null); // \u6709\u5269\u4f59\u4efb\u52a1, \u53d1\u8d77\u65b0\u7684\u8c03\u5ea6.\n      }\n    } catch (error) {\n      port.postMessage(null); // \u5982\u6709\u5f02\u5e38, \u91cd\u65b0\u53d1\u8d77\u8c03\u5ea6.\n      throw error;\n    }\n  } else {\n    isMessageLoopRunning = false;\n  }\n\n  needsPaint = false; // Reset.\n};\n")),(0,o.kt)("h3",{id:"scheduler-task-queue"},"Scheduler Task Queue"),(0,o.kt)("p",null,"Task queue is ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/scheduler/src/SchedulerMinHeap.js"},"MinHeap"),",\nstoring Tasks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const newTask = {\n  id: taskIdCounter++,\n  callback, // Work from reconciler.\n  priorityLevel,\n  startTime,\n  expirationTime,\n  sortIndex: -1, // MinHeap queue indexing.\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const scheduleCallback = (priorityLevel, callback, options) => {\n  const currentTime = getCurrentTime();\n  const startTime = currentTime;\n  const expirationTime = startTime + timeout[priorityLevel]; // -1/250/5000/10000/MAX_INT.\n  const newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n\n  if (startTime > currentTime) {\n    // Delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    // All tasks are delayed, and this is the task with the earliest delay.\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    // Normal task.\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n};\n\nconst handleTimeout = currentTime => {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n};\n")),(0,o.kt)("h3",{id:"scheduler-work-loop"},"Scheduler Work Loop"),(0,o.kt)("p",null,"\u5f53 ",(0,o.kt)("inlineCode",{parentName:"p"},"callback()")," \u8fd4\u56de\u51fd\u6570\u65f6, \u8868\u660e\u4ea7\u751f\u8fde\u7eed\u56de\u8c03 (e.g \u51fa\u73b0\u66f4\u9ad8\u4f18\u5148\u4efb\u52a1/\u65f6\u95f4\u5206\u7247\u7528\u5b8c, \u6e32\u67d3\u4e2d\u65ad),\n\u9700\u5c06\u8fd4\u56de\u7684\u51fd\u6570\u518d\u6b21\u653e\u5165\u4efb\u52a1\u961f\u5217, \u7ee7\u7eed\u8fdb\u884c\u8c03\u5ea6\u76f4\u81f3\u6e05\u7a7a\u4efb\u52a1\u961f\u5217 (\u6e32\u67d3\u6062\u590d)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function flushWork(hasTimeRemaining, initialTime) {\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true; // Lock.\n  const previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    // Restore context.\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    const callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n\n      if (typeof continuationCallback === 'function') {\n        // \u4ea7\u751f\u4e86\u8fde\u7eed\u56de\u8c03 (\u5982 Fiber\u6811\u592a\u5927, \u51fa\u73b0\u4e86\u4e2d\u65ad\u6e32\u67d3), \u4fdd\u7559 currentTask.\n        currentTask.callback = continuationCallback;\n      } else {\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      // \u5982\u679c\u4efb\u52a1\u88ab\u53d6\u6d88 (currentTask.callback = null), \u5c06\u5176\u79fb\u51fa\u961f\u5217.\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  }\n\n  // Return whether there's additional work.\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n\n    // \u5b58\u5728\u5ef6\u65f6\u4efb\u52a1, \u7ee7\u7eed\u8fdb\u884c\u8c03\u5ea6.\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n")),(0,o.kt)("h2",{id:"react-fiber"},"React Fiber"),(0,o.kt)("p",null,"React Fiber \u7684\u76ee\u6807\u662f\u63d0\u9ad8\u5176\u5728\u52a8\u753b\u3001\u5e03\u5c40\u548c\u624b\u52bf\u7b49\u9886\u57df\u7684\u9002\u7528\u6027.\n\u5b83\u7684\u4e3b\u8981\u7279\u6027\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"Incremental Rendering")," : \u5c06\u6e32\u67d3\u4efb\u52a1\u62c6\u5206\u4e3a\u5c0f\u7684\u4efb\u52a1\u5757\u5e76\u5c06\u4efb\u52a1\u5206\u914d\u5230\u591a\u4e2a\u5e27\u4e0a\u7684\u80fd\u529b."),(0,o.kt)("h3",{id:"react-fiber-type"},"React Fiber Type"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Fiber")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactInternalTypes.js"},"definition"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Component type."),(0,o.kt)("li",{parentName:"ul"},"Current props and state."),(0,o.kt)("li",{parentName:"ul"},"Pointers to parent, sibling, and child components,"),(0,o.kt)("li",{parentName:"ul"},"Pointer to DOM/class instance."),(0,o.kt)("li",{parentName:"ul"},"Other internal metadata to track rendering process.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export interface Fiber {\n  tag: WorkTag;\n  key: string | null;\n  elementType: any;\n  type: any; // Tag/Class/Function.\n  stateNode: any; // DOM/class instance.\n  ref: (((handle: mixed) => void) & { _stringRef: ?string }) | RefObject | null;\n\n  // Singly Linked List Tree Structure.\n  return: Fiber | null; // DFS parent Fiber node.\n  child: Fiber | null;\n  sibling: Fiber | null;\n  index: number;\n\n  // Props and state for output.\n  pendingProps: any;\n  memoizedProps: any;\n  updateQueue: mixed; // Updates from diff(pendingProps, memoizedProps).\n  memoizedState: any;\n\n  // Context API.\n  dependencies: Dependencies | null; // (Contexts, Events) dependencies.\n\n  mode: TypeOfMode; // NoMode/BlockingMode/ConcurrentMode bit.\n\n  // Effects.\n  flags: Flags;\n  subtreeFlags: Flags;\n  deletions: Array<Fiber> | null;\n  nextEffect: Fiber | null; // Next effect Fiber node.\n  firstEffect: Fiber | null; // First effect Fiber node.\n  lastEffect: Fiber | null; // Last effect Fiber node.\n\n  // Priority.\n  lanes: Lanes;\n  childLanes: Lanes;\n  alternate: Fiber | null; // `current` Fiber and `workInpProgress` Fiber.\n\n  // Performance statistics for React DevTool.\n  actualDuration?: number;\n  actualStartTime?: number;\n  selfBaseDuration?: number;\n  treeBaseDuration?: number;\n}\n")),(0,o.kt)("h3",{id:"react-fiber-work-tag"},"React Fiber Work Tag"),(0,o.kt)("p",null,"\u5e38\u89c1\u7684 Fiber ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactWorkTags.js"},"\u7c7b\u578b"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"HostComponent: HTML native tag."),(0,o.kt)("li",{parentName:"ul"},"ClassComponent."),(0,o.kt)("li",{parentName:"ul"},"FunctionComponent.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type WorkTag =\n  | 'FunctionComponent'\n  | 'ClassComponent'\n  | 'IndeterminateComponent'\n  | 'HostRoot'\n  | 'HostPortal'\n  | 'HostComponent'\n  | 'HostText'\n  | 'Fragment'\n  | 'Mode'\n  | 'ContextConsumer'\n  | 'ContextProvider'\n  | 'ForwardRef'\n  | 'Profiler'\n  | 'SuspenseComponent'\n  | 'MemoComponent'\n  | 'SimpleMemoComponent'\n  | 'LazyComponent'\n  | 'IncompleteClassComponent'\n  | 'DehydratedFragment'\n  | 'SuspenseListComponent'\n  | 'FundamentalComponent'\n  | 'ScopeComponent'\n  | 'Block'\n  | 'OffscreenComponent'\n  | 'LegacyHiddenComponent';\n")),(0,o.kt)("h3",{id:"react-fiber-mode"},"React Fiber Mode"),(0,o.kt)("p",null,"React ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactTypeOfMode.js"},"\u8fd0\u884c\u6a21\u5f0f"),":\n\u6240\u6709 ",(0,o.kt)("inlineCode",{parentName:"p"},"Fiber.mode")," \u4fdd\u6301\u4e00\u81f4 (\u5305\u62ec ",(0,o.kt)("inlineCode",{parentName:"p"},"FiberRoot"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type TypeOfMode = number;\n\nconst NoMode = /*                         */ 0b000000;\nconst ConcurrentMode = /*                 */ 0b000001;\nconst ProfileMode = /*                    */ 0b000010;\nconst DebugTracingMode = /*               */ 0b000100;\nconst StrictLegacyMode = /*               */ 0b001000;\nconst StrictEffectsMode = /*              */ 0b010000;\nconst ConcurrentUpdatesByDefaultMode = /* */ 0b100000;\n")),(0,o.kt)("h3",{id:"react-fiber-effects"},"React Fiber Effects"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Insert DOM elements: ",(0,o.kt)("inlineCode",{parentName:"li"},"Placement")," tag."),(0,o.kt)("li",{parentName:"ul"},"Update DOM elements: ",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," tag."),(0,o.kt)("li",{parentName:"ul"},"Delete DOM elements: ",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion")," tag."),(0,o.kt)("li",{parentName:"ul"},"Update Ref property: ",(0,o.kt)("inlineCode",{parentName:"li"},"Ref")," tag."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," callback: ",(0,o.kt)("inlineCode",{parentName:"li"},"got Passive")," tag.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect(fn)"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"Mount")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," lifecycle."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect(fn, [])"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"Mount")," lifecycle."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect(fn, [deps])"),":\n",(0,o.kt)("inlineCode",{parentName:"li"},"Mount")," lifecycle and\n",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," lifecycle with ",(0,o.kt)("inlineCode",{parentName:"li"},"deps")," changed.")))),(0,o.kt)("p",null,"React create effects when ",(0,o.kt)("inlineCode",{parentName:"p"},"Render")," stage,\nthen update effects to real DOM when ",(0,o.kt)("inlineCode",{parentName:"p"},"Commit")," stage."),(0,o.kt)("p",null,"\u5e38\u89c1\u7684 Effect ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberFlags.js"},"\u6807\u5fd7\u4f4d"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type Flags = number;\n\nconst NoFlags = /*                      */ 0b000000000000000000;\nconst PerformedWork = /*                */ 0b000000000000000001;\nconst Placement = /*                    */ 0b000000000000000010;\nconst Update = /*                       */ 0b000000000000000100;\nconst PlacementAndUpdate = /*           */ 0b000000000000000110;\nconst Deletion = /*                     */ 0b000000000000001000;\nconst ContentReset = /*                 */ 0b000000000000010000;\nconst Callback = /*                     */ 0b000000000000100000;\nconst DidCapture = /*                   */ 0b000000000001000000;\nconst Ref = /*                          */ 0b000000000010000000;\nconst Snapshot = /*                     */ 0b000000000100000000;\nconst Passive = /*                      */ 0b000000001000000000;\nconst PassiveUnmountPendingDev = /*     */ 0b000010000000000000;\nconst Hydrating = /*                    */ 0b000000010000000000;\nconst HydratingAndUpdate = /*           */ 0b000000010000000100;\nconst LifecycleEffectMask = /*          */ 0b000000001110100100;\nconst HostEffectMask = /*               */ 0b000000011111111111;\nconst Incomplete = /*                   */ 0b000000100000000000;\nconst ShouldCapture = /*                */ 0b000001000000000000;\nconst ForceUpdateForLegacySuspense = /* */ 0b000100000000000000;\nconst PassiveStatic = /*                */ 0b001000000000000000;\nconst BeforeMutationMask = /*           */ 0b000000001100001010;\nconst MutationMask = /*                 */ 0b000000010010011110;\nconst LayoutMask = /*                   */ 0b000000000010100100;\nconst PassiveMask = /*                  */ 0b000000001000001000;\nconst StaticMask = /*                   */ 0b001000000000000000;\nconst MountLayoutDev = /*               */ 0b010000000000000000;\nconst MountPassiveDev = /*              */ 0b100000000000000000;\n")),(0,o.kt)("h3",{id:"react-fiber-lanes"},"React Fiber Lanes"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"Assign ",(0,o.kt)("inlineCode",{parentName:"a"},"Lane")," to ",(0,o.kt)("inlineCode",{parentName:"a"},"Update")),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Legacy \u6a21\u5f0f: \u8fd4\u56de SyncLane."),(0,o.kt)("li",{parentName:"ul"},"Blocking \u6a21\u5f0f: \u8fd4\u56de SyncLane."),(0,o.kt)("li",{parentName:"ul"},"Concurrent \u6a21\u5f0f:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6b63\u5e38\u60c5\u51b5: \u6839\u636e\u5f53\u524d\u7684\u8c03\u5ea6\u4f18\u5148\u7ea7\u6765\u751f\u6210\u4e00\u4e2a lane."),(0,o.kt)("li",{parentName:"ul"},"\u5904\u4e8e Suspense \u8fc7\u7a0b\u4e2d: \u4f1a\u4f18\u5148\u9009\u62e9 ",(0,o.kt)("inlineCode",{parentName:"li"},"TransitionLanes")," \u901a\u9053\u4e2d\u7684\u7a7a\u95f2\u901a\u9053 (\u6216\u6700\u9ad8\u4f18\u5148\u7ea7).")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function requestUpdateLane(fiber: Fiber): Lane {\n  const mode = fiber.mode;\n\n  if ((mode & BlockingMode) === NoMode) {\n    // Legacy \u6a21\u5f0f.\n    return SyncLane;\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    // Blocking \u6a21\u5f0f.\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? SyncLane\n      : SyncBatchedLane;\n  }\n\n  // Concurrent \u6a21\u5f0f.\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    // \u7279\u6b8a\u60c5\u51b5, \u5904\u4e8e Suspense \u8fc7\u7a0b\u4e2d.\n    if (currentEventPendingLanes !== NoLanes) {\n      currentEventPendingLanes =\n        mostRecentlyUpdatedRoot !== null\n          ? mostRecentlyUpdatedRoot.pendingLanes\n          : NoLanes;\n    }\n\n    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);\n  }\n\n  // \u6b63\u5e38\u60c5\u51b5, \u83b7\u53d6\u8c03\u5ea6\u4f18\u5148\u7ea7.\n  let lane;\n  const schedulerPriority = getCurrentPriorityLevel();\n\n  if (\n    (executionContext & DiscreteEventContext) !== NoContext &&\n    schedulerPriority === UserBlockingSchedulerPriority\n  ) {\n    // `executionContext` \u5b58\u5728\u8f93\u5165\u4e8b\u4ef6, \u4e14\u8c03\u5ea6\u4f18\u5148\u7ea7\u662f\u7528\u6237\u963b\u585e\u6027\u8d28.\n    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);\n  } else {\n    // \u8c03\u5ea6\u4f18\u5148\u7ea7\u8f6c\u6362\u4e3a\u8f66\u9053\u6a21\u578b.\n    const schedulerLanePriority =\n      schedulerPriorityToLanePriority(schedulerPriority);\n    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);\n  }\n\n  return lane;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberLane.new.js"},"Global ",(0,o.kt)("inlineCode",{parentName:"a"},"renderLanes")),":"),(0,o.kt)("p",null,"Fiber \u6811\u6784\u9020\u8fc7\u7a0b\u4e2d (",(0,o.kt)("inlineCode",{parentName:"p"},"Render Phase"),"),\n\u82e5 Fiber \u5bf9\u8c61\u6216 Update \u5bf9\u8c61\u4f18\u5148\u7ea7 (",(0,o.kt)("inlineCode",{parentName:"p"},"fiber.lanes"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"update.lane"),") \u6bd4\u5168\u5c40\u6e32\u67d3\u4f18\u5148\u7ea7\u4f4e,\n\u5219\u5c06\u4f1a\u88ab\u5ffd\u7565 (\u8282\u70b9\u672a\u66f4\u65b0, \u53ef\u4ee5\u76f4\u63a5\u590d\u7528)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  const pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    const unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    const nextLane = getHighestPriorityLane(nextLanes);\n    const wipLane = getHighestPriorityLane(wipLanes);\n\n    if (\n      nextLane >= wipLane ||\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      return wipLanes;\n    }\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Do nothing, use the lanes as they were assigned.\n  } else if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    nextLanes |= pendingLanes & DefaultLane;\n  }\n\n  const entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n")),(0,o.kt)("p",null,"Lanes model ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/pull/18796"},"use case"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// task \u4e0e batchTask \u7684\u4f18\u5148\u7ea7\u662f\u5426\u91cd\u53e0:\n// 1. expirationTime:\nconst isTaskIncludedInBatch = priorityOfTask >= priorityOfBatch;\n// 2. Lanes:\nconst isTaskIncludedInBatch = (task & batchOfTasks) !== 0;\n\n// \u5f53\u540c\u65f6\u5904\u7406\u4e00\u7ec4\u4efb\u52a1, \u8be5\u7ec4\u5185\u6709\u591a\u4e2a\u4efb\u52a1, \u4e14\u6bcf\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e0d\u4e00\u81f4:\n// 1. expirationTime:\nconst isTaskIncludedInBatch =\n  taskPriority <= highestPriorityInRange &&\n  taskPriority >= lowestPriorityInRange;\n// 2. Lanes:\nconst isTaskIncludedInBatch = (task & batchOfTasks) !== 0;\n\n// \u4ece group \u4e2d\u589e\u5220 task:\n// 1. expirationTime (need list):\ntask.prev.next = task.next;\n\nlet current = queue;\nwhile (task.expirationTime >= current.expirationTime) {\n  current = current.next;\n}\ntask.next = current.next;\ncurrent.next = task;\n\nconst isTaskIncludedInBatch =\n  taskPriority <= highestPriorityInRange &&\n  taskPriority >= lowestPriorityInRange;\n\n// 2. Lanes:\nbatchOfTasks &= ~task; // Delete task.\nbatchOfTasks |= task; // Add task.\nconst isTaskIncludedInBatch = (task & batchOfTasks) !== 0;\n")),(0,o.kt)("h3",{id:"react-fiber-trees"},"React Fiber Trees"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"current")," Fiber tree: rendered to screen."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress")," Fiber tree: under reconciliation."),(0,o.kt)("li",{parentName:"ul"},"When ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress")," Fiber tree complete ",(0,o.kt)("inlineCode",{parentName:"li"},"render")," + ",(0,o.kt)("inlineCode",{parentName:"li"},"commit"),",\nswap 2 Fiber tree:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Reuse Fiber objects."),(0,o.kt)("li",{parentName:"ul"},"Reduce memory usage and GC time."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FiberRoot"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FiberRoot.current = currentHostRootFiber"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FiberRoot.finishedWork = workInProgressHostRootFiber"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"currentHostRootFiber.stateNode = FiberRoot"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"workInProgressHostRootFiber.stateNode = FiberRoot"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"currentHostRootFiber.alternate = workInProgressHostRootFiber")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"workInProgressHostRootFiber.alternate = currentHostRootFiber")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement")," tree -> ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," tree -> ",(0,o.kt)("inlineCode",{parentName:"li"},"DOM")," tree.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://7kms.github.io/react-illustration-series/main/fibertree-prepare"},(0,o.kt)("img",{alt:"React Fiber Trees",src:t(2542).Z,width:"1325",height:"899"}))),(0,o.kt)("h3",{id:"react-fiber-work-loop"},"React Fiber Work Loop"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://7kms.github.io/react-illustration-series/main/reconciler-workflow"},(0,o.kt)("img",{alt:"React Fiber Work Loop",src:t(6004).Z,width:"921",height:"638"}))),(0,o.kt)("h2",{id:"react-reconciler"},"React Reconciler"),(0,o.kt)("h3",{id:"reconciler-render-workflow"},"Reconciler Render Workflow"),(0,o.kt)("p",null,"Reconciler construct Fiber tree:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"scheduleUpdateOnFiber:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u9996\u6b21 render \u76f4\u63a5\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"performWorkOnRoot"),"."),(0,o.kt)("li",{parentName:"ul"},"\u518d\u6b21 render \u9700\u8981\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"ensureRootIsScheduled"),"."))),(0,o.kt)("li",{parentName:"ul"},"ensureRootIsScheduled."),(0,o.kt)("li",{parentName:"ul"},"flushSyncCallbacks."),(0,o.kt)("li",{parentName:"ul"},"performSyncWorkOnRoot / performConcurrentWorkOnRoot:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"performConcurrentWorkOnRoot")," \u652f\u6301\u53ef\u4e2d\u65ad\u6e32\u67d3:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6b64\u51fd\u6570\u9996\u5148\u68c0\u67e5\u662f\u5426\u5904\u4e8e render \u8fc7\u7a0b\u4e2d,\n\u662f\u5426\u9700\u8981\u6062\u590d\u4e0a\u4e00\u6b21\u6e32\u67d3."),(0,o.kt)("li",{parentName:"ul"},"\u5982\u679c\u672c\u6b21\u6e32\u67d3\u88ab\u4e2d\u65ad,\n\u6b64\u51fd\u6570\u6700\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"performConcurrentWorkOnRoot")," \u51fd\u6570,\n\u7b49\u5f85\u4e0b\u4e00\u6b21 Scheduler \u8c03\u5ea6."))))),(0,o.kt)("li",{parentName:"ul"},"renderRootSync / renderRootConcurrent:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6b64\u51fd\u6570\u4f1a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"prepareFreshStack"),", \u91cd\u7f6e FiberRoot \u4e0a\u7684\u5168\u5c40\u5c5e\u6027, \u91cd\u7f6e Fiber Work Loop \u5168\u5c40\u53d8\u91cf."),(0,o.kt)("li",{parentName:"ul"},"\u6b64\u51fd\u6570\u4f1a\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgressRoot = FiberRoot"),", \u8868\u793a\u6b63\u5728\u8fdb\u884c render."),(0,o.kt)("li",{parentName:"ul"},"\u6b64\u51fd\u6570\u9000\u51fa\u524d, \u4f1a\u91cd\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgressRoot = null"),", \u8868\u793a\u6ca1\u6709\u6b63\u5728\u8fdb\u884c\u4e2d\u7684 render."),(0,o.kt)("li",{parentName:"ul"},"\u6b64\u51fd\u6570\u9000\u51fa\u524d, \u4f1a\u6302\u8f7d ",(0,o.kt)("inlineCode",{parentName:"li"},"FiberRoot.finishedWork = workInProgressHostRootFiber"),".\n\u6b64\u65f6 ",(0,o.kt)("inlineCode",{parentName:"li"},"HostRootFiber")," \u4e0a\u6302\u8f7d\u4e86\u526f\u4f5c\u7528\u961f\u5217, \u5c42\u7ea7\u8d8a\u6df1\u5b50\u8282\u70b9\u526f\u4f5c\u7528\u8d8a\u9760\u524d."))),(0,o.kt)("li",{parentName:"ul"},"workLoopSync / workLoopConcurrent:\n\u5faa\u73af\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"performUnitOfWork"),",\n\u76f4\u5230 ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress === null")," \u6216\u7528\u5b8c\u5f53\u524d\u65f6\u95f4\u5206\u7247."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"performUnitOfWork(workInProgress)"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5b58\u5728\u5b50\u8282\u70b9\uff0c ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u4e0d\u5728\u540c\u4e00\u6b21\u5faa\u73af\u91cc\u8c03\u7528:\n\u6267\u884c\u5b8c ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u540e,\n\u4f18\u5148\u5411\u4e0b\u904d\u5386, \u6267\u884c\u5b50\u8282\u70b9\u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork"),",\n\u5728 N \u6b21\u5faa\u73af\u540e\u518d\u5411\u4e0a\u56de\u6eaf."),(0,o.kt)("li",{parentName:"ul"},"\u4e0d\u5b58\u5728\u5b50\u8282\u70b9\uff0c ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u5728\u540c\u4e00\u6b21\u5faa\u73af\u91cc\u8c03\u7528."),(0,o.kt)("li",{parentName:"ul"},"\u82e5 ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"li"},"next")," \u8282\u70b9,\n\u5219\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress = next")," \u8fdb\u884c DFS \u904d\u5386,\n\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570."),(0,o.kt)("li",{parentName:"ul"},"\u82e5 ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"li"},"null")," \u8282\u70b9,\n\u5219\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u51fd\u6570\u5b8c\u6210\u8282\u70b9\u5904\u7406."),(0,o.kt)("li",{parentName:"ul"},"\u82e5\u5b58\u5728\u5144\u5f1f\u8282\u70b9,\n",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u4f1a\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress = siblingFiber")," \u8fdb\u884c DFS \u904d\u5386,\n\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570."),(0,o.kt)("li",{parentName:"ul"},"\u82e5\u5230\u8fbe\u5b50\u53f6\u8282\u70b9,\n",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u4f1a\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress = returnFiber")," \u8fdb\u884c DFS \u56de\u6eaf,\n\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"beginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6839\u636e ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement")," \u5bf9\u8c61\u521b\u5efa\u6240\u6709\u7684 Fiber \u8282\u70b9, \u6700\u7ec8\u6784\u9020\u51fa Fiber \u6811\u5f62\u7ed3\u6784\n(\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"return")," \u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"sibling")," \u6307\u9488)."),(0,o.kt)("li",{parentName:"ul"},"\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"updateXXX"),", \u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.stateNode")," \u7b49\u72b6\u6001."),(0,o.kt)("li",{parentName:"ul"},"\u975e\u5b50\u53f6\u8282\u70b9\u8fd4\u56de\u5b50\u8282\u70b9, \u8fdb\u884c DFS \u904d\u5386; \u5b50\u53f6\u8282\u70b9\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"li"},"null"),", \u76f4\u63a5\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u9636\u6bb5."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateHostRoot/updateXXXComponent"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6839\u636e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.pendingProps"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.updateQueue")," \u7b49\u8f93\u5165\u6570\u636e\u72b6\u6001,\n\u8ba1\u7b97 ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.memoizedState")," \u4f5c\u4e3a\u8f93\u51fa\u72b6\u6001."),(0,o.kt)("li",{parentName:"ul"},"ClassComponent:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6784\u5efa ",(0,o.kt)("inlineCode",{parentName:"li"},"React.Component")," \u5b9e\u4f8b."),(0,o.kt)("li",{parentName:"ul"},"\u628a\u65b0\u5b9e\u4f8b\u6302\u8f7d\u5230 ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.stateNode")," \u4e0a."),(0,o.kt)("li",{parentName:"ul"},"\u6267\u884c ",(0,o.kt)("inlineCode",{parentName:"li"},"render")," \u4e4b\u524d\u7684\u751f\u547d\u5468\u671f\u51fd\u6570."),(0,o.kt)("li",{parentName:"ul"},"\u6267\u884c ",(0,o.kt)("inlineCode",{parentName:"li"},"render")," \u65b9\u6cd5, \u83b7\u53d6\u4e0b\u7ea7 ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement"),"."),(0,o.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),", \u6807\u8bb0\u526f\u4f5c\u7528."))),(0,o.kt)("li",{parentName:"ul"},"FunctionComponent:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6267\u884c ",(0,o.kt)("inlineCode",{parentName:"li"},"renderWithHooks()")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent()"),", \u83b7\u53d6\u4e0b\u7ea7 ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement"),"."),(0,o.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),", \u6807\u8bb0\u526f\u4f5c\u7528."))),(0,o.kt)("li",{parentName:"ul"},"HostComponent.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pendingProps.children")," \u4f5c\u4e3a\u4e0b\u7ea7 ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement"),"."),(0,o.kt)("li",{parentName:"ul"},"\u5982\u679c\u4e0b\u7ea7\u8282\u70b9\u662f\u6587\u672c\u8282\u70b9, \u5219\u8bbe\u7f6e\u4e0b\u7ea7\u8282\u70b9\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"null")," (\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u9636\u6bb5)."),(0,o.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),", \u6807\u8bb0\u526f\u4f5c\u7528."))),(0,o.kt)("li",{parentName:"ul"},"\u6839\u636e\u5b9e\u9645\u60c5\u51b5, \u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),", \u6807\u8bb0\u526f\u4f5c\u7528."),(0,o.kt)("li",{parentName:"ul"},"\u6839\u636e\u83b7\u53d6\u7684\u4e0b\u7ea7 ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement")," \u5bf9\u8c61, \u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"reconcileChildren")," \u751f\u6210 ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," \u5b50\u8282\u70b9 (\u53ea\u751f\u6210\u6b21\u7ea7\u5b50\u8282\u70b9)."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOMComponent.createElement()")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactClassComponent.render()")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactFunctionComponent()"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reconcileChildren"),"."),(0,o.kt)("li",{parentName:"ul"},"mountChildFibers/reconcileChildFibers:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mountChildFibers"),": similar logic, not tracking side effects."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"reconcileChildFibers"),": similar logic, tracking side effects."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"reconcileSingleElement"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"reconcileSingleTextNode"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"reconcileSinglePortal"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"reconcileChildrenArray"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"reconcileChildrenIterator"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeUnitOfWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5f53 ",(0,o.kt)("inlineCode",{parentName:"li"},"reconcileChildren")," \u8fd4\u56de\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"null")," \u65f6, \u8868\u793a DFS \u8fdb\u884c\u5230\u5b50\u53f6\u8282\u70b9,\n",(0,o.kt)("inlineCode",{parentName:"li"},"performUnitOfWork")," \u4f1a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork")," \u51fd\u6570."),(0,o.kt)("li",{parentName:"ul"},"\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"completeWork")," \u8fdb\u884c ",(0,o.kt)("inlineCode",{parentName:"li"},"render"),"."),(0,o.kt)("li",{parentName:"ul"},"\u628a\u5f53\u524d Fiber \u5bf9\u8c61\u7684\u526f\u4f5c\u7528\u961f\u5217 (",(0,o.kt)("inlineCode",{parentName:"li"},"firstEffect")," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"lastEffect"),")\n\u52a0\u5230\u7236\u8282\u70b9\u7684\u526f\u4f5c\u7528\u961f\u5217\u4e4b\u540e, \u66f4\u65b0\u7236\u8282\u70b9\u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"firstEffect")," \u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"lastEffect")," \u6307\u9488."),(0,o.kt)("li",{parentName:"ul"},"\u8bc6\u522b ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u9636\u6bb5\u8bbe\u7f6e\u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),",\n\u82e5\u5f53\u524d Fiber \u5b58\u5728\u526f\u4f5c\u7528 (Effects),\n\u5219\u5c06\u5f53\u524d Fiber \u52a0\u5165\u5230\u7236\u8282\u70b9\u7684 Effects \u961f\u5217,\n\u7b49\u5f85 Commit \u9636\u6bb5\u5904\u7406."),(0,o.kt)("li",{parentName:"ul"},"\u5c06 ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress")," \u8bbe\u7f6e\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"siblingFiber")," (DFS \u904d\u5386) \u6216 ",(0,o.kt)("inlineCode",{parentName:"li"},"returnFiber")," (DFS \u56de\u6eaf),\n\u7ee7\u7eed\u6784\u5efa Fiber \u6811."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u521b\u5efa DOM \u5b9e\u4f8b, \u7ed1\u5b9a\u81f3 ",(0,o.kt)("inlineCode",{parentName:"li"},"HostComponent"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"HostText")," ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.stateNode")," (\u5c40\u90e8\u72b6\u6001)."),(0,o.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e DOM \u8282\u70b9\u5c5e\u6027, \u7ed1\u5b9a\u4e8b\u4ef6."),(0,o.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),", \u6536\u96c6\u526f\u4f5c\u7528.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number\n) {\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n\n  if (lane === SyncLane) {\n    if (\n      (executionContext & LegacyUnbatchedContext) !== NoContext &&\n      (executionContext & (RenderContext | CommitContext)) === NoContext\n    ) {\n      // \u521d\u6b21\u6e32\u67d3.\n      performSyncWorkOnRoot(root);\n    } else {\n      // \u5bf9\u6bd4\u66f4\u65b0.\n      ensureRootIsScheduled(root, eventTime);\n    }\n  }\n\n  mostRecentlyUpdatedRoot = root;\n}\n\nfunction performSyncWorkOnRoot(root) {\n  // 1. \u83b7\u53d6\u672c\u6b21render\u7684\u4f18\u5148\u7ea7, \u521d\u6b21\u6784\u9020\u8fd4\u56de NoLanes.\n  const lanes = getNextLanes(root, NoLanes);\n  // 2. \u4eceroot\u8282\u70b9\u5f00\u59cb, \u81f3\u4e0a\u800c\u4e0b\u66f4\u65b0.\n  const exitStatus = renderRootSync(root, lanes);\n  // 3. \u5c06\u6700\u65b0\u7684 Fiber \u6811\u6302\u8f7d\u5230 root.finishedWork \u8282\u70b9\u4e0a.\n  const finishedWork: Fiber = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  // 4. \u8fdb\u5165 Commit \u9636\u6bb5.\n  commitRoot(root);\n}\n\nfunction performConcurrentWorkOnRoot(root) {\n  const originalCallbackNode = root.callbackNode;\n\n  // 1. \u5237\u65b0 pending \u72b6\u6001\u7684 effects, \u6709\u53ef\u80fd\u67d0\u4e9b effect \u4f1a\u53d6\u6d88\u672c\u6b21\u4efb\u52a1.\n  const didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    if (root.callbackNode !== originalCallbackNode) {\n      // \u4efb\u52a1\u88ab\u53d6\u6d88, \u9000\u51fa\u8c03\u7528.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // 2. \u83b7\u53d6\u672c\u6b21\u6e32\u67d3\u7684\u4f18\u5148\u7ea7.\n  const lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  // 3. \u6784\u9020 Fiber \u6811.\n  const exitStatus = renderRootConcurrent(root, lanes);\n\n  if (\n    includesSomeLane(\n      workInProgressRootIncludedLanes,\n      workInProgressRootUpdatedLanes\n    )\n  ) {\n    // \u5982\u679c\u5728 render \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u65b0 update, \u4e14\u65b0 update \u7684\u4f18\u5148\u7ea7\u4e0e\u6700\u521d render \u7684\u4f18\u5148\u7ea7\u6709\u4ea4\u96c6.\n    // \u90a3\u4e48\u6700\u521d render \u65e0\u6548, \u4e22\u5f03\u6700\u521d render \u7684\u7ed3\u679c, \u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6.\n    prepareFreshStack(root, NoLanes);\n  } else if (exitStatus !== RootIncomplete) {\n    // 4. \u5f02\u5e38\u5904\u7406: \u6709\u53ef\u80fdfiber\u6784\u9020\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5f02\u5e38.\n    if (exitStatus === RootError) {\n      processError();\n    }\n\n    const finishedWork = root.current.alternate; // Fiber\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n\n    // 5. \u8f93\u51fa: \u6e32\u67d3 Fiber\u6811.\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  // \u9000\u51fa\u524d\u518d\u6b21\u68c0\u6d4b, \u662f\u5426\u8fd8\u6709\u5176\u4ed6\u66f4\u65b0, \u662f\u5426\u9700\u8981\u53d1\u8d77\u65b0\u8c03\u5ea6.\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // \u6e32\u67d3\u88ab\u963b\u65ad, \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 performConcurrentWorkOnRoot \u51fd\u6570, \u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n\n  // \u5982\u679c FiberRoot \u53d8\u52a8, \u6216\u8005 update.lane \u53d8\u52a8, \u90fd\u4f1a\u5237\u65b0\u6808\u5e27, \u4e22\u5f03\u4e0a\u4e00\u6b21\u6e32\u67d3\u8fdb\u5ea6.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    // \u5237\u65b0\u6808\u5e27.\n    prepareFreshStack(root, lanes);\n  }\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf, \u8868\u660e render \u7ed3\u675f.\n  executionContext = prevExecutionContext;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // \u5982\u679c FiberRoot \u53d8\u52a8, \u6216\u8005 update.lane\u53d8\u52a8, \u90fd\u4f1a\u5237\u65b0\u6808\u5e27, \u4e22\u5f03\u4e0a\u4e00\u6b21\u6e32\u67d3\u8fdb\u5ea6.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer();\n    // \u5237\u65b0\u6808\u5e27.\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf.\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    return RootIncomplete;\n  } else {\n    // Completed the tree.\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  // \u91cd\u7f6e FiberRoot \u4e0a\u7684\u5c5e\u6027.\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  const timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    root.timeoutHandle = noTimeout;\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf.\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null); // currentHostRootFiber.alternate.\n  workInProgressRootRenderLanes =\n    subtreeRenderLanes =\n    workInProgressRootIncludedLanes =\n      lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n}\n\nfunction workLoopSync() {\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield.\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // unitOfWork \u5c31\u662f\u88ab\u4f20\u5165\u7684 workInProgress.\n  const current = unitOfWork.alternate;\n  const next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // \u5982\u679c\u6ca1\u6709\u6d3e\u751f\u51fa\u65b0\u7684\u4e0b\u7ea7\u8282\u70b9, \u5219\u8fdb\u5165 completeWork \u9636\u6bb5, \u4f20\u5165\u7684\u662f\u5f53\u524d unitOfWork.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    // \u5982\u679c\u6d3e\u751f\u51fa\u65b0\u7684\u4e0b\u7ea7\u8282\u70b9, \u5219\u9012\u5f52\u5904\u7406.\n    workInProgress = next;\n  }\n}\n\nfunction _performUnitOfWork_Recursive(unitOfWork: Fiber): void {\n  beginWork(unitOfWork.alternate, unitOfWork, subtreeRenderLanes);\n  if (unitOfWork.child) _performUnitOfWork_Recursive(unitOfWork.child);\n  completeUnitOfWork(unitOfWork);\n  if (unitOfWork.sibling) _performUnitOfWork_Recursive(unitOfWork.sibling);\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  // 1. \u8bbe\u7f6e workInProgress \u4f18\u5148\u7ea7\u4e3a NoLanes (\u6700\u9ad8\u4f18\u5148\u7ea7).\n  const updateLanes = workInProgress.lanes;\n  didReceiveUpdate = false;\n  workInProgress.lanes = NoLanes;\n\n  // 2. \u6839\u636e workInProgress \u8282\u70b9\u7684\u7c7b\u578b, \u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u6d3e\u751f\u51fa\u5b50\u8282\u70b9.\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n  }\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  let completedWork = unitOfWork;\n\n  // \u5916\u5c42\u5faa\u73af\u63a7\u5236\u5e76\u79fb\u52a8\u6307\u9488 (workInProgress/completedWork).\n  do {\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      // 1. \u5904\u7406 Fiber \u8282\u70b9, \u4f1a\u8c03\u7528\u6e32\u67d3\u5668 (\u5173\u8054 Fiber \u8282\u70b9\u548c DOM \u5bf9\u8c61, \u7ed1\u5b9a\u4e8b\u4ef6\u7b49).\n      const next = completeWork(current, completedWork, subtreeRenderLanes);\n\n      if (next !== null) {\n        // \u5982\u679c\u6d3e\u751f\u51fa\u5176\u4ed6\u7684\u5b50\u8282\u70b9, \u5219\u56de\u5230 beginWork \u9636\u6bb5\u8fdb\u884c\u5904\u7406.\n        workInProgress = next;\n        return;\n      }\n\n      // \u91cd\u7f6e\u5b50\u8282\u70b9\u7684\u4f18\u5148\u7ea7.\n      resetChildLanes(completedWork);\n\n      if (\n        returnFiber !== null &&\n        (returnFiber.flags & Incomplete) === NoFlags\n      ) {\n        // 2. \u6536\u96c6\u5f53\u524d Fiber \u8282\u70b9\u4ee5\u53ca\u5176\u5b50\u6811\u7684\u526f\u4f5c\u7528 Effects.\n        // 2.1 \u628a\u5b50\u8282\u70b9\u7684\u526f\u4f5c\u7528\u961f\u5217\u6dfb\u52a0\u5230\u7236\u8282\u70b9\u4e0a.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = completedWork.firstEffect;\n        }\n\n        if (completedWork.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;\n          }\n\n          returnFiber.lastEffect = completedWork.lastEffect;\n        }\n\n        // 2.2 \u5982\u679c\u5f53\u524d Fiber \u8282\u70b9\u6709\u526f\u4f5c\u7528, \u5c06\u5176\u6dfb\u52a0\u5230\u5b50\u8282\u70b9\u7684\u526f\u4f5c\u7528\u961f\u5217\u4e4b\u540e.\n        const flags = completedWork.flags;\n\n        if (returnFiber.lastEffect !== null) {\n          returnFiber.lastEffect.nextEffect = completedWork;\n        } else {\n          returnFiber.firstEffect = completedWork;\n        }\n\n        returnFiber.lastEffect = completedWork;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // \u5982\u679c\u6709\u5144\u5f1f\u8282\u70b9, \u8fd4\u56de\u4e4b\u540e\u518d\u6b21\u8fdb\u5165 beginWork \u9636\u6bb5.\n      workInProgress = siblingFiber;\n      return;\n    }\n\n    // \u79fb\u52a8\u6307\u9488, \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9.\n    completedWork = returnFiber;\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // \u5df2\u56de\u6eaf\u5230\u6839\u8282\u70b9, \u8bbe\u7f6e workInProgressRootExitStatus = RootCompleted.\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case HostRoot: {\n      const fiberRoot: FiberRoot = workInProgress.stateNode;\n\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n\n      if (current === null || current.child === null) {\n        // \u8bbe\u7f6e fiber.flags.\n        workInProgress.flags |= Snapshot;\n      }\n\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      const currentHostContext = getHostContext();\n\n      // 1. \u521b\u5efa DOM \u5bf9\u8c61.\n      const instance = createInstance(\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress\n      );\n\n      // 2. \u628a\u5b50\u6811\u4e2d\u7684 DOM \u5bf9\u8c61 append \u5230\u672c\u8282\u70b9\u7684 DOM \u5bf9\u8c61\u4e4b\u540e.\n      appendAllChildren(instance, workInProgress, false, false);\n\n      // 3. \u8bbe\u7f6e stateNode \u5c5e\u6027, \u6307\u5411 DOM \u5bf9\u8c61.\n      workInProgress.stateNode = instance;\n\n      if (\n        // 4. \u8bbe\u7f6eDOM\u5bf9\u8c61\u7684\u5c5e\u6027, \u7ed1\u5b9a\u4e8b\u4ef6\u7b49.\n        finalizeInitialChildren(\n          instance,\n          type,\n          newProps,\n          rootContainerInstance,\n          currentHostContext\n        )\n      ) {\n        // \u8bbe\u7f6e fiber.flags (Update).\n        markUpdate(workInProgress);\n      }\n\n      if (workInProgress.ref !== null) {\n        // \u8bbe\u7f6e fiber.flags (Ref).\n        markRef(workInProgress);\n      }\n\n      return null;\n    }\n  }\n}\n")),(0,o.kt)("h4",{id:"host-root-fiber-rendering"},"Host Root Fiber Rendering"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function updateHostRoot(current, workInProgress, renderLanes) {\n  // 1. \u72b6\u6001\u8ba1\u7b97, \u66f4\u65b0\u6574\u5408\u5230 workInProgress.memoizedState.\n  const updateQueue = workInProgress.updateQueue;\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState !== null ? prevState.element : null;\n  cloneUpdateQueue(current, workInProgress);\n  // \u904d\u5386 updateQueue.shared.pending, \u63d0\u53d6\u6709\u8db3\u591f\u4f18\u5148\u7ea7\u7684 update\u5bf9\u8c61, \u8ba1\u7b97\u51fa\u6700\u7ec8\u7684\u72b6\u6001 workInProgress.memoizedState.\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState;\n\n  // 2. \u83b7\u53d6\u4e0b\u7ea7 ReactElement \u5bf9\u8c61.\n  const nextChildren = nextState.element;\n  const root: FiberRoot = workInProgress.stateNode;\n\n  // 3. \u6839\u636e ReactElement \u5bf9\u8c61, \u8c03\u7528 reconcileChildren \u751f\u6210 Fiber \u5b50\u8282\u70b9 (\u53ea\u751f\u6210\u6b21\u7ea7\u5b50\u8282\u70b9).\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n")),(0,o.kt)("h4",{id:"host-component-fiber-rendering"},"Host Component Fiber Rendering"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n) {\n  // 1. \u72b6\u6001\u8ba1\u7b97, \u7531\u4e8e HostComponent \u662f\u65e0\u72b6\u6001\u7ec4\u4ef6, \u53ea\u9700\u8981\u6536\u96c6 nextProps.\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  // 2. \u83b7\u53d6\u4e0b\u7ea7 ReactElement \u5bf9\u8c61.\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // \u5982\u679c\u5b50\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u6587\u672c\u8282\u70b9, \u4e0d\u7528\u518d\u521b\u5efa\u4e00\u4e2a HostText \u7c7b\u578b\u7684 Fiber.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // \u8bbe\u7f6e fiber.flags.\n    workInProgress.flags |= ContentReset;\n  }\n\n  // \u8bbe\u7f6e fiber.flags.\n  markRef(current, workInProgress);\n\n  // 3. \u6839\u636e ReactElement \u5bf9\u8c61, \u8c03\u7528 reconcileChildren \u751f\u6210 Fiber \u5b50\u8282\u70b9(\u53ea\u751f\u6210\u6b21\u7ea7\u5b50\u8282\u70b9)\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n")),(0,o.kt)("h4",{id:"class-component-fiber-rendering"},"Class Component Fiber Rendering"),(0,o.kt)("h4",{id:"function-component-fiber-rendering"},"Function Component Fiber Rendering"),(0,o.kt)("h3",{id:"reconciler-update-workflow"},"Reconciler Update Workflow"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactUpdateQueue.new.js"},"Update and Update Queue"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UpdateQueue")," \u662f\u4e00\u4e2a",(0,o.kt)("strong",{parentName:"li"},"\u5faa\u73af\u961f\u5217"),"."),(0,o.kt)("li",{parentName:"ul"},"\u521b\u5efa ",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," \u65f6\u673a (",(0,o.kt)("inlineCode",{parentName:"li"},"createUpdate"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"enqueueUpdate"),"):",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactFiberReconciler.updateContainer"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactFiberClassComponent.setState"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactFiberHooks.dispatchAction"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Render")," \u9636\u6bb5, \u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"XXXClassInstance"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useXXX"),",\n\u904d\u5386\u5904\u7406 Update Queue (",(0,o.kt)("inlineCode",{parentName:"li"},"processUpdateQueue"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnUpdate"),"), \u8ba1\u7b97\u51fa memoizedState,\n\u5229\u7528 pendingProps \u4e0e memoizedState \u4ea7\u751f\u65b0\u7684 ReactElement (",(0,o.kt)("inlineCode",{parentName:"li"},"ClassComponent.render()"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent()"),").")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Update<State> {\n  lane: Lane;\n  tag: 'UpdateState' | 'ReplaceState' | 'ForceUpdate' | 'CaptureUpdate';\n  payload: any;\n  callback: (() => mixed) | null;\n  next: Update<State> | null;\n  _eventTime: number;\n}\n\ninterface SharedQueue<State> {\n  pending: Update<State> | null;\n}\n\ninterface UpdateQueue<State> {\n  baseState: State;\n  firstBaseUpdate: Update<State> | null;\n  lastBaseUpdate: Update<State> | null;\n  shared: SharedQueue<State>;\n  effects: Array<Update<State>> | null; // Updates with `callback`.\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberClassComponent.new.js"},"ReactFiberClassComponent.setState"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    // 1. \u83b7\u53d6 ClassComponent \u5b9e\u4f8b\u5bf9\u5e94\u7684 Fiber \u8282\u70b9.\n    const fiber = getInstance(inst);\n    // 2. \u521b\u5efa Update \u5bf9\u8c61.\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      update.callback = callback;\n    }\n\n    // 3. \u5c06 Update \u5bf9\u8c61\u6dfb\u52a0\u5230\u5f53\u524d Fiber \u8282\u70b9\u7684 updateQueue.\n    enqueueUpdate(fiber, update);\n    // 4. \u8bf7\u6c42\u8c03\u5ea6, \u8fdb\u5165 Reconciler.\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  },\n};\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js"},"ReactFiberHooks.dispatchAction"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A\n) {\n  // 1. \u521b\u5efa Update \u5bf9\u8c61.\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: null,\n  };\n\n  // 2. \u5c06 Update \u5bf9\u8c61\u6dfb\u52a0\u5230\u5f53\u524d Hook \u5bf9\u8c61\u7684 updateQueue.\n  const pending = queue.pending;\n\n  if (pending === null) {\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n\n  // 3. \u8bf7\u6c42\u8c03\u5ea6, \u8fdb\u5165 Reconciler.\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"createUpdate."),(0,o.kt)("li",{parentName:"ul"},"enqueueUpdate."),(0,o.kt)("li",{parentName:"ul"},"scheduleUpdateOnFiber."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"markUpdateLaneFromFiberToRoot"),":\n\u627e\u51fa Fiber \u6811\u4e2d\u53d7\u5230\u672c\u6b21 ",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," \u5f71\u54cd\u7684\u6240\u6709\u8282\u70b9 (\u5b58\u5728\u66f4\u65b0\u53ef\u80fd),\n\u8bbe\u7f6e\u8fd9\u4e9b\u8282\u70b9\u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.lanes")," \u6216 ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.childLanes"),"."),(0,o.kt)("li",{parentName:"ul"},"ensureRootIsScheduled."),(0,o.kt)("li",{parentName:"ul"},"flushSyncCallbacks."),(0,o.kt)("li",{parentName:"ul"},"performSyncWorkOnRoot / performConcurrentWorkOnRoot."),(0,o.kt)("li",{parentName:"ul"},"renderRootSync / renderRootConcurrent."),(0,o.kt)("li",{parentName:"ul"},"workLoopSync / workLoopConcurrent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"performUnitOfWork(workInProgress)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"beginWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u82e5\u5224\u65ad\u5f53\u524d Fiber \u8282\u70b9\u65e0\u9700\u66f4\u65b0, \u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"bailoutOnAlreadyFinishedWork")," \u5faa\u73af\u68c0\u6d4b\u5b50\u8282\u70b9\u662f\u5426\u9700\u8981\u66f4\u65b0:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"instance.shouldComponentUpdate() === false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress.pendingProps === current.memoizedProps"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"hasLegacyContextChange() === false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"checkIfContextChanged(fiber.dependencies) === false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"includesSomeLane(fiber.lanes, renderLanes) === false"),"."))),(0,o.kt)("li",{parentName:"ul"},"\u82e5\u5224\u65ad\u5f53\u524d Fiber \u8282\u70b9\u9700\u8981\u66f4\u65b0, \u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"UpdateXXXComponent")," \u8fdb\u884c\u66f4\u65b0."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"bailoutOnAlreadyFinishedWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u82e5 ",(0,o.kt)("inlineCode",{parentName:"li"},"includesSomeLane(renderLanes, workInProgress.childLanes) === false"),"\n\u8868\u660e\u5b50\u8282\u70b9\u65e0\u9700\u66f4\u65b0, \u53ef\u76f4\u63a5\u8fdb\u5165\u56de\u6eaf\u9636\u6bb5 (",(0,o.kt)("inlineCode",{parentName:"li"},"completeUnitOfWork"),")."),(0,o.kt)("li",{parentName:"ul"},"\u82e5 ",(0,o.kt)("inlineCode",{parentName:"li"},"includesSomeLane(renderLanes, workInProgress.childLanes) === true"),",\n\u8868\u660e\u5b50\u8282\u70b9\u9700\u8981\u66f4\u65b0, clone \u5e76\u8fd4\u56de\u5b50\u8282\u70b9."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"updateHostRoot/updateXXXComponent"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactClassComponent.render()")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactFunctionComponent()")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOMComponent.createElement()"),":\n\u904d\u5386\u5904\u7406 Update Queue (",(0,o.kt)("inlineCode",{parentName:"li"},"processUpdateQueue"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnUpdate"),"), \u8ba1\u7b97\u51fa memoizedState,\n\u5229\u7528 pendingProps \u4e0e memoizedState \u4ea7\u751f\u65b0\u7684 ReactElement."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reconcileChildren"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u901a\u8fc7 ReactElement \u4e0e OldFiber, \u4ea7\u751f\u6216\u590d\u7528 ChildFiber."),(0,o.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),", \u6807\u8bb0\u526f\u4f5c\u7528: ",(0,o.kt)("inlineCode",{parentName:"li"},"Placement"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion"),"/etc."),(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e ",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion")," Fiber, \u5728 ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," \u9636\u6bb5\u63d0\u524d\u5c06\u5176\u6dfb\u52a0\u5230\u7236\u8282\u70b9\u7684 Effects \u961f\u5217\u4e2d\n(\u8be5\u8282\u70b9\u4f1a\u8131\u79bb Fiber \u6811, \u4e0d\u4f1a\u518d\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"li"},"completeWork")," \u9636\u6bb5, \u65e0\u6cd5\u5728\u6b64\u9636\u6bb5\u6536\u96c6\u6b64\u8282\u70b9\u526f\u4f5c\u7528)."))),(0,o.kt)("li",{parentName:"ul"},"reconcileChildFibers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeUnitOfWork"),": \u6536\u96c6\u526f\u4f5c\u7528."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"completeWork"),": \u6536\u96c6\u526f\u4f5c\u7528.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// \u6807\u8bb0\u6240\u6709\u53ef\u80fd\u5b58\u5728\u66f4\u65b0\u7684\u8282\u70b9, \u5e76\u8bbe\u7f6e fiber.lanes \u4e0e fiber.childLanes.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber, // \u88ab\u66f4\u65b0\u7684\u8282\u70b9.\n  lane: Lane\n): FiberRoot | null {\n  // \u8bbe\u7f6e sourceFiber.lanes.\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    // \u540c\u65f6\u8bbe\u7f6e sourceFiber.alternate.lanes.\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  // \u4ece sourceFiber \u5f00\u59cb, \u5411\u4e0a\u904d\u5386\u6240\u6709 Fiber, \u76f4\u5230 HostRootFiber.\n  // \u8bbe\u7f6e\u6cbf\u9014\u6240\u6709 fiber.childLanes \u4e0e fiber.alternate.childLanes.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const updateLanes = workInProgress.lanes;\n\n  if (current !== null) {\n    // \u8fdb\u5165\u5bf9\u6bd4.\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      didReceiveUpdate = true;\n    } else if (!includesSomeLane(renderLanes, updateLanes)) {\n      // \u5f53\u524d\u6e32\u67d3\u4f18\u5148\u7ea7 renderLanes \u4e0d\u5305\u62ec fiber.lanes, \u8868\u660e\u5f53\u524d Fiber \u8282\u70b9\u65e0\u9700\u66f4\u65b0.\n      didReceiveUpdate = false;\n      // \u8c03\u7528 bailoutOnAlreadyFinishedWork \u5faa\u73af\u68c0\u6d4b\u5b50\u8282\u70b9\u662f\u5426\u9700\u8981\u66f4\u65b0.\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n\n  // \u5f53\u524d\u8282\u70b9\u9700\u8981\u66f4\u65b0.\n  workInProgress.lanes = NoLanes; // \u6700\u9ad8\u4f18\u5148\u7ea7\n\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // \u6e32\u67d3\u4f18\u5148\u7ea7\u4e0d\u5305\u62ec workInProgress.childLanes, \u8868\u660e\u5b50\u8282\u70b9\u4e5f\u65e0\u9700\u66f4\u65b0.\n    // \u8fd4\u56de null, \u76f4\u63a5\u8fdb\u5165\u56de\u6eaf\u9636\u6bb5.\n    return null;\n  } else {\n    // Fiber \u81ea\u8eab\u65e0\u9700\u66f4\u65b0, \u4f46\u5b50\u8282\u70b9\u9700\u8981\u66f4\u65b0, clone \u5e76\u8fd4\u56de\u5b50\u8282\u70b9.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case HostComponent: {\n      // \u975e\u6587\u672c\u8282\u70b9.\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n\n      if (current !== null && workInProgress.stateNode !== null) {\n        // \u5904\u7406\u6539\u52a8.\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      }\n\n      return null;\n    }\n    case HostText: {\n      // \u6587\u672c\u8282\u70b9.\n      const newText = newProps;\n\n      if (current !== null && workInProgress.stateNode !== null) {\n        const oldText = current.memoizedProps;\n        // \u5904\u7406\u6539\u52a8.\n        updateHostText(current, workInProgress, oldText, newText);\n      }\n\n      return null;\n    }\n  }\n}\n\nfunction updateHostComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  type: Type,\n  newProps: Props,\n  rootContainerInstance: Container\n) {\n  const oldProps = current.memoizedProps;\n\n  if (oldProps === newProps) {\n    return;\n  }\n\n  const instance: Instance = workInProgress.stateNode;\n  const currentHostContext = getHostContext();\n  const updatePayload = prepareUpdate(\n    instance,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n    currentHostContext\n  );\n  workInProgress.updateQueue = updatePayload;\n\n  // \u5982\u679c\u6709\u5c5e\u6027\u53d8\u52a8, \u8bbe\u7f6e fiber.flags |= Update, \u7b49\u5f85 Commit \u9636\u6bb5\u5904\u7406.\n  if (updatePayload) {\n    markUpdate(workInProgress);\n  }\n}\n\nfunction updateHostText(\n  current: Fiber,\n  workInProgress: Fiber,\n  oldText: string,\n  newText: string\n) {\n  // \u5982\u679c\u6709\u5c5e\u6027\u53d8\u52a8, \u8bbe\u7f6e fiber.flags |= Update, \u7b49\u5f85 Commit \u9636\u6bb5\u5904\u7406.\n  if (oldText !== newText) {\n    markUpdate(workInProgress);\n  }\n}\n")),(0,o.kt)("h3",{id:"reconciler-diff-workflow"},"Reconciler Diff Workflow"),(0,o.kt)("p",null,"Reconciler:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"O(n) incomplete tree comparison: only compare same level nodes."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactElement")," + Old Children Fiber -> New Children Fiber."),(0,o.kt)("li",{parentName:"ul"},"Create new children fiber (non exist/need update),\ndrop useless children fiber,\nreuse old children fiber,\nset ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"Placement"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion"),".\nprepare for ",(0,o.kt)("inlineCode",{parentName:"li"},"Commit")," stage."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"key")," prop to hint for Fiber nodes reuse."),(0,o.kt)("li",{parentName:"ul"},"Detailed diff ",(0,o.kt)("a",{parentName:"li",href:"https://7kms.github.io/react-illustration-series/algorithm/diff"},"algorithm"),".")),(0,o.kt)("h4",{id:"different-types-elements"},"Different Types Elements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Rebuild element and children.")),(0,o.kt)("h4",{id:"same-type-dom-elements"},"Same Type DOM Elements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Only update the changed attributes."),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"key")," attribute to match children.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Best Practice"),": give ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"<li>/<tr>/<tc>")," elements\n(stable, predictable, unique and not array indexed)."),(0,o.kt)("h4",{id:"same-type-component-elements"},"Same Type Component Elements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Update the props to match the new element.")),(0,o.kt)("h4",{id:"reconcile-array-elements"},"Reconcile Array Elements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u7b2c\u4e00\u6b21\u5faa\u73af: \u6bd4\u8f83\u516c\u5171\u5e8f\u5217:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u4ece\u5de6\u5230\u53f3\u9010\u4e00\u904d\u5386, \u9047\u5230\u4e00\u4e2a\u65e0\u6cd5\u590d\u7528\u7684\u8282\u70b9\u5219\u9000\u51fa\u5faa\u73af."))),(0,o.kt)("li",{parentName:"ul"},"\u7b2c\u4e8c\u6b21\u5faa\u73af: \u6bd4\u8f83\u975e\u516c\u5171\u5e8f\u5217",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u7684\u57fa\u7840\u4e0a, \u5982\u679c oldFiber \u961f\u5217\u904d\u5386\u5b8c\u6210, \u8bc1\u660e newChildren \u961f\u5217\u4e2d\u5269\u4f59\u7684\u5bf9\u8c61\u5168\u90e8\u90fd\u662f\u65b0\u589e."),(0,o.kt)("li",{parentName:"ul"},"\u6b64\u65f6\u7ee7\u7eed\u904d\u5386\u5269\u4f59\u7684 newChildren \u961f\u5217\u5373\u53ef, \u6ca1\u6709\u989d\u5916\u7684 diff \u6bd4\u8f83."),(0,o.kt)("li",{parentName:"ul"},"\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u7684\u57fa\u7840\u4e0a, \u5982\u679c oldFiber \u961f\u5217\u6ca1\u6709\u904d\u5386\u5b8c,\n\u9700\u8981\u5c06 oldFiber \u961f\u5217\u4e2d\u5269\u4f59\u7684\u5bf9\u8c61\u90fd\u6dfb\u52a0\u5230\u4e00\u4e2a Map \u96c6\u5408\u4e2d, \u4ee5 oldFiber.key \u4f5c\u4e3a\u952e."),(0,o.kt)("li",{parentName:"ul"},"\u6b64\u65f6\u7ee7\u7eed\u904d\u5386\u5269\u4f59\u7684 newChildren \u961f\u5217, \u9700\u8981\u7528 newChild.key \u5230 Map \u96c6\u5408\u4e2d\u8fdb\u884c\u67e5\u627e,\n\u5c06\u5339\u914d\u4e0a\u7684 oldFiber \u53d6\u51fa\u4e0e newChild \u8fdb\u884c diff \u6bd4\u8f83."))),(0,o.kt)("li",{parentName:"ul"},"\u6e05\u7406\u5de5\u4f5c:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5728\u7b2c\u4e8c\u6b21\u5faa\u73af\u7ed3\u675f\u540e,\n\u82e5 Map \u96c6\u5408\u4e2d\u8fd8\u6709\u5269\u4f59\u7684 oldFiber,\n\u5219\u8bf4\u660e oldFiber \u90fd\u662f\u88ab\u5220\u9664\u7684\u8282\u70b9, \u9700\u8981\u6253\u4e0a\u5220\u9664\u6807\u8bb0 (",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion"),").")))),(0,o.kt)("h3",{id:"reconciler-commit-workflow"},"Reconciler Commit Workflow"),(0,o.kt)("h4",{id:"renderer-and-hostconfig-protocol"},"Renderer and HostConfig Protocol"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Renderer"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Implementing ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig")," ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/README.md"},"protocol"),"."),(0,o.kt)("li",{parentName:"ul"},"Rendering fiber tree to real contents:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Web: DOM node."),(0,o.kt)("li",{parentName:"ul"},"Native: native UI."),(0,o.kt)("li",{parentName:"ul"},"Server: SSR strings."))),(0,o.kt)("li",{parentName:"ul"},"Real renderer ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/sabertazimi/awesome-web/tree/main/packages/react-renderer/src/renderer"},"demo"),".")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"HostConfig")," protocol:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"isPrimaryRender: true"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"supportsHydration: true"),": SSR renderer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"supportsMutation: true"),": React DOM renderer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"supportsPersistence: true"),": React Native renderer."),(0,o.kt)("li",{parentName:"ul"},"Platform timer functions:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"now."),(0,o.kt)("li",{parentName:"ul"},"scheduleTimeout."),(0,o.kt)("li",{parentName:"ul"},"cancelTimeout."))),(0,o.kt)("li",{parentName:"ul"},"Creation operations:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"createInstance."),(0,o.kt)("li",{parentName:"ul"},"createTextInstance."))),(0,o.kt)("li",{parentName:"ul"},"UI tree operations:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"appendInitialChild."),(0,o.kt)("li",{parentName:"ul"},"appendChild."),(0,o.kt)("li",{parentName:"ul"},"appendChildToContainer."),(0,o.kt)("li",{parentName:"ul"},"removeChildFromContainer."),(0,o.kt)("li",{parentName:"ul"},"removeChild."),(0,o.kt)("li",{parentName:"ul"},"clearContainer."))),(0,o.kt)("li",{parentName:"ul"},"Update props operations:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"finalizeInitialChildren."),(0,o.kt)("li",{parentName:"ul"},"prepareUpdate."),(0,o.kt)("li",{parentName:"ul"},"commitUpdate."),(0,o.kt)("li",{parentName:"ul"},"commitTextUpdate."),(0,o.kt)("li",{parentName:"ul"},"shouldSetTextContent."),(0,o.kt)("li",{parentName:"ul"},"resetTextContent."))),(0,o.kt)("li",{parentName:"ul"},"Context and schedule operations:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"getRootHostContext."),(0,o.kt)("li",{parentName:"ul"},"getChildHostContext."),(0,o.kt)("li",{parentName:"ul"},"getPublicInstance."),(0,o.kt)("li",{parentName:"ul"},"prepareForCommit."),(0,o.kt)("li",{parentName:"ul"},"resetAfterCommit."),(0,o.kt)("li",{parentName:"ul"},"preparePortalMount.")))),(0,o.kt)("h4",{id:"commit-root"},"Commit Root"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FiberRoot.finishedWork"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u526f\u4f5c\u7528\u961f\u5217\u6302\u8f7d\u5728\u6839\u8282\u70b9\u4e0a (",(0,o.kt)("inlineCode",{parentName:"li"},"finishedWork.firstEffect"),")."),(0,o.kt)("li",{parentName:"ul"},"\u6700\u65b0 DOM \u5bf9\u8c61\u6302\u8f7d\u5728 HostComponent Fiber \u4e0a (",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.stateNode"),")."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BeforeMutation")," phase:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Read the state of the host tree right before DOM mutation."),(0,o.kt)("li",{parentName:"ul"},"Process\n",(0,o.kt)("inlineCode",{parentName:"li"},"Passive"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Snapshot"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion"),"\neffects fiber."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"instance.getSnapshotBeforeUpdate"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Mutation")," phase.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Mutate the host tree, render UI."),(0,o.kt)("li",{parentName:"ul"},"Process\n",(0,o.kt)("inlineCode",{parentName:"li"},"ContentReset"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Ref"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Visibility"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Placement"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Update"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Deletion"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Hydrating"),"\neffects fiber."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Layout")," phase.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"After DOM mutation."),(0,o.kt)("li",{parentName:"ul"},"Process ",(0,o.kt)("inlineCode",{parentName:"li"},"Update | Callback")," effects fiber."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"instance.componentDidMount/componentDidUpdate")," (",(0,o.kt)("strong",{parentName:"li"},"synchronous"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"instance")," callback for ",(0,o.kt)("inlineCode",{parentName:"li"},"setState"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect")," (",(0,o.kt)("strong",{parentName:"li"},"synchronous"),")."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"CommitEffects")," functions located in\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCommitWork.new.js"},"ReactFiberCommitWork"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function commitRoot(root: FiberRoot, recoverableErrors: null | Array<mixed>) {\n  const previousUpdateLanePriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(root, recoverableErrors, previousUpdateLanePriority);\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(\n  root: FiberRoot,\n  recoverableErrors: null | Array<mixed>,\n  renderPriorityLevel: EventPriority\n) {\n  do {\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n    return null;\n  }\n\n  // \u6e05\u7a7a FiberRoot \u5bf9\u8c61\u4e0a\u7684\u5c5e\u6027.\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  root.callbackNode = null;\n  root.callbackPriority = NoLane;\n\n  // Update the first and last pending times on this root.\n  // The new first pending time is whatever is left on the root fiber.\n  const remainingLanes = mergeLanes(\n    finishedWork.lanes,\n    finishedWork.childLanes\n  );\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  }\n\n  // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible before anything else in commit phase.\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      pendingPassiveEffectsRemainingLanes = remainingLanes;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n\n  // Check if there are any effects in the whole tree.\n  const subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  const rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    // Store context.\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    const previousPriority = getCurrentUpdatePriority();\n    const prevExecutionContext = executionContext;\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    executionContext |= CommitContext;\n\n    // Reset this to null before calling life cycles.\n    ReactCurrentOwner.current = null;\n\n    // `BeforeMutation` phase:\n    // read the state of the host tree right before we mutate it.\n    // `getSnapshotBeforeUpdate` is called.\n    commitBeforeMutationEffects(root, finishedWork);\n\n    // `Mutation` phase:\n    // mutate the host tree.\n    commitMutationEffects(root, finishedWork, lanes);\n\n    resetAfterCommit(root.containerInfo);\n\n    // The workInProgress tree is now the current tree (during `componentDidMount`/`Update`).\n    root.current = finishedWork;\n\n    // `Layout` phase:\n    // `useLayoutEffect` is called.\n    commitLayoutEffects(finishedWork, root, lanes);\n\n    // Tell Scheduler to yield at the end of the frame,\n    // so the browser has an opportunity to paint.\n    requestPaint();\n\n    // Restore context.\n    executionContext = prevExecutionContext;\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork;\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects:\n    // Stash a reference to them.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n    // There were no passive effects:\n    // immediately release the cache pool for this render.\n    releaseRootPooledCache(root, remainingLanes);\n  }\n\n  // Always call this before exiting `commitRoot`,\n  // to ensure that any additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  // If the passive effects are the result of a discrete render,\n  // flush them synchronously at the end of the current task\n  // so that the result is immediately observable.\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbacks();\n\n  return null;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const BeforeMutationMask = Update | Snapshot | ChildDeletion | Visibility;\n\nconst MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\n\nconst LayoutMask = Update | Callback | Ref | Visibility;\n")),(0,o.kt)("h4",{id:"before-mutation-phase"},"Before Mutation Phase"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Passive")," effects:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," fiber (hooks):\nIf there are pending passive effects,\nschedule a callback (",(0,o.kt)("strong",{parentName:"li"},"asynchronous"),") to process them,\n",(0,o.kt)("strong",{parentName:"li"},"as early as possible")," before anything else in commit phase."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useXXX")," hooks normally run in ",(0,o.kt)("strong",{parentName:"li"},"asynchronous")," mode."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," (",(0,o.kt)("strong",{parentName:"li"},"asynchronous"),") run after ",(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Snapshot")," effects:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HostRoot")," fiber: ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.clearContainer"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ClassComponent")," fiber: ",(0,o.kt)("inlineCode",{parentName:"li"},"instance.getSnapShotBeforeUpdate"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Deletion")," effects: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitBeforeMutationEffectsDeletion")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.beforeActiveInstanceBlur"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// `Passive` effects.\nscheduleCallback(NormalSchedulerPriority, () => {\n  flushPassiveEffects();\n  return null;\n});\n\nfunction flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  if (pendingPassiveEffectsRenderPriority !== NoSchedulerPriority) {\n    const priorityLevel =\n      pendingPassiveEffectsRenderPriority > NormalSchedulerPriority\n        ? NormalSchedulerPriority\n        : pendingPassiveEffectsRenderPriority;\n    pendingPassiveEffectsRenderPriority = NoSchedulerPriority;\n    return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n  }\n\n  return false;\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  rootWithPendingPassiveEffects = null;\n  pendingPassiveEffectsLanes = NoLanes;\n\n  // 1. \u6267\u884c effect.destroy().\n  const unmountEffects = pendingPassiveHookEffectsUnmount;\n  pendingPassiveHookEffectsUnmount = [];\n\n  for (let i = 0; i < unmountEffects.length; i += 2) {\n    const effect = unmountEffects[i];\n    const fiber = unmountEffects[i + 1];\n    const destroy = effect.destroy;\n    effect.destroy = undefined;\n\n    if (typeof destroy === 'function') {\n      destroy();\n    }\n  }\n\n  // 2. \u6267\u884c\u65b0 effect.create(), \u91cd\u65b0\u8d4b\u503c\u5230 effect.destroy.\n  const mountEffects = pendingPassiveHookEffectsMount;\n  pendingPassiveHookEffectsMount = [];\n\n  for (let i = 0; i < mountEffects.length; i += 2) {\n    const effect = mountEffects[i];\n    const fiber = mountEffects[i + 1];\n    effect.destroy = create();\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// `Snapshot` effects.\nfunction commitBeforeMutationEffects(root: FiberRoot, firstChild: Fiber) {\n  HostConfig.prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n\n  // DFS traverse.\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const deletions = fiber.deletions;\n\n    if (deletions !== null) {\n      for (let i = 0; i < deletions.length; i++) {\n        const deletion = deletions[i];\n        commitBeforeMutationEffectsDeletion(deletion);\n      }\n    }\n\n    const child = fiber.child;\n\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      // 1. Visit children.\n      nextEffect = child;\n    } else {\n      while (nextEffect !== null) {\n        const fiber = nextEffect;\n        commitBeforeMutationEffectsOnFiber(fiber);\n        const sibling = fiber.sibling;\n\n        // 2. Visit sibling.\n        if (sibling !== null) {\n          nextEffect = sibling;\n          break;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork: Fiber) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case ClassComponent: {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState\n          );\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n\n        break;\n      }\n      case HostRoot: {\n        if (supportsMutation) {\n          const root = finishedWork.stateNode;\n          HostConfig.clearContainer(root.containerInfo);\n        }\n\n        break;\n      }\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types.\n        break;\n      default: {\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.'\n        );\n      }\n    }\n  }\n}\n\nfunction commitBeforeMutationEffectsDeletion(deletion: Fiber) {\n  if (doesFiberContain(deletion, focusedInstanceHandle)) {\n    shouldFireAfterActiveInstanceBlur = true;\n    beforeActiveInstanceBlur(deletion);\n  }\n}\n")),(0,o.kt)("h4",{id:"mutation-phase"},"Mutation Phase"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ContentReset")," effects: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitResetTextContent")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.resetTextContext"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Ref")," effects: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitAttachRef"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"commitDetachRef")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.getPublicInstance"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Visibility")," effects:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SuspenseComponent")," fiber:\n",(0,o.kt)("inlineCode",{parentName:"li"},"markCommitTimeOfFallback"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"OffscreenComponent")," fiber:\n",(0,o.kt)("inlineCode",{parentName:"li"},"hideOrUnhideAllChildren")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.hideInstance/hideTextInstance/unhideInstance/unhideTextInstance"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Placement")," effects:\n",(0,o.kt)("inlineCode",{parentName:"li"},"commitPlacement"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"li"},"insertOrAppendPlacementNode"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"insertOrAppendPlacementNodeIntoContainer"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.appendChild/insertBefore/appendChildToContainer/insertInContainerBefore"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Update")," effects: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitWork")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.commitUpdate/commitTextUpdate/commitHydratedContainer/replaceContainerChildren"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Deletion")," effects: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitDeletion")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.removeChild/removeChildFromContainer/clearSuspenseBoundaryFromContainer"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Hydrating")," effects.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function commitMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n  committedLanes: Lanes\n) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = firstChild;\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const deletions = fiber.deletions;\n\n    if (deletions !== null) {\n      for (let i = 0; i < deletions.length; i++) {\n        const childToDelete = deletions[i];\n        commitDeletion(root, childToDelete, fiber);\n      }\n    }\n\n    const child = fiber.child;\n\n    if ((fiber.subtreeFlags & MutationMask) !== NoFlags && child !== null) {\n      // 1. Visit children.\n      nextEffect = child;\n    } else {\n      while (nextEffect !== null) {\n        const fiber = nextEffect;\n        commitMutationEffectsOnFiber(fiber, root, lanes);\n        const sibling = fiber.sibling;\n\n        // 2. Visit sibling.\n        if (sibling !== null) {\n          nextEffect = sibling;\n          break;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n  }\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitMutationEffectsOnFiber(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  lanes: Lanes\n) {\n  const flags = finishedWork.flags;\n\n  if (flags & ContentReset) {\n    commitResetTextContent(finishedWork);\n  }\n\n  if (flags & Ref) {\n    const current = finishedWork.alternate;\n\n    if (current !== null) {\n      // \u5148\u6e05\u7a7a ref, \u5728\u7b2c\u4e09\u9636\u6bb5 (Layout), \u518d\u91cd\u65b0\u8d4b\u503c.\n      commitDetachRef(current);\n    }\n\n    if (finishedWork.tag === ScopeComponent) {\n      commitAttachRef(finishedWork);\n    }\n  }\n\n  if (flags & Visibility) {\n    switch (finishedWork.tag) {\n      case SuspenseComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n\n        if (isHidden) {\n          const current = finishedWork.alternate;\n          const wasHidden = current !== null && current.memoizedState !== null;\n\n          if (!wasHidden) {\n            markCommitTimeOfFallback();\n          }\n        }\n\n        break;\n      }\n      case OffscreenComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        const current = finishedWork.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const offscreenBoundary: Fiber = finishedWork;\n\n        if (supportsMutation) {\n          hideOrUnhideAllChildren(offscreenBoundary, isHidden);\n        }\n\n        break;\n      }\n    }\n  }\n\n  const primaryFlags = flags & (Placement | Update | Hydrating);\n\n  switch (primaryFlags) {\n    case Placement: {\n      // Placement\n      commitPlacement(finishedWork);\n      finishedWork.flags &= ~Placement; // Clear bit.\n      break;\n    }\n    case PlacementAndUpdate: {\n      // Placement\n      commitPlacement(finishedWork);\n      finishedWork.flags &= ~Placement; // Clear bit.\n\n      // Update\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n    case Hydrating: {\n      finishedWork.flags &= ~Hydrating; // Clear bit.\n      break;\n    }\n    case HydratingAndUpdate: {\n      finishedWork.flags &= ~Hydrating; // Clear bit.\n\n      // Update\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n    case Update: {\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n  }\n}\n")),(0,o.kt)("h4",{id:"layout-phase"},"Layout Phase"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Update | Callback")," effects:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"instance.componentDidMount/componentDidUpdate")," (",(0,o.kt)("strong",{parentName:"li"},"synchronous"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"instance")," callback for ",(0,o.kt)("inlineCode",{parentName:"li"},"setState"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect")," (",(0,o.kt)("strong",{parentName:"li"},"synchronous"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HostConfig.getPublicInstance/commitMount"),".")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function commitLayoutEffects(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes\n): void {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      // 1. Visit children.\n      nextEffect = firstChild;\n    } else {\n      while (nextEffect !== null) {\n        const fiber = nextEffect;\n\n        if ((fiber.flags & LayoutMask) !== NoFlags) {\n          const current = fiber.alternate;\n          commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n        }\n\n        // Complete `commitLayoutEffects`.\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          break;\n        }\n\n        const sibling = fiber.sibling;\n\n        // 2. Visit sibling.\n        if (sibling !== null) {\n          nextEffect = sibling;\n          break;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n  }\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes\n): void {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        if (\n          !enableSuspenseLayoutEffectSemantics ||\n          !offscreenSubtreeWasHidden\n        ) {\n          commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n        }\n\n        break;\n      }\n      case ClassComponent: {\n        const instance = finishedWork.stateNode;\n\n        if (finishedWork.flags & Update) {\n          if (!offscreenSubtreeWasHidden) {\n            if (current === null) {\n              instance.componentDidMount();\n            } else {\n              const prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps\n                    );\n              const prevState = current.memoizedState;\n\n              instance.componentDidUpdate(\n                prevProps,\n                prevState,\n                instance.__reactInternalSnapshotBeforeUpdate\n              );\n            }\n          }\n        }\n\n        const updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          // \u5904\u7406 update \u56de\u8c03\u51fd\u6570, e.g: `this.setState({}, callback)`.\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        break;\n      }\n      case HostRoot: {\n        const updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          let instance = null;\n\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n              case ClassComponent:\n                instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n\n          // \u5904\u7406 update \u56de\u8c03\u51fd\u6570, e.g: `this.setState({}, callback)`.\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        break;\n      }\n      case HostComponent: {\n        const instance: Instance = finishedWork.stateNode;\n\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type;\n          const props = finishedWork.memoizedProps;\n          commitMount(instance, type, props, finishedWork);\n        }\n\n        break;\n      }\n      case SuspenseComponent: {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      }\n      case HostText:\n      case HostPortal:\n      case Profiler:\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        break;\n      }\n\n      default:\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.'\n        );\n    }\n  }\n\n  // \u91cd\u65b0\u8bbe\u7f6eref.\n  if (finishedWork.flags & Ref) {\n    commitAttachRef(finishedWork);\n  }\n}\n")),(0,o.kt)("h3",{id:"reconciler-performance-tips"},"Reconciler Performance Tips"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Render: \u901a\u8fc7\u4e00\u4e9b\u542f\u53d1\u5f0f\u7b97\u6cd5\u8df3\u8fc7\u6ca1\u6709\u53d1\u751f\u53d8\u66f4\u7684\u5b50\u6811."),(0,o.kt)("li",{parentName:"ul"},"Commit:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5217\u8868\u7528\u4e8e\u8bb0\u5f55\u53d8\u5316\u7684 Fiber, \u4e0d\u518d\u8bbf\u95ee\u5176\u4ed6 Fiber."),(0,o.kt)("li",{parentName:"ul"},"\u9996\u6b21\u6e32\u67d3 (Mount) \u65f6\u53ea\u6709 ",(0,o.kt)("inlineCode",{parentName:"li"},"HostRootFiber.flags")," \u4f1a\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"Placement"),",\n\u5728 Commit \u9636\u6bb5\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u63d2\u5165\u64cd\u4f5c."))),(0,o.kt)("li",{parentName:"ul"},"GC:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Reuse ",(0,o.kt)("inlineCode",{parentName:"li"},"OldFiber")," objects when ",(0,o.kt)("inlineCode",{parentName:"li"},"Bailout"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"current")," Fiber tree and ",(0,o.kt)("inlineCode",{parentName:"li"},"workInProgress")," Fiber tree for ",(0,o.kt)("inlineCode",{parentName:"li"},"Double Buffering"),".")))),(0,o.kt)("h3",{id:"minimal-reconciler-implementation"},"Minimal Reconciler Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const performWork = deadline => {\n  if (!nextUnitOfWork) {\n    resetNextUnitOfWork();\n  }\n\n  // whether current status is idle status or not\n  while (nextUnitOfWork && deadline.timeRemaining() > ENOUGH_TIME) {\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n  }\n\n  if (pendingCommit) {\n    commitAllWork(pendingCommit);\n  }\n\n  // checks if there's pending work\n  // if exist, performWork in **next frame** when idle\n  if (nextUnitOfWork || updateQueue.length > 0) {\n    requestIdleCallback(performWork);\n  }\n};\n\nconst scheduleUpdate = (instance, partialState) => {\n  updateQueue.push({\n    from: CLASS_COMPONENT,\n    instance,\n    partialState,\n  });\n\n  requestIdleCallback(performWork);\n};\n\n// React.render function\nconst render = (elements, container) => {\n  updateQueue.push({\n    from: HOST_ROOT,\n    dom: container,\n    newProps: {\n      children: elements,\n    },\n  });\n\n  requestIdleCallback(performWork);\n};\n")),(0,o.kt)("h2",{id:"props-and-states"},"Props and States"),(0,o.kt)("h3",{id:"setstate"},"setState"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setState")," Synchronous Way:\nWhen it comes ",(0,o.kt)("inlineCode",{parentName:"li"},"blocking mode"),"\n(",(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOM.createBlockingRoot(rootNode).render(<App />)"),"),\n",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," works in synchronous mode:\n",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleUpdateOnFiber")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"ensureRootIsScheduled")," -> ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"flushSyncCallbackQueue")),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setState")," Asynchronous Way:\nAt most of the other time, ",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," works in asynchronous mode,\nincluding ",(0,o.kt)("inlineCode",{parentName:"li"},"legacy mode"),"(",(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOM.render(<App />, rootNode)"),")\nand ",(0,o.kt)("inlineCode",{parentName:"li"},"concurrent mode"),"(",(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOM.createRoot(rootNode).render(<App />)"),")."),(0,o.kt)("li",{parentName:"ul"},"\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b, \u4e3a\u4e86\u9632\u6b62\u5b50\u7ec4\u4ef6\u5728\u5904\u7406\u4e8b\u4ef6\u65f6\u591a\u6b21\u6e32\u67d3,\n\u5c06\u591a\u4e2a ",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," (\u5305\u62ec\u7236\u7ec4\u4ef6) \u79fb\u5230\u6d4f\u89c8\u5668\u4e8b\u4ef6\u4e4b\u540e\u6267\u884c\n(Batched Updates: \u6b64\u65f6 React \u5185\u90e8\u53d8\u91cf ",(0,o.kt)("inlineCode",{parentName:"li"},"isBatchingUpdates")," \u53d8\u6210 true),\n\u53ef\u4ee5\u63d0\u5347 React \u6027\u80fd.\n\u672a\u6765\u4f1a\u5728\u66f4\u591a\u7684\u53ef\u4ee5 Batched Updates \u7684\u573a\u666f\u4e0b\u5c06 ",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," \u8bbe\u4e3a\u5f02\u6b65\u6267\u884c,\n\u6240\u4ee5\u7f16\u5199\u4ee3\u7801\u65f6\u6700\u597d\u5c06 setState \u603b\u662f\u5f53\u505a\u5f02\u6b65\u6267\u884c\u51fd\u6570.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class Example extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      val: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ val: this.state.val + 1 });\n    console.log(this.state.val); // \u7b2c 1 \u6b21 log\n\n    this.setState({ val: this.state.val + 1 });\n    console.log(this.state.val); // \u7b2c 2 \u6b21 log\n\n    setTimeout(() => {\n      this.setState({ val: this.state.val + 1 });\n      console.log(this.state.val); // \u7b2c 3 \u6b21 log\n\n      this.setState({ val: this.state.val + 1 });\n      console.log(this.state.val); // \u7b2c 4 \u6b21 log\n    }, 0);\n  }\n\n  render() {\n    return <div>Example</div>;\n  }\n}\n\n// => 0 0 2 3\n")),(0,o.kt)("h3",{id:"componentdidmount"},"componentDidMount"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"don't ",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," directly in this method"),(0,o.kt)("li",{parentName:"ul"},"can use ",(0,o.kt)("inlineCode",{parentName:"li"},"setInterval"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"setTimeout"),"/AJAX request/",(0,o.kt)("inlineCode",{parentName:"li"},"fetch")," in this method,\nand call ",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," as ",(0,o.kt)("inlineCode",{parentName:"li"},"callback")," inside these functions")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.example.com/items')\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result.items,\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.name}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n")),(0,o.kt)("h3",{id:"props-validation"},"Props Validation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PropTypes.array/bool/func/number/object/string/symbol/node/element"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PropTypes.any.isRequired"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PropTypes.objectOf(React.PropsTypes.number)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PropTypes.arrayOf(React.PropsTypes.number)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PropTypes.instanceOf/oneOf/oneOfType(type)"),".")),(0,o.kt)("h2",{id:"element-and-component"},"Element and Component"),(0,o.kt)("p",null,"React Element \u5b9e\u9645\u4e0a\u662f\u7eaf\u5bf9\u8c61,\n\u53ef\u7531 ",(0,o.kt)("inlineCode",{parentName:"p"},"React.createElement()"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"JSX"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"Element Factory Helper")," \u521b\u5efa,\n\u5e76\u88ab React \u5728\u5fc5\u8981\u65f6\u6e32\u67d3\u6210\u771f\u5b9e\u7684 DOM Nodes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type ReactInternalType =\n  | 'react.element'\n  | 'react.portal'\n  | 'react.fragment'\n  | 'react.strict_mode'\n  | 'react.profiler'\n  | 'react.provider'\n  | 'react.context'\n  | 'react.forward_ref'\n  | 'react.suspense'\n  | 'react.suspense_list'\n  | 'react.memo'\n  | 'react.lazy'\n  | 'react.block'\n  | 'react.server.block'\n  | 'react.fundamental'\n  | 'react.scope'\n  | 'react.opaque.id'\n  | 'react.debug_trace_mode'\n  | 'react.offscreen'\n  | 'react.legacy_hidden';\n\nexport interface ReactElement<Props> {\n  $$typeof: any;\n  key: string | number | null;\n  type:\n    | string\n    | ((props: Props) => ReactElement<any>)\n    | (new (props: Props) => ReactComponent<any>)\n    | ReactInternalType;\n  props: Props;\n  ref: Ref;\n\n  // ReactFiber\n  _owner: any;\n\n  // __DEV__\n  _store: { validated: boolean };\n  _self: React$Element<any>;\n  _shadowChildren: any;\n  _source: Source;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"ReactDOM.render(\n  {\n    type: Form,\n    props: {\n      isSubmitted: false,\n      buttonText: 'OK!',\n    },\n  },\n  document.getElementById('root')\n);\n\n// React: You told me this...\nconst FormElement = {\n  type: Form,\n  props: {\n    isSubmitted: false,\n    buttonText: 'OK!',\n  },\n};\n\n// React: ...And Form told me this...\nconst ButtonElement = {\n  type: Button,\n  props: {\n    children: 'OK!',\n    color: 'blue',\n  },\n};\n\n// React: ...and Button told me this! I guess I'm done.\nconst HTMLButtonElement = {\n  type: 'button',\n  props: {\n    className: 'button button-blue',\n    children: {\n      type: 'b',\n      props: {\n        children: 'OK!',\n      },\n    },\n  },\n};\n")),(0,o.kt)("h3",{id:"jsx"},"JSX"),(0,o.kt)("p",null,"\u5728 JSX \u4e2d, \u5c0f\u5199\u6807\u7b7e\u88ab\u8ba4\u4e3a\u662f HTML \u6807\u7b7e.\n\u4f46\u662f, \u542b\u6709 ",(0,o.kt)("inlineCode",{parentName:"p"},".")," \u7684\u5927\u5199\u548c\u5c0f\u5199\u6807\u7b7e\u540d\u5374\u4e0d\u662f."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<component />"),": \u8f6c\u6362\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"React.createElement('component')")," (e.g HTML native tag)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<obj.component />"),": \u8f6c\u6362\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"React.createElement(obj.component)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<Component />"),": \u8f6c\u6362\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"React.createElement(Component)"),".")),(0,o.kt)("h4",{id:"jsx-transform"},"JSX Transform"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html"},"New JSX transform"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import React from 'react';\n\nfunction App() {\n  return React.createElement('h1', null, 'Hello world');\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Inserted by a compiler\nimport { jsx as _jsx } from 'react/jsx-runtime';\n\nfunction App() {\n  return _jsx('h1', { children: 'Hello world' });\n}\n")),(0,o.kt)("p",null,"ESLint config for new JSX transform:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rules": {\n    "react/jsx-uses-react": "off",\n    "react/react-in-jsx-scope": "off"\n  }\n}\n')),(0,o.kt)("p",null,"TypeScript config for new JSX transform:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "include": ["./src/**/*"],\n  "compilerOptions": {\n    "module": "esnext",\n    "target": "es2015",\n    "jsx": "react-jsx",\n    "strict": true\n  }\n}\n')),(0,o.kt)("h3",{id:"functional-and-class-component"},"Functional and Class component"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u51fd\u6570\u578b\u7ec4\u4ef6\u6ca1\u6709\u5b9e\u4f8b, \u7c7b\u578b\u7ec4\u4ef6\u5177\u6709\u5b9e\u4f8b, \u4f46\u5b9e\u4f8b\u5316\u7684\u5de5\u4f5c\u7531 react \u81ea\u52a8\u5b8c\u6210"),(0,o.kt)("li",{parentName:"ul"},"With React Hooks, functional component can get\n",(0,o.kt)("inlineCode",{parentName:"li"},"state"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"lifecycle hooks")," and performance optimization\nconsistent to class component.")),(0,o.kt)("h3",{id:"stateless-and-stateful-component"},"Stateless and Stateful component"),(0,o.kt)("p",null,"React Component\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react/src/ReactBaseClasses.js"},"definition"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Component"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PureComponent"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface NewLifecycle<P, S, SS> {\n  getSnapshotBeforeUpdate?(\n    prevProps: Readonly<P>,\n    prevState: Readonly<S>\n  ): SS | null;\n\n  componentDidUpdate?(\n    prevProps: Readonly<P>,\n    prevState: Readonly<S>,\n    snapshot?: SS\n  ): void;\n}\n\ninterface ComponentLifecycle<P, S, SS = any> extends NewLifecycle<P, S, SS> {\n  componentDidMount?(): void;\n\n  shouldComponentUpdate?(\n    nextProps: Readonly<P>,\n    nextState: Readonly<S>,\n    nextContext: any\n  ): boolean;\n\n  componentWillUnmount?(): void;\n\n  componentDidCatch?(error: Error, errorInfo: ErrorInfo): void;\n}\n\ninterface Component<P = {}, S = {}, SS = any>\n  extends ComponentLifecycle<P, S, SS> {}\n\nclass Component<P, S> {\n  readonly props: Readonly<P> & Readonly<{ children?: ReactNode | undefined }>;\n  state: Readonly<S>;\n\n  static contextType?: Context<any> | undefined;\n  context: any;\n\n  constructor(props: Readonly<P> | P);\n\n  setState<K extends keyof S>(\n    state:\n      | ((prevState: Readonly<S>, props: Readonly<P>) => Pick<S, K> | S | null)\n      | (Pick<S, K> | S | null),\n    callback?: () => void\n  ): void;\n\n  forceUpdate(callback?: () => void): void;\n\n  render(): ReactNode;\n}\n\nclass PureComponent<P = {}, S = {}, SS = any> extends Component<P, S, SS> {}\n")),(0,o.kt)("h4",{id:"stateless-component"},"Stateless component"),(0,o.kt)("p",null,"\u91c7\u7528\u51fd\u6570\u578b\u58f0\u660e, \u4e0d\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"setState()"),", \u4e00\u822c\u4f5c\u4e3a\u8868\u73b0\u578b\u7ec4\u4ef6."),(0,o.kt)("h4",{id:"stateful-component"},"Stateful component"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u91c7\u7528\u7c7b\u578b\u58f0\u660e, \u4f7f\u7528 setState(), \u4e00\u822c\u4f5c\u4e3a\u5bb9\u5668\u578b\u7ec4\u4ef6(containers)"),(0,o.kt)("li",{parentName:"ul"},"\u7ed3\u5408 Redux \u4e2d\u7684 connect \u65b9\u6cd5, \u5c06 store \u4e2d\u7684 state \u4f5c\u4e3a\u6b64\u7c7b\u7ec4\u4ef6\u7684 props")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class Component {\n  render() {\n    this.setState((prevState, props) => ({\n      counter: prevState.counter + props.increment,\n    }));\n\n    return <div>Component</div>;\n  }\n}\n")),(0,o.kt)("h3",{id:"component-lifecycle"},"Component Lifecycle"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reconciliation phase:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"constructor."),(0,o.kt)("li",{parentName:"ul"},"getDerivedStateFromProps."),(0,o.kt)("li",{parentName:"ul"},"getDerivedStateFromError."),(0,o.kt)("li",{parentName:"ul"},"shouldComponentUpdate."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ClassComponent")," ",(0,o.kt)("inlineCode",{parentName:"li"},"render")," function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setState")," updater functions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," body function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useReducer"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useMemo")," updater functions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UNSAFE_componentWillMount"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UNSAFE_componentWillReceiveProps"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UNSAFE_componentWillUpdate"),"."))),(0,o.kt)("li",{parentName:"ul"},"Commit phase:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"componentDidMount."),(0,o.kt)("li",{parentName:"ul"},"getSnapshotBeforeUpdate."),(0,o.kt)("li",{parentName:"ul"},"componentDidUpdate."),(0,o.kt)("li",{parentName:"ul"},"componentWillUnmount."),(0,o.kt)("li",{parentName:"ul"},"componentDidCatch.")))),(0,o.kt)("p",null,"\u56e0\u4e3a\u534f\u8c03\u9636\u6bb5\u53ef\u80fd\u88ab\u4e2d\u65ad\u3001\u6062\u590d\uff0c\u751a\u81f3\u91cd\u505a,\nReact \u534f\u8c03\u9636\u6bb5\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\u53ef\u80fd\u4f1a\u88ab\u8c03\u7528\u591a\u6b21,\n",(0,o.kt)("strong",{parentName:"p"},"\u534f\u8c03\u9636\u6bb5\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\u4e0d\u8981\u5305\u542b\u526f\u4f5c\u7528"),": e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"fetch")," promises, ",(0,o.kt)("inlineCode",{parentName:"p"},"async")," functions.\n\u901a\u8fc7 ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects"},(0,o.kt)("inlineCode",{parentName:"a"},"React.StrictMode")),"\n\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u5e94\u7528\u4e2d\u9690\u85cf\u7684\u95ee\u9898."),(0,o.kt)("h4",{id:"creation-and-mounting-phase"},"Creation and Mounting Phase"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"constructor(props, context)"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"getDerivedStateFromProps()"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"render()"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"componentDidMount()"),"."),(0,o.kt)("h4",{id:"updating-phase"},"Updating Phase"),(0,o.kt)("p",null,"Update for three reasons:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Parent/top components (re-)rendering."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"this.setState()")," called."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"this.forceUpdate()")," called.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"getDerivedStateFromProps()"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"shouldComponentUpdate(nextProps, nextState)"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"render()"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"getSnapshotBeforeUpdate()"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"componentDidUpdate(prevProps, prevState)"),"."),(0,o.kt)("p",null,"getSnapshotBeforeUpdate:\n\u5728\u6700\u65b0\u7684\u6e32\u67d3\u8f93\u51fa\u63d0\u4ea4\u7ed9 DOM \u524d\u5c06\u4f1a\u7acb\u5373\u8c03\u7528,\n\u8fd9\u5bf9\u4e8e\u4ece DOM \u6355\u83b7\u4fe1\u606f\uff08\u6bd4\u5982\uff1a\u6eda\u52a8\u4f4d\u7f6e\uff09\u5f88\u6709\u7528."),(0,o.kt)("h4",{id:"unmounting-phase"},"Unmounting Phase"),(0,o.kt)("p",null,"componentWillUnmount()"),(0,o.kt)("h3",{id:"render-function"},"Render Function"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default render behavior (without any ",(0,o.kt)("inlineCode",{parentName:"li"},"memo"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useMemo"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"PureComponent"),"):\nwhen a parent component renders,\nReact will recursively render ",(0,o.kt)("strong",{parentName:"li"},"all child components")," inside of it\n(because ",(0,o.kt)("inlineCode",{parentName:"li"},"props.children")," is always a new reference when parent re-rendering)."),(0,o.kt)("li",{parentName:"ul"},"Render logic:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Can't mutate existing variables and objects."),(0,o.kt)("li",{parentName:"ul"},"Can't create random values like ",(0,o.kt)("inlineCode",{parentName:"li"},"Math.random()")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"Date.now()"),"."),(0,o.kt)("li",{parentName:"ul"},"Can't make network requests."),(0,o.kt)("li",{parentName:"ul"},"Can't queue state updates.")))),(0,o.kt)("h3",{id:"react-element-api"},"React Element API"),(0,o.kt)("h4",{id:"react-clone-element-api"},"React Clone Element API"),(0,o.kt)("p",null,"Modify children properties:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const CreateTextWithProps = ({ text, ASCIIChar, ...props }) => {\n  return (\n    <span {...props}>\n      {text}\n      {ASCIIChar}\n    </span>\n  );\n};\n\nconst RepeatCharacters = ({ times, children }) => {\n  return React.cloneElement(children, {\n    ASCIIChar: children.props.ASCIIChar.repeat(times),\n  });\n};\n\nfunction App() {\n  return (\n    <div>\n      <RepeatCharacters times={3}>\n        <CreateTextWithProps text="Foo Text" ASCIIChar="." />\n      </RepeatCharacters>\n    </div>\n  );\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const RadioGroup = props => {\n  const RenderChildren = () =>\n    React.Children.map(props.children, child => {\n      return React.cloneElement(child, {\n        name: props.name,\n      });\n    });\n\n  return <div>{<RenderChildren />}</div>;\n};\n\nconst RadioButton = props => {\n  return (\n    <label>\n      <input type="radio" value={props.value} name={props.name} />\n      {props.children}\n    </label>\n  );\n};\n\nfunction App() {\n  return (\n    <RadioGroup name="numbers">\n      <RadioButton value="first">First</RadioButton>\n      <RadioButton value="second">Second</RadioButton>\n      <RadioButton value="third">Third</RadioButton>\n    </RadioGroup>\n  );\n}\n')),(0,o.kt)("h4",{id:"react-children-api"},"React Children API"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Children.toArray(children)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Children.forEach(children, fn)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Children.map(children, fn)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Children.count(children)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Children.only(children)"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Children, cloneElement } from 'react';\n\nfunction Breadcrumbs({ children }) {\n  const arrayChildren = Children.toArray(children);\n\n  return (\n    <ul\n      style={{\n        listStyle: 'none',\n        display: 'flex',\n      }}\n    >\n      {Children.map(arrayChildren, (child, index) => {\n        const isLast = index === arrayChildren.length - 1;\n\n        if (!isLast && !child.props.link) {\n          throw new Error(\n            `BreadcrumbItem child no. ${index + 1}\n            should be passed a 'link' prop`\n          );\n        }\n\n        return (\n          <>\n            {child.props.link ? (\n              <a\n                href={child.props.link}\n                style={{\n                  display: 'inline-block',\n                  textDecoration: 'none',\n                }}\n              >\n                <div style={{ marginRight: '5px' }}>\n                  {cloneElement(child, {\n                    isLast,\n                  })}\n                </div>\n              </a>\n            ) : (\n              <div style={{ marginRight: '5px' }}>\n                {cloneElement(child, {\n                  isLast,\n                })}\n              </div>\n            )}\n            {!isLast && <div style={{ marginRight: '5px' }}></div>}\n          </>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction BreadcrumbItem({ isLast, children }) {\n  return (\n    <li\n      style={{\n        color: isLast ? 'black' : 'blue',\n      }}\n    >\n      {children}\n    </li>\n  );\n}\n\nexport default function App() {\n  return (\n    <Breadcrumbs>\n      <BreadcrumbItem link=\"https://example.com/\">Example</BreadcrumbItem>\n      <BreadcrumbItem link=\"https://example.com/hotels/\">Hotels</BreadcrumbItem>\n      <BreadcrumbItem>A Fancy Hotel Name</BreadcrumbItem>\n    </Breadcrumbs>\n  );\n}\n")),(0,o.kt)("h3",{id:"refs"},"Refs"),(0,o.kt)("p",null,"Refs \u7528\u4e8e\u8fd4\u56de\u5bf9\u5143\u7d20\u7684\u5f15\u7528.\n\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u5e94\u8be5\u907f\u514d\u4f7f\u7528\u5b83\u4eec.\n\u5f53\u9700\u8981\u76f4\u63a5\u8bbf\u95ee DOM \u5143\u7d20\u6216\u7ec4\u4ef6\u7684\u5b9e\u4f8b\u65f6, \u5b83\u4eec\u53ef\u80fd\u975e\u5e38\u6709\u7528:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Managing focus, text selection, or media playback."),(0,o.kt)("li",{parentName:"ul"},"Triggering imperative animations."),(0,o.kt)("li",{parentName:"ul"},"Integrating with third-party DOM libraries.k")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Ref")," \u901a\u8fc7\u5c06 Fiber \u6811\u4e2d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"instance")," \u8d4b\u7ed9 ",(0,o.kt)("inlineCode",{parentName:"p"},"ref.current")," \u5b9e\u73b0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function commitAttachRef(finishedWork: Fiber) {\n  // finishedWork \u4e3a\u542b\u6709 Ref effectTag \u7684 Fiber\n  const ref = finishedWork.ref;\n\n  // \u542b\u6709 ref prop, \u8fd9\u91cc\u662f\u4f5c\u4e3a\u6570\u636e\u7ed3\u6784\n  if (ref !== null) {\n    // \u83b7\u53d6 ref \u5c5e\u6027\u5bf9\u5e94\u7684 Component \u5b9e\u4f8b\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        // \u5bf9\u4e8e HostComponent, \u5b9e\u4f8b\u4e3a\u5bf9\u5e94 DOM \u8282\u70b9\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        // \u5176\u4ed6\u7c7b\u578b\u5b9e\u4f8b\u4e3a fiber.stateNode\n        instanceToUse = instance;\n    }\n\n    // \u8d4b\u503c ref\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      ref.current = instanceToUse;\n    }\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class CssThemeProvider extends React.PureComponent<Props> {\n  private rootRef = React.createRef<HTMLDivElement>();\n\n  render() {\n    return <div ref={this.rootRef}>{this.props.children}</div>;\n  }\n}\n")),(0,o.kt)("h4",{id:"string-refs"},"String Refs"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u4e0d\u5efa\u8bae\u4f7f\u7528")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/pull/8333#issuecomment-271648615"},(0,o.kt)("inlineCode",{parentName:"a"},"String Refs")),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"React \u65e0\u6cd5\u83b7\u53d6 ",(0,o.kt)("inlineCode",{parentName:"li"},"this")," \u5f15\u7528, \u9700\u8981\u6301\u7eed\u8ffd\u8e2a\u5f53\u524d",(0,o.kt)("inlineCode",{parentName:"li"},"render"),"\u51fa\u7684\u7ec4\u4ef6, \u6027\u80fd\u53d8\u6162."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"String Refs")," \u4e0d\u53ef\u7ec4\u5408\u5316, ",(0,o.kt)("inlineCode",{parentName:"li"},"Callback Refs")," \u53ef\u7ec4\u5408\u5316.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'class Foo extends Component {\n  render() {\n    return <input onClick={() => this.action()} ref="input" />;\n  }\n\n  action() {\n    console.log(this.refs.input.value);\n  }\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class App extends React.Component {\n  renderRow = index => {\n    // ref \u4f1a\u7ed1\u5b9a\u5230 DataTable \u7ec4\u4ef6\u5b9e\u4f8b, \u800c\u4e0d\u662f App \u7ec4\u4ef6\u5b9e\u4f8b\u4e0a\n    return <input ref={`input-${index}`} />;\n\n    // \u5982\u679c\u4f7f\u7528 function \u7c7b\u578b ref, \u5219\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898\n    // return <input ref={input => this['input-' + index] = input} />;\n  };\n\n  render() {\n    return <DataTable data={this.props.data} renderRow={this.renderRow} />;\n  }\n}\n")),(0,o.kt)("h4",{id:"forward-refs"},"Forward Refs"),(0,o.kt)("p",null,"\u4e0d\u80fd\u5728\u51fd\u6570\u5f0f\u7ec4\u4ef6\u4e0a\u4f7f\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"ref"),"\u5c5e\u6027,\n\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u5b9e\u4f8b, \u4f46\u53ef\u4ee5\u5728\u51fd\u6570\u5f0f\u7ec4\u4ef6\u5185\u90e8\u4f7f\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"ref"),".\nRef forwarding \u662f\u4e00\u4e2a\u7279\u6027,\n\u5b83\u5141\u8bb8\u4e00\u4e9b\u7ec4\u4ef6\u83b7\u53d6\u63a5\u6536\u5230 ref \u5bf9\u8c61\u5e76\u5c06\u5b83\u8fdb\u4e00\u6b65\u4f20\u9012\u7ed9\u5b50\u7ec4\u4ef6."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// functional component\nconst ButtonElement = React.forwardRef((props, ref) => (\n  <button ref={ref} className=\"CustomButton\">\n    {props.children}\n  </button>\n));\n\n// Create ref to the DOM button:\n// get ref to `<button>`\nconst ref = React.createRef();\n<ButtonElement ref={ref}>{'Forward Ref'}</ButtonElement>;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type Ref = HTMLButtonElement;\ninterface Props {\n  children: React.ReactNode;\n  type: 'submit' | 'button';\n}\n\nconst FancyButton = React.forwardRef<Ref, Props>((props, ref) => (\n  <button ref={ref} className=\"MyClassName\" type={props.type}>\n    {props.children}\n  </button>\n));\n")),(0,o.kt)("h4",{id:"callback-refs"},"Callback Refs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'class UserInput extends Component {\n  setSearchInput = input => {\n    this.input = input;\n  };\n\n  render() {\n    return (\n      <>\n        <input type="text" ref={this.setSearchInput} />\n        <button type="submit">Submit</button>\n      </>\n    );\n  }\n}\n')),(0,o.kt)("h3",{id:"compound-components"},"Compound Components"),(0,o.kt)("p",null,"Compound components ",(0,o.kt)("a",{parentName:"p",href:"https://dev.to/alexi_be3/react-component-patterns-49ho"},"example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import * as React from \'react\';\n\ninterface Props {\n  onStateChange?(e: string): void;\n  defaultValue?: string;\n}\n\ninterface State {\n  currentValue: string;\n  defaultValue?: string;\n}\n\ninterface RadioInputProps {\n  label: string;\n  value: string;\n  name: string;\n  imgSrc: string;\n  key: string | number;\n  currentValue?: string;\n  onChange?(e: React.ChangeEvent<HTMLInputElement>): void;\n}\n\nconst RadioImageForm = ({\n  children,\n  onStateChange,\n  defaultValue,\n}: React.PropsWithChildren<Props>): React.ReactElement => {\n  const [state, setState] = React.useState<State>({\n    currentValue: \'\',\n    defaultValue,\n  });\n\n  // Memoized so that providerState isn\'t recreated on each render\n  const providerState = React.useMemo(\n    () => ({\n      onChange: (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = event.target.value;\n        setState({\n          currentValue: value,\n        });\n        onStateChange?.(value);\n      },\n      ...state,\n    }),\n    [state, onStateChange]\n  );\n\n  return (\n    <div>\n      <form>\n        {React.Children.map(children, (child: React.ReactElement) =>\n          React.cloneElement(child, {\n            ...providerState,\n          })\n        )}\n      </form>\n    </div>\n  );\n};\n\nconst RadioInput = ({\n  currentValue,\n  onChange,\n  label,\n  value,\n  name,\n  imgSrc,\n  key,\n}: RadioInputProps): React.ReactElement => (\n  <label className="radio-button-group" key={key}>\n    <input\n      type="radio"\n      name={name}\n      value={value}\n      aria-label={label}\n      onChange={onChange}\n      checked={currentValue === value}\n      aria-checked={currentValue === value}\n    />\n    <img alt="" src={imgSrc} />\n  </label>\n);\n\nRadioImageForm.RadioInput = RadioInput;\n\nexport default RadioImageForm;\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Compound components manage their own internal state,\nwhich they share among several child components."),(0,o.kt)("li",{parentName:"ul"},"When importing a compound component,\nautomatically import child components available on compound component.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type { CSSProperties, ReactNode } from 'react';\nimport React from 'react';\n\ninterface Props {\n  children: ReactNode;\n  style?: CSSProperties;\n  rest?: any;\n}\n\nconst Header = ({ children, style, ...rest }: Props): JSX.Element => (\n  <div style={{ ...style }} {...rest}>\n    {children}\n  </div>\n);\n\nconst Body = ({ children, style, ...rest }: Props): JSX.Element => (\n  <div style={{ ...style }} {...rest}>\n    {children}\n  </div>\n);\n\nconst Footer = ({ children, style, ...rest }: Props): JSX.Element => (\n  <div style={{ ...style }} {...rest}>\n    {children}\n  </div>\n);\n\nconst getChildrenOnDisplayName = (children: ReactNode[], displayName: string) =>\n  React.Children.map(children, child =>\n    child.displayName === displayName ? child : null\n  );\n\nconst Card = ({ children }: { children: ReactNode[] }): JSX.Element => {\n  const header = getChildrenOnDisplayName(children, 'Header');\n  const body = getChildrenOnDisplayName(children, 'Body');\n  const footer = getChildrenOnDisplayName(children, 'Footer');\n\n  return (\n    <div className=\"card\">\n      {header && <div className=\"card-header\">{header}</div>}\n      <div className=\"card-body\">{body}</div>\n      {footer && <div className=\"card-footer\">{footer}</div>}\n    </div>\n  );\n};\n\nHeader.displayName = 'Header';\nBody.displayName = 'Body';\nFooter.displayName = 'Footer';\nCard.Header = Header;\nCard.Body = Body;\nCard.Footer = Footer;\n\nconst App = () => (\n  <div>\n    <Card>\n      <Card.Header>Header</Card.Header>\n      <Card.Body>Body</Card.Body>\n      <Card.Footer>Footer</Card.Footer>\n    </Card>\n  </div>\n);\n\nexport default App;\n")),(0,o.kt)("h2",{id:"react-synthetic-events"},"React Synthetic Events"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Events Delegation:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"React 16: delegate events handlers on ",(0,o.kt)("inlineCode",{parentName:"li"},"document")," DOM node."),(0,o.kt)("li",{parentName:"ul"},"React 17: delegate events handlers on ",(0,o.kt)("inlineCode",{parentName:"li"},"app")," root DOM node."))),(0,o.kt)("li",{parentName:"ul"},"Events Dispatching: dispatch native events to ",(0,o.kt)("inlineCode",{parentName:"li"},"React.onXXX")," handlers by ",(0,o.kt)("inlineCode",{parentName:"li"},"SyntheticEvent"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6536\u96c6\u76d1\u542c\u5668: ",(0,o.kt)("inlineCode",{parentName:"li"},"const listeners = accumulateSinglePhaseListeners(targetFiber, eventName)"),"."),(0,o.kt)("li",{parentName:"ul"},"\u6d3e\u53d1\u5408\u6210\u4e8b\u4ef6: ",(0,o.kt)("inlineCode",{parentName:"li"},"dispatchQueue.push({ new SyntheticEvent(eventName), listeners })"),"."),(0,o.kt)("li",{parentName:"ul"},"\u6267\u884c\u6d3e\u53d1:\n",(0,o.kt)("inlineCode",{parentName:"li"},"processDispatchQueue(dispatchQueue, eventSystemFlags)"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"li"},"executeDispatch(event, listener, currentTarget)"),"."),(0,o.kt)("li",{parentName:"ul"},"Capture event: \u4ece\u4e0a\u81f3\u4e0b\u8c03\u7528 Fiber \u6811\u4e2d\u7ed1\u5b9a\u7684\u56de\u8c03\u51fd\u6570."),(0,o.kt)("li",{parentName:"ul"},"Bubble event: \u4ece\u4e0b\u81f3\u4e0a\u8c03\u7528 Fiber \u6811\u4e2d\u7ed1\u5b9a\u7684\u56de\u8c03\u51fd\u6570.")))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://7kms.github.io/react-illustration-series/main/synthetic-event"},(0,o.kt)("img",{alt:"React Synthetic Events",src:t(4437).Z,width:"1090",height:"1248"}))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/DOMPluginEventSystem.js"},"react-dom/src/events/DOMPluginEventSystem"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function listenToAllSupportedEvents(rootContainerElement: EventTarget) {\n  if (enableEagerRootListeners) {\n    // 1. \u8282\u6d41\u4f18\u5316, \u4fdd\u8bc1\u5168\u5c40\u6ce8\u518c\u53ea\u88ab\u8c03\u7528\u4e00\u6b21.\n    if (rootContainerElement[listeningMarker]) {\n      return;\n    }\n\n    rootContainerElement[listeningMarker] = true;\n\n    // 2. \u904d\u5386 allNativeEvents \u76d1\u542c\u5192\u6ce1\u548c\u6355\u83b7\u9636\u6bb5\u7684\u4e8b\u4ef6.\n    allNativeEvents.forEach(domEventName => {\n      if (!nonDelegatedEvents.has(domEventName)) {\n        listenToNativeEvent(\n          domEventName,\n          false, // \u5192\u6ce1\u9636\u6bb5\u76d1\u542c.\n          rootContainerElement,\n          null\n        );\n      }\n\n      listenToNativeEvent(\n        domEventName,\n        true, // \u6355\u83b7\u9636\u6bb5\u76d1\u542c.\n        rootContainerElement,\n        null\n      );\n    });\n  }\n}\n\nfunction listenToNativeEvent(\n  domEventName: DOMEventName,\n  isCapturePhaseListener: boolean,\n  rootContainerElement: EventTarget,\n  targetElement: Element | null,\n  eventSystemFlags?: EventSystemFlags = 0\n): void {\n  const target = rootContainerElement;\n  const listenerSet = getEventListenerSet(target);\n  const listenerSetKey = getListenerSetKey(\n    domEventName,\n    isCapturePhaseListener\n  );\n\n  // \u5229\u7528 Set \u6570\u636e\u7ed3\u6784, \u4fdd\u8bc1\u76f8\u540c\u7684\u4e8b\u4ef6\u7c7b\u578b\u53ea\u4f1a\u88ab\u6ce8\u518c\u4e00\u6b21.\n  if (!listenerSet.has(listenerSetKey)) {\n    if (isCapturePhaseListener) {\n      eventSystemFlags |= IS_CAPTURE_PHASE;\n    }\n\n    // \u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c.\n    addTrappedEventListener(\n      target,\n      domEventName,\n      eventSystemFlags,\n      isCapturePhaseListener\n    );\n    listenerSet.add(listenerSetKey);\n  }\n}\n\nfunction addTrappedEventListener(\n  targetContainer: EventTarget,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  isCapturePhaseListener: boolean,\n  isDeferredListenerForLegacyFBSupport?: boolean\n) {\n  // 1. \u6784\u9020 listener.\n  const listener = createEventListenerWrapperWithPriority(\n    targetContainer,\n    domEventName,\n    eventSystemFlags\n  );\n\n  // 2. \u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c.\n  let unsubscribeListener;\n\n  if (isCapturePhaseListener) {\n    unsubscribeListener = addEventCaptureListener(\n      targetContainer,\n      domEventName,\n      listener\n    );\n  } else {\n    unsubscribeListener = addEventBubbleListener(\n      targetContainer,\n      domEventName,\n      listener\n    );\n  }\n}\n\n// \u6ce8\u518c\u539f\u751f\u5192\u6ce1\u4e8b\u4ef6.\nfunction addEventBubbleListener(\n  target: EventTarget,\n  eventType: string,\n  listener: Function\n): Function {\n  target.addEventListener(eventType, listener, false);\n  return listener;\n}\n\n// \u6ce8\u518c\u539f\u751f\u6355\u83b7\u4e8b\u4ef6.\nfunction addEventCaptureListener(\n  target: EventTarget,\n  eventType: string,\n  listener: Function\n): Function {\n  target.addEventListener(eventType, listener, true);\n  return listener;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-dom/src/events/ReactDOMEventListener.js"},"react-dom/src/events/ReactDOMEventListener"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// \u6d3e\u53d1\u539f\u751f\u4e8b\u4ef6\u81f3 React.onXXX.\nfunction createEventListenerWrapperWithPriority(\n  targetContainer: EventTarget,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags\n): Function {\n  // 1. \u6839\u636e\u4f18\u5148\u7ea7\u8bbe\u7f6e listenerWrapper.\n  const eventPriority = getEventPriorityForPluginSystem(domEventName);\n  let listenerWrapper;\n\n  switch (eventPriority) {\n    case DiscreteEvent:\n      listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case UserBlockingEvent:\n      listenerWrapper = dispatchUserBlockingUpdate;\n      break;\n    case ContinuousEvent:\n    default:\n      listenerWrapper = dispatchEvent;\n      break;\n  }\n\n  // 2. \u8fd4\u56de listenerWrapper.\n  return listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n}\n\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = null;\n\n  try {\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = null;\n\n  try {\n    setCurrentUpdatePriority(ContinuousEventPriority);\n    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nfunction dispatchEvent(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent\n) {\n  let blockedOn = findInstanceBlockingEvent(\n    domEventName,\n    eventSystemFlags,\n    targetContainer,\n    nativeEvent\n  );\n\n  if (blockedOn === null) {\n    dispatchEventForPluginEventSystem(\n      domEventName,\n      eventSystemFlags,\n      nativeEvent,\n      return_targetInst,\n      targetContainer\n    );\n    clearIfContinuousEvent(domEventName, nativeEvent);\n    return;\n  }\n\n  if (\n    queueIfContinuousEvent(\n      blockedOn,\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent\n    )\n  ) {\n    nativeEvent.stopPropagation();\n    return;\n  }\n\n  // We need to clear only if we didn't queue because queueing is accumulative.\n  clearIfContinuousEvent(domEventName, nativeEvent);\n\n  if (\n    eventSystemFlags & IS_CAPTURE_PHASE &&\n    isDiscreteEventThatRequiresHydration(domEventName)\n  ) {\n    while (blockedOn !== null) {\n      const fiber = getInstanceFromNode(blockedOn);\n\n      if (fiber !== null) {\n        attemptSynchronousHydration(fiber);\n      }\n\n      const nextBlockedOn = findInstanceBlockingEvent(\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      );\n\n      if (nextBlockedOn === null) {\n        dispatchEventForPluginEventSystem(\n          domEventName,\n          eventSystemFlags,\n          nativeEvent,\n          return_targetInst,\n          targetContainer\n        );\n      }\n\n      if (nextBlockedOn === blockedOn) {\n        break;\n      }\n\n      blockedOn = nextBlockedOn;\n    }\n\n    if (blockedOn !== null) {\n      nativeEvent.stopPropagation();\n    }\n\n    return;\n  }\n\n  dispatchEventForPluginEventSystem(\n    domEventName,\n    eventSystemFlags,\n    nativeEvent,\n    null,\n    targetContainer\n  );\n}\n")),(0,o.kt)("h2",{id:"react-reusability-patterns"},"React Reusability Patterns"),(0,o.kt)("h3",{id:"hoc"},"HOC"),(0,o.kt)("p",null,"Higher Order Components."),(0,o.kt)("p",null,"Solve:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reuse code with using ES6 classes."),(0,o.kt)("li",{parentName:"ul"},"Compose multiple HOCs.")),(0,o.kt)("p",null,"Pros:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reusable (abstract same logic)."),(0,o.kt)("li",{parentName:"ul"},"HOC is flexible with input data\n(pass input data as parameters or derive it from props).")),(0,o.kt)("p",null,"Cons:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Wrapper hell: ",(0,o.kt)("inlineCode",{parentName:"li"},"withA(withB(withC(withD(Comp))))"),"."),(0,o.kt)("li",{parentName:"ul"},"Implicit dependencies: which HOC providing a certain prop."),(0,o.kt)("li",{parentName:"ul"},"Name collision/overlap props: overwrite the same name prop silently."),(0,o.kt)("li",{parentName:"ul"},"HOC is not flexible with output data (to WrappedComponent).")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// ToggleableMenu.jsx\nfunction withToggleable(Clickable) {\n  return class extends React.Component {\n    constructor() {\n      super();\n      this.toggle = this.toggle.bind(this);\n      this.state = { show: false };\n    }\n\n    toggle() {\n      this.setState(prevState => ({ show: !prevState.show }));\n    }\n\n    render() {\n      return (\n        <div>\n          <Clickable {...this.props} onClick={this.toggle} />\n          {this.state.show && this.props.children}\n        </div>\n      );\n    }\n  };\n}\n\nclass NormalMenu extends React.Component {\n  render() {\n    return (\n      <div onClick={this.props.onClick}>\n        <h1>{this.props.title}</h1>\n      </div>\n    );\n  }\n}\n\nexport default withToggleable(NormalMenu);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'class Menu extends React.Component {\n  render() {\n    return (\n      <div>\n        <ToggleableMenu title="First Menu">\n          <p>Some content</p>\n        </ToggleableMenu>\n        <ToggleableMenu title="Second Menu">\n          <p>Another content</p>\n        </ToggleableMenu>\n        <ToggleableMenu title="Third Menu">\n          <p>More content</p>\n        </ToggleableMenu>\n      </div>\n    );\n  }\n}\n')),(0,o.kt)("h3",{id:"render-props"},"Render Props"),(0,o.kt)("p",null,"Children/Props as render function:"),(0,o.kt)("p",null,"Solve:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reuse code with using ES6 classes."),(0,o.kt)("li",{parentName:"ul"},"Lowest level of indirection."),(0,o.kt)("li",{parentName:"ul"},"No naming collision.")),(0,o.kt)("p",null,"e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"Context")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ThemesProvider")," is designed base on Render Props."),(0,o.kt)("p",null,"Pros:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Separate presentation from logic."),(0,o.kt)("li",{parentName:"ul"},"Extendable."),(0,o.kt)("li",{parentName:"ul"},"Reusable (abstract same logic)."),(0,o.kt)("li",{parentName:"ul"},"Render Props is flexible with output data\n(children parameters definition free).")),(0,o.kt)("p",null,"Cons:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Wrapper hell (when many cross-cutting concerns are applied to a component)."),(0,o.kt)("li",{parentName:"ul"},"Minor memory issues when defining a closure for every render."),(0,o.kt)("li",{parentName:"ul"},"Unable to optimize code with ",(0,o.kt)("inlineCode",{parentName:"li"},"React.memo"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"React.PureComponent"),"\ndue to ",(0,o.kt)("inlineCode",{parentName:"li"},"render()")," function always changes."),(0,o.kt)("li",{parentName:"ul"},"Render Props is not flexible with input data\n(restricts children components from using the data at outside field).")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class Toggleable extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = { show: false };\n  }\n\n  toggle() {\n    this.setState(prevState => ({ show: !prevState.show }));\n  }\n\n  render() {\n    return this.props.children(this.state.show, this.toggle);\n  }\n}\n\nconst ToggleableMenu = props => (\n  <Toggleable>\n    {(show, onClick) => (\n      <div>\n        <div onClick={onClick}>\n          <h1>{props.title}</h1>\n        </div>\n        {show && props.children}\n      </div>\n    )}\n  </Toggleable>\n);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'class Menu extends React.Component {\n  render() {\n    return (\n      <div>\n        <ToggleableMenu title="First Menu">\n          <p>Some content</p>\n        </ToggleableMenu>\n        <ToggleableMenu title="Second Menu">\n          <p>Another content</p>\n        </ToggleableMenu>\n        <ToggleableMenu title="Third Menu">\n          <p>More content</p>\n        </ToggleableMenu>\n      </div>\n    );\n  }\n}\n')),(0,o.kt)("h3",{id:"react-hooks-reuse-pattern"},"React Hooks Reuse Pattern"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"No wrapper hell: every hook is just one line of code."),(0,o.kt)("li",{parentName:"ul"},"No implicit dependencies: explicit one certain call for one certain hook."),(0,o.kt)("li",{parentName:"ul"},"No name collision and overlap props due to flexible data usage."),(0,o.kt)("li",{parentName:"ul"},"No need for ",(0,o.kt)("inlineCode",{parentName:"li"},"JSX"),"."),(0,o.kt)("li",{parentName:"ul"},"Flexible data usage."),(0,o.kt)("li",{parentName:"ul"},"Flexible optimization methods:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Avoid re-render with hook deps list."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useMemo")," hook for memorized values."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useCallback")," hook for memorized functions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useRef")," hook for lifecycle persistent values."))),(0,o.kt)("li",{parentName:"ul"},"Recap related-logic into separate well-structured hooks."),(0,o.kt)("li",{parentName:"ul"},"Reuse same stateful logic with custom hooks.")),(0,o.kt)("h2",{id:"react-hooks"},"React Hooks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reuse stateful logic between components\n(avoid wrapper hell in render props or HOC)"),(0,o.kt)("li",{parentName:"ul"},"Split one complex component into smaller functions"),(0,o.kt)("li",{parentName:"ul"},"Use more of React features ",(0,o.kt)("strong",{parentName:"li"},"without classes")),(0,o.kt)("li",{parentName:"ul"},"Class components will read ",(0,o.kt)("inlineCode",{parentName:"li"},"this.props")," ",(0,o.kt)("strong",{parentName:"li"},"too early")," or ",(0,o.kt)("strong",{parentName:"li"},"too late"),",\nbecause of mutable ",(0,o.kt)("inlineCode",{parentName:"li"},"this")," in React\n(however ",(0,o.kt)("inlineCode",{parentName:"li"},"props")," argument of function components is immutable),\nthat says function components capture the ",(0,o.kt)("strong",{parentName:"li"},"rendered values"),".\nmore details on\n",(0,o.kt)("a",{parentName:"li",href:"https://overreacted.io/how-are-function-components-different-from-classes/"},"Overreacted"),".")),(0,o.kt)("h3",{id:"hooks-types"},"Hooks Types"),(0,o.kt)("p",null,"Hooks\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js"},"definition"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u4ece React \u5185\u90e8 (Reconciler) \u770b, Hooks \u53ef\u5206\u4e3a\u4e09\u7c7b:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"State Hooks (",(0,o.kt)("inlineCode",{parentName:"li"},"useState/useReducer/useContext/useRef/useCallback/useMemo"),"):\n\u4e3b\u8981\u4f5c\u7528\u4e8e ",(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Render")," \u9636\u6bb5, ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.pendingProps/memoizedProps/memoizedState/updateQueue"),"."),(0,o.kt)("li",{parentName:"ul"},"Effect Hooks (",(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useEffect"),"):\n\u5728 ",(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Render")," \u9636\u6bb5\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.flags")," (effects flags),\n\u4e3b\u8981\u4f5c\u7528\u4e8e ",(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Commit")," \u9636\u6bb5, \u529f\u80fd\u63a5\u8fd1 ",(0,o.kt)("inlineCode",{parentName:"li"},"ClassComponent.LifeCycle"),"."),(0,o.kt)("li",{parentName:"ul"},"Hybrid Hooks (",(0,o.kt)("inlineCode",{parentName:"li"},"useDeferredValue/useTransition/useId/useSyncExternalStore"),"):\nState + Effect Hooks, \u65e2\u4fdd\u5b58\u72b6\u6001, \u53c8\u4ea7\u751f\u526f\u4f5c\u7528.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Hook {\n  // hook \u4fdd\u5b58\u7684\u6570\u636e.\n  memoizedState: any;\n  // \u672c\u6b21\u66f4\u65b0\u4ee5 baseState \u4e3a\u57fa\u7840\u8ba1\u7b97\u65b0\u7684 state.\n  baseState: any;\n  // \u672c\u6b21\u66f4\u65b0\u5f00\u59cb\u65f6\u5df2\u6709\u7684 update \u961f\u5217.\n  baseQueue: Update<any, any> | null;\n  // \u672c\u6b21\u66f4\u65b0\u9700\u8981\u589e\u52a0\u7684 update \u961f\u5217.\n  queue: UpdateQueue<any, any> | null;\n  // \u6307\u5411\u4e0b\u4e00\u4e2a hook.\n  next: Hook | null;\n}\n\ninterface Update<S, A> {\n  lane: Lane;\n  action: A;\n  hasEagerState: boolean;\n  eagerState: S | null;\n  next: Update<S, A>;\n}\n\ninterface UpdateQueue<S, A> {\n  pending: Update<S, A> | null;\n  interleaved: Update<S, A> | null;\n  dispatch: ((A) => mixed) | null;\n  lanes: Lanes;\n  lastRenderedReducer: ((S, A) => S) | null;\n  lastRenderedState: S | null;\n}\n\ninterface Effect {\n  tag: HookFlags;\n  create: () => (() => void) | void;\n  destroy: (() => void) | void;\n  deps: Array<mixed> | null;\n  next: Effect;\n}\n\ntype HookType =\n  | 'useState'\n  | 'useReducer'\n  | 'useContext'\n  | 'useRef'\n  | 'useEffect'\n  | 'useInsertionEffect'\n  | 'useLayoutEffect'\n  | 'useCallback'\n  | 'useMemo'\n  | 'useImperativeHandle'\n  | 'useDebugValue'\n  | 'useDeferredValue'\n  | 'useTransition'\n  | 'useMutableSource'\n  | 'useSyncExternalStore'\n  | 'useId'\n  | 'useCacheRefresh';\n")),(0,o.kt)("h3",{id:"hooks-memoized-state"},"Hooks Memoized State"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," \u5185\u90e8\u6240\u6709 Hooks memoized state\n\u7ec4\u6210 ",(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber")," memoized state."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," ",(0,o.kt)("inlineCode",{parentName:"li"},"Fiber"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"fiber.memoizedState")," \u6307\u5411\u7b2c\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"li"},"Hook"),".")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Hooks"),(0,o.kt)("th",{parentName:"tr",align:null},"Memoized State"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"useRef"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ref: { current }"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"useMemo"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[nextValue, deps]"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"useCallback"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[callback, deps]"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"useState"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"state"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"useEffect"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"effect: { tag, create, destroy, deps, next }"))))),(0,o.kt)("h3",{id:"hooks-workflow"},"Hooks Workflow"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Render"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Update"),":\n",(0,o.kt)("inlineCode",{parentName:"li"},"performUnitOfWork")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"beginWork")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"updateFunctionComponent"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"li"},"renderWithHooks")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"mountXXX"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"updateXXX"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"rerenderXXX"),"\n-> ",(0,o.kt)("inlineCode",{parentName:"li"},"reconcileChildren"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Reconciler.Commit"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Update")," layout effect (",(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect"),"):",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Mutation")," phase: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitWork")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"commitHooKEffectListUnmount")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.destroy"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Layout")," phase: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitLifeCycles")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"commitHookEffectListMount")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.create"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Update | Passive")," passive effect (",(0,o.kt)("inlineCode",{parentName:"li"},"useEffect"),"):",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Layout")," phase: ",(0,o.kt)("inlineCode",{parentName:"li"},"commitLifeCycles")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"schedulePassiveEffects"),", \u6536\u96c6 Effects."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"scheduleCallback")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"flushPassiveEffects")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.destroy")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.create"),"."))),(0,o.kt)("li",{parentName:"ul"},"\u53ea\u6709 ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.tag")," \u5305\u542b ",(0,o.kt)("inlineCode",{parentName:"li"},"HasEffect")," \u65f6\u624d\u4f1a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.destroy")," \u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"effect.create"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"renderWithHooks"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnMount"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"mountXXX"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnUpdate"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"updateXXX"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnRerender"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"updateXXX"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"rerenderXXX"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"mountXXX")),": ",(0,o.kt)("inlineCode",{parentName:"li"},"mountWorkInProgressHook")," -> respective mount logic."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"updateXXX")),": ",(0,o.kt)("inlineCode",{parentName:"li"},"updateWorkInProgressHook")," -> respective update logic.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.new.js"},"ReactReconciler/ReactFiberBeginWork"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const updateLanes = workInProgress.lanes;\n\n  switch (workInProgress.tag) {\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n    }\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes\n) {\n  const context = prepareToReadContext(workInProgress, renderLanes);\n\n  // \u8fdb\u5165 Hooks \u76f8\u5173\u903b\u8f91, \u6700\u540e\u8fd4\u56de\u4e0b\u7ea7 ReactElement \u5bf9\u8c61.\n  const nextChildren = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    context,\n    renderLanes\n  );\n\n  const hasId = checkDidRenderIdHook();\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  // \u8fdb\u5165 Reconcile \u51fd\u6570, \u751f\u6210\u4e0b\u7ea7 Fiber \u8282\u70b9.\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  // \u8fd4\u56de\u4e0b\u7ea7 Fiber \u8282\u70b9.\n  return workInProgress.child;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js"},"ReactReconciler/ReactFiberHooks"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// \u6e32\u67d3\u4f18\u5148\u7ea7.\nlet renderLanes: Lanes = NoLanes;\n\n// \u5f53\u524d\u6b63\u5728\u6784\u9020\u7684 Fiber, \u7b49\u540c\u4e8e workInProgress.\nlet currentlyRenderingFiber: Fiber = null;\n\n// Hooks \u94fe\u8868\u88ab\u5b58\u50a8\u5728 fiber.memoizedState:\n// currentHook = fiber(current).memoizedState.\nlet currentHook: Hook | null = null;\n// workInProgressHook = fiber(workInProgress).memoizedState.\nlet workInProgressHook: Hook | null = null;\n\n// \u5728 FunctionComponent \u7684\u6267\u884c\u8fc7\u7a0b\u4e2d, \u662f\u5426\u518d\u6b21\u53d1\u8d77\u4e86\u66f4\u65b0.\n// \u53ea\u6709 FunctionComponent \u88ab\u5b8c\u5168\u6267\u884c\u4e4b\u540e\u624d\u4f1a\u91cd\u7f6e.\n// \u5f53 render \u5f02\u5e38\u65f6, \u901a\u8fc7\u8be5\u53d8\u91cf\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u6e05\u9664 render \u8fc7\u7a0b\u4e2d\u7684\u66f4\u65b0.\nlet didScheduleRenderPhaseUpdate = false;\n\n// \u5728\u672c\u6b21 FunctionComponent \u7684\u6267\u884c\u8fc7\u7a0b\u4e2d, \u662f\u5426\u518d\u6b21\u53d1\u8d77\u4e86\u66f4\u65b0.\n// \u6bcf\u4e00\u6b21\u8c03\u7528 FunctionComponent \u90fd\u4f1a\u88ab\u91cd\u7f6e.\nlet didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n// \u5728\u672c\u6b21 FunctionComponent \u7684\u6267\u884c\u8fc7\u7a0b\u4e2d, \u91cd\u65b0\u53d1\u8d77\u66f4\u65b0\u7684\u6700\u5927\u6b21\u6570.\nconst RE_RENDER_LIMIT = 25;\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes\n): any {\n  // Store context.\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // Mount or Update hooks dispatcher.\n  ReactCurrentDispatcher.current =\n    current === null || current.memoizedState === null\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n\n  // \u6267\u884c FunctionComponent \u51fd\u6570, \u6267\u884c `useXXX`.\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue.\n    // Use a counter to prevent infinite loops.\n    let numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      localIdCounter = 0;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error(\n          'Too many re-renders. React limits the number of renders to prevent ' +\n            'an infinite loop.'\n        );\n      }\n\n      numberOfReRenders += 1;\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n      // Rerender hooks dispatcher.\n      ReactCurrentDispatcher.current = HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // Restore context.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = null;\n  currentHook = null;\n  workInProgressHook = null;\n  didScheduleRenderPhaseUpdate = false;\n\n  return children;\n}\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useInsertionEffect: mountInsertionEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useId: mountId,\n  unstable_isNewReconciler: enableNewReconciler,\n  readContext,\n};\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId,\n  unstable_isNewReconciler: enableNewReconciler,\n  readContext,\n};\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId,\n  unstable_isNewReconciler: enableNewReconciler,\n  readContext,\n};\n\n// \u521b\u5efa Hook, \u6302\u8f7d\u5230 Hooks \u94fe\u8868.\nfunction mountWorkInProgressHook(): Hook {\n  // hook \u5b9e\u4f8b\n  const hook: Hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: hookForB,\n  };\n\n  if (workInProgressHook === null) {\n    // Fist hook in the list.\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of list.\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\n// \u79fb\u52a8 Hooks \u94fe\u8868\u6307\u9488, \u83b7\u53d6 workInProgressHook.\nfunction updateWorkInProgressHook(): Hook {\n  let nextCurrentHook: Hook | null;\n  let nextWorkInProgressHook: Hook | null;\n\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    nextCurrentHook = current ? current.memoizedState : null;\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error('Rendered more hooks than during the previous render.');\n    }\n\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null =\n    finishedWork.updateQueue;\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n\n    do {\n      if ((effect.tag & tag) === tag) {\n        const create = effect.create;\n        effect.destroy = create();\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListUnmount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null =\n    finishedWork.updateQueue;\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n\n    do {\n      if ((effect.tag & tag) === tag) {\n        // \u6839\u636e\u4f20\u5165\u7684 tag \u8fc7\u6ee4 Effects \u94fe\u8868.\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n")),(0,o.kt)("h3",{id:"minimal-hooks-implementation"},"Minimal Hooks Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const MyReact = (function () {\n  const hooks = [];\n  let currentHook = 0; // array of hooks, and an iterator!\n  return {\n    render(Component) {\n      const Comp = Component(); // run effects\n      Comp.render();\n      currentHook = 0; // reset for next render\n      return Comp;\n    },\n    useEffect(callback, depArray) {\n      const hasNoDeps = !depArray;\n      const deps = hooks[currentHook]; // type: array | undefined\n      const hasChangedDeps = deps\n        ? !depArray.every((el, i) => el === deps[i])\n        : true;\n      if (hasNoDeps || hasChangedDeps) {\n        callback();\n        hooks[currentHook] = depArray;\n      }\n      currentHook++; // done with this hook\n    },\n    useState(initialValue) {\n      hooks[currentHook] = hooks[currentHook] || initialValue; // type: any\n      const setStateHookIndex = currentHook; // for setState's closure!\n      const setState = newState => (hooks[setStateHookIndex] = newState);\n      return [hooks[currentHook++], setState];\n    },\n  };\n})();\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function Counter() {\n  const [count, setCount] = MyReact.useState(0);\n  const [text, setText] = MyReact.useState('foo'); // 2nd state hook!\n  MyReact.useEffect(() => {\n    console.log('effect', count, text);\n  }, [count, text]);\n  return {\n    click: () => setCount(count + 1),\n    type: txt => setText(txt),\n    noop: () => setCount(count),\n    render: () => console.log('render', { count, text }),\n  };\n}\n\nlet App;\n\nApp = MyReact.render(Counter);\n// effect 0 foo\n// render {count: 0, text: 'foo'}\n\nApp.click();\nApp = MyReact.render(Counter);\n// effect 1 foo\n// render {count: 1, text: 'foo'}\n\nApp.type('bar');\nApp = MyReact.render(Counter);\n// effect 1 bar\n// render {count: 1, text: 'bar'}\n\nApp.noop();\nApp = MyReact.render(Counter);\n// // no effect run\n// render {count: 1, text: 'bar'}\n\nApp.click();\nApp = MyReact.render(Counter);\n// effect 2 bar\n// render {count: 2, text: 'bar'}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function Component() {\n  const [text, setText] = useSplitURL('www.netlify.com');\n  return {\n    type: txt => setText(txt),\n    render: () => console.log({ text }),\n  };\n}\n\nfunction useSplitURL(str) {\n  const [text, setText] = MyReact.useState(str);\n  const masked = text.split('.');\n  return [masked, setText];\n}\n\nlet App;\n\nApp = MyReact.render(Component);\n// { text: [ 'www', 'netlify', 'com' ] }\n\nApp.type('www.reactjs.org');\nApp = MyReact.render(Component);\n// { text: [ 'www', 'reactjs', 'org' ] }}\n")),(0,o.kt)("h3",{id:"usestate-hook"},"UseState Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Read rendered props/state."),(0,o.kt)("li",{parentName:"ul"},"Return value of ",(0,o.kt)("inlineCode",{parentName:"li"},"useState")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"ref")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"hooks[idx]"),":\ndirect change to return value doesn't change state value."),(0,o.kt)("li",{parentName:"ul"},"Return function of ",(0,o.kt)("inlineCode",{parentName:"li"},"useState")," (",(0,o.kt)("inlineCode",{parentName:"li"},"setState"),") is to change value of ",(0,o.kt)("inlineCode",{parentName:"li"},"hooks[idx]"),"."),(0,o.kt)("li",{parentName:"ul"},"\u7531\u4e8e setState \u66f4\u65b0\u72b6\u6001 (dispatch action) \u65f6\u57fa\u4e8e hook.BaseState,\n",(0,o.kt)("inlineCode",{parentName:"li"},"setState(value + 1)")," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"setState(value => value + 1)")," \u5b58\u5728\u5dee\u5f02."),(0,o.kt)("li",{parentName:"ul"},"\u5f53\u5728 useEffect \u4e2d\u8c03\u7528 setState \u65f6, \u6700\u597d\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"setState(callback)")," \u5f62\u5f0f,\n\u8fd9\u6837\u53ef\u4ee5\u4e0d\u7528\u518d Deps List \u4e2d\u663e\u5f0f\u58f0\u660e state, \u4e5f\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b BUG."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dispatchAction"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u521b\u5efa ",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," \u5bf9\u8c61."),(0,o.kt)("li",{parentName:"ul"},"\u5c06 Update \u5bf9\u8c61\u6dfb\u52a0\u5230 hook.queue.pending \u961f\u5217."),(0,o.kt)("li",{parentName:"ul"},"\u6839\u636e reducerEagerState \u4e0e currentState, \u51b3\u5b9a\u662f\u5426\u53d1\u8d77\u65b0\u7684 Reconciler \u8c03\u5ea6.")))),(0,o.kt)("h4",{id:"usestate-hooks-dispatcher"},"UseState Hooks Dispatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountState<T>(initialState: T) {\n  const hook = mountWorkInProgressHook();\n\n  if (typeof initialState === 'function') {\n    initialState = initialState();\n  }\n\n  // Setup Hook.\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState,\n  });\n  const dispatch = (queue.dispatch = dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue\n  ));\n\n  // Return Hook state and dispatch action.\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<T>(initialState: T) {\n  const basicStateReducer = (state, action) => {\n    return typeof action === 'function' ? action(state) : action;\n  };\n\n  return updateReducer(basicStateReducer);\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A\n) {\n  // 1. \u521b\u5efa Update \u5bf9\u8c61.\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: null,\n  };\n\n  // 2. \u5c06 Update \u5bf9\u8c61\u6dfb\u52a0\u5230 hook.queue.pending \u961f\u5217.\n  const pending = queue.pending;\n  if (pending === null) {\n    // \u9996\u4e2a Update, \u521b\u5efa\u4e00\u4e2a\u73af\u5f62\u94fe\u8868.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // \u6e32\u67d3\u65f6\u66f4\u65b0, \u505a\u597d\u5168\u5c40\u6807\u8bb0.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n      true;\n  } else {\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      const lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        const currentState: S = queue.lastRenderedState;\n        const eagerState = lastRenderedReducer(currentState, action);\n        update.eagerReducer = lastRenderedReducer;\n        update.eagerState = eagerState;\n\n        // \u82e5\u5728 Render \u9636\u6bb5, reducerEagerState === currentState,\n        // \u5219\u53ef\u4ee5\u65e0\u9700\u518d\u6b21\u8ba1\u7b97\u72b6\u6001, \u8df3\u8fc7\u8c03\u5ea6\u9636\u6bb5, \u540e\u7eed\u76f4\u63a5\u4f7f\u7528 update.eagerState.\n        if (is(eagerState, currentState)) {\n          return;\n        }\n      }\n    }\n\n    // 3. \u53d1\u8d77\u8c03\u5ea6\u66f4\u65b0, \u8fdb\u5165 Reconciler.\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  }\n}\n")),(0,o.kt)("h4",{id:"usestate-hooks-usage"},"UseState Hooks Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"setState(prevState => {\n  // Object.assign would also work\n  return { ...prevState, ...updatedValues };\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"let newState = baseState;\nconst firstUpdate = hook.baseQueue.next;\nlet update = firstUpdate;\n\n// setState(value + 1) \u4e0e setState(value => value + 1) \u5b58\u5728\u5dee\u5f02\n// \u904d\u5386 baseQueue \u4e2d\u7684\u6bcf\u4e00\u4e2a update\ndo {\n  if (typeof update.action === 'function') {\n    newState = update.action(newState);\n  } else {\n    newState = action;\n  }\n\n  update = reconciler();\n} while (update !== firstUpdate);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useState } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n\n  return isOnline ? 'Online' : 'Offline';\n}\n\n// Mount with { friend: { id: 100 } } props\nChatAPI.subscribeToFriendStatus(100, handleStatusChange); // Run first effect\n\n// Update with { friend: { id: 200 } } props\n// Clean up previous effect\nChatAPI.unsubscribeFromFriendStatus(100, handleStatusChange);\nChatAPI.subscribeToFriendStatus(200, handleStatusChange); // Run next effect\n\n// Update with { friend: { id: 300 } } props\n// Clean up previous effect\nChatAPI.unsubscribeFromFriendStatus(200, handleStatusChange);\nChatAPI.subscribeToFriendStatus(300, handleStatusChange); // Run next effect\n\n// Unmount\nChatAPI.unsubscribeFromFriendStatus(300, handleStatusChange); // Clean up last effect\n")),(0,o.kt)("h3",{id:"usereducer-hook"},"UseReducer Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use useState whenever manage a JS ",(0,o.kt)("strong",{parentName:"li"},"primitive")," (e.g. string, boolean, integer)."),(0,o.kt)("li",{parentName:"ul"},"Use useReducer whenever manage an ",(0,o.kt)("strong",{parentName:"li"},"object")," or ",(0,o.kt)("strong",{parentName:"li"},"array"),"."),(0,o.kt)("li",{parentName:"ul"},"It\u2019s best to put states together in one state object\nwhen they conditionally dependent on each other (useReducer)."),(0,o.kt)("li",{parentName:"ul"},"Using useReducer over useState gives us predictable state transitions.\nIt comes in very powerful when state changes become more complex.")),(0,o.kt)("h4",{id:"usereducer-hooks-dispatcher"},"UseReducer Hooks Dispatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: (I) => S\n): [S, Dispatch<A>] {\n  // 1. Create Hook.\n  const hook = mountWorkInProgressHook();\n  let initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  // 2. Setup Hook.\n  // 2.1 Set hook.memoizedState/hook.baseState.\n  hook.memoizedState = hook.baseState = initialState;\n  // 2.2 Set hook.queue.\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState,\n  });\n  // 2.3 Set hook.dispatch.\n  const dispatch: Dispatch<A> = (queue.dispatch = dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue\n  ));\n\n  // 3. Return Hook state and dispatch action.\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: (I) => S\n): [S, Dispatch<A>] {\n  // Get workInProgressHook.\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  queue.lastRenderedReducer = reducer;\n  const current: Hook = currentHook;\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n\n  // Append hook.queue.pending to current.baseQueue.\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  // Calculate Hook state.\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n\n    do {\n      const updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // \u4f18\u5148\u7ea7\u4e0d\u591f: \u52a0\u5165\u5230 baseQueue, \u7b49\u5f85\u4e0b\u4e00\u6b21 render.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null,\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Update the remaining priority in the queue.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority (\u4f18\u5148\u7ea7\u8db3\u591f).\n        // Merge state.\n        if (newBaseQueueLast !== null) {\n          // Update baseQueue\n          const clone: Update<S, A> = {\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null,\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.hasEagerState) {\n          // \u6027\u80fd\u4f18\u5316:\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          // \u8c03\u7528 Reducer \u83b7\u53d6\u6700\u65b0\u72b6\u6001.\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    }\n\n    // Mark that the fiber performed work,\n    // but only if the new state is different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    // \u628a\u8ba1\u7b97\u540e\u7ed3\u679c\u66f4\u65b0\u5230 workInProgressHook.\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  }\n\n  // Return Hook state and dispatch action.\n  const dispatch: Dispatch<A> = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n")),(0,o.kt)("h4",{id:"usereducer-hooks-usage"},"UseReducer Hooks Usage"),(0,o.kt)("p",null,"Use useState if:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"manage JavaScript primitives as state"),(0,o.kt)("li",{parentName:"ul"},"have simple state transitions"),(0,o.kt)("li",{parentName:"ul"},"want to have business logic within components"),(0,o.kt)("li",{parentName:"ul"},"have different properties that don\u2019t change in any correlated manner\nand can be managed by multiple useState hooks"),(0,o.kt)("li",{parentName:"ul"},"state is co-located to your component"),(0,o.kt)("li",{parentName:"ul"},"for a small application")),(0,o.kt)("p",null,"Use useReducer if:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"manage JavaScript objects or arrays as state"),(0,o.kt)("li",{parentName:"ul"},"have complex state transitions"),(0,o.kt)("li",{parentName:"ul"},"want to move business logic into reducers"),(0,o.kt)("li",{parentName:"ul"},"have different properties that are tied together\nand should be managed in one state object"),(0,o.kt)("li",{parentName:"ul"},"update state deep down in your component tree"),(0,o.kt)("li",{parentName:"ul"},"for a medium size application"),(0,o.kt)("li",{parentName:"ul"},"for easier testing"),(0,o.kt)("li",{parentName:"ul"},"for more predictable and maintainable state architecture")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function App() {\n  const [state, dispatch] = useState({ count: 0 });\n\n  // \u7b49\u4ef7\u4e8e\n  const [state, dispatch] = useReducer(\n    function basicStateReducer(state, action) {\n      return typeof action === 'function' ? action(state) : action;\n    },\n    { count: 0 }\n  );\n\n  // \u5f53\u9700\u8981\u66f4\u65b0 state \u65f6, \u6709 2 \u79cd\u65b9\u5f0f:\n  // 1. \u76f4\u63a5\u8bbe\u7f6e:\n  dispatch({ count: 1 });\n  // 2.\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8bbe\u7f6e:\n  dispatch(state => ({ count: state.count + 1 }));\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const insertToHistory = state => {\n  if (state && Array.isArray(state.history)) {\n    // Do not mutate\n    const newHistory = [...state.history];\n    newHistory.push(state);\n    return newHistory;\n  }\n  console.warn(`\n    WARNING! The state was attempting capture but something went wrong.\n    Please check if the state is controlled correctly.\n  `);\n  return state.history || [];\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'set-theme':\n      return { ...state, theme: action.theme, history: insertToHistory(state) };\n    case 'add-friend':\n      return {\n        ...state,\n        friends: [...state.friends, action.friend],\n        history: insertToHistory(state),\n      };\n    case 'undo': {\n      const isEmpty = !state.history.length;\n      if (isEmpty) return state;\n      return { ...state.history[state.history.length - 1] };\n    }\n    case 'reset':\n      return { ...initialState, history: insertToHistory(state) };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <div>App</div>;\n};\n")),(0,o.kt)("h3",{id:"usememo-hook"},"UseMemo Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Returns a memoized value."),(0,o.kt)("li",{parentName:"ul"},"Only recompute the memoized value when one of the dependencies has changed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Shallow compare")," diff."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Optimization")," helps to\navoid expensive calculations on every render\n(avoid re-render problem):",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Good use")," for complex objects or expensive calculations."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Donn't use")," for primitive values or simple calculations.")))),(0,o.kt)("h4",{id:"usememo-hooks-dispatcher"},"UseMemo Hooks Dispatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n")),(0,o.kt)("h4",{id:"usememo-hooks-usage"},"UseMemo Hooks Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Button = ({ color, children }) => {\n  const textColor = useMemo(\n    () => slowlyCalculateTextColor(color),\n    [color] // \u2705 Don\u2019t recalculate until `color` changes\n  );\n\n  return (\n    <button className={`Button-${color} Button-text-${textColor}`}>\n      {children}\n    </button>\n  );\n};\n")),(0,o.kt)("h3",{id:"usecallback-hook"},"UseCallback Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Returns a memoized callback."),(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8b\u4ef6\u53e5\u67c4\u8fdb\u884c\u7f13\u5b58, ",(0,o.kt)("inlineCode",{parentName:"li"},"useState")," \u7684\u7b2c\u4e8c\u4e2a\u8fd4\u56de\u503c\u662f ",(0,o.kt)("inlineCode",{parentName:"li"},"dispatch"),",\n\u4f46\u662f\u6bcf\u6b21\u90fd\u662f\u8fd4\u56de\u65b0\u7684\u51fd\u6570, \u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"useCallback"),", \u53ef\u4ee5\u8ba9\u5b83\u4f7f\u7528\u4e0a\u6b21\u7684\u51fd\u6570.\n\u5728\u865a\u62df DOM \u66f4\u65b0\u8fc7\u7a0b\u4e2d, \u5982\u679c\u4e8b\u4ef6\u53e5\u67c4\u76f8\u540c, \u90a3\u4e48\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u8fdb\u884c\n",(0,o.kt)("inlineCode",{parentName:"li"},"removeEventListener")," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},"addEventListener"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useCallback(fn, deps)")," is equivalent to ",(0,o.kt)("inlineCode",{parentName:"li"},"useMemo(() => fn, deps)"),".")),(0,o.kt)("h4",{id:"usecallback-hooks-dispatcher"},"UseCallback Hooks Dispatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n")),(0,o.kt)("h4",{id:"usecallback-hooks-usage"},"UseCallback Hooks Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Parent() {\n  const [query, setQuery] = useState('react');\n\n  // \u2705 Preserves identity until query changes\n  const fetchData = useCallback(() => {\n    const url = `https://hn.algolia.com/api/v1/search?query=${query}`;\n    // ... Fetch data and return it ...\n  }, [query]); // \u2705 Callback deps are OK\n\n  return <Child fetchData={fetchData} />;\n}\n\nfunction Child({ fetchData }) {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetchData().then(setData);\n  }, [fetchData]); // \u2705 Effect deps are OK\n\n  // ...\n}\n")),(0,o.kt)("h3",{id:"useref-hook"},"UseRef Hook"),(0,o.kt)("h4",{id:"useref-hooks-dispatcher"},"UseRef Hooks Dispatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountRef<T>(initialValue: T) {\n  const hook = mountWorkInProgressHook();\n  const ref = {\n    current: initialValue,\n  };\n  Object.seal(ref);\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef<T>(initialValue: T) {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n")),(0,o.kt)("h4",{id:"refs-basis"},"Refs Basis"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ref")," can bind to HTMLElement."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ref")," can either be a state that does not need to change too often."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ref")," can either be a state that should change as frequently as possible\nbut should not trigger full re-rendering of the component.")),(0,o.kt)("h4",{id:"refs-values"},"Refs Values"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Mutable Value:\n",(0,o.kt)("inlineCode",{parentName:"li"},"useRef()")," is useful for for keeping any mutable value around.\nUpdating reference values inside handlers/useEffect callbacks is good,\nupdating reference values during rendering (outside callbacks) is bad."),(0,o.kt)("li",{parentName:"ul"},"Lifecycle Persisted Value:\n",(0,o.kt)("inlineCode",{parentName:"li"},"useRef()")," creates a plain JavaScript object,\nis persisted (stays the same) between component re-renderings."),(0,o.kt)("li",{parentName:"ul"},"Silent Value:\nupdate reference values don't trigger re-renderings."),(0,o.kt)("li",{parentName:"ul"},"Latest Value:\n",(0,o.kt)("inlineCode",{parentName:"li"},"useRef()")," read rendered props/state from ",(0,o.kt)("strong",{parentName:"li"},"the future"),".\nIt's good to get ",(0,o.kt)("strong",{parentName:"li"},"latest")," value of a particular prop or state\n(the updated reference value is available right away).")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Example() {\n  const [count, setCount] = useState(0);\n  const latestCount = useRef(count);\n\n  useEffect(() => {\n    // Set the mutable latest value\n    latestCount.current = count;\n    setTimeout(() => {\n      // Read the mutable latest value\n      console.log(`You clicked ${latestCount.current} times`);\n    }, 3000);\n  });\n\n  return <div>Example</div>;\n}\n")),(0,o.kt)("h4",{id:"refs-update-mechanism"},"Refs Update Mechanism"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Update a ",(0,o.kt)("inlineCode",{parentName:"li"},"ref"),", no re-renderings happens."),(0,o.kt)("li",{parentName:"ul"},"Update a ",(0,o.kt)("inlineCode",{parentName:"li"},"state"),", the deep rendering mechanism works to re-render components."),(0,o.kt)("li",{parentName:"ul"},"Store values in refs and have them updated,\nwhich is more ",(0,o.kt)("strong",{parentName:"li"},"efficient")," than ",(0,o.kt)("inlineCode",{parentName:"li"},"useState")," (which can be expensive)\nwhen the values are to be updated multiple times within a second.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function UserAvatar(props) {\n  return <img src={props.src} alt=\"User Avatar\" />;\n}\n\nfunction Username(props) {\n  return <span>{props.name}</span>;\n}\n\nfunction User() {\n  const user = useRef({\n    name: 'UserName',\n    avatarURL: 'https://avatar.com/avatar',\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      user.current = {\n        name: 'NewUserName',\n        avatarURL: 'https://avatar.com/newavatar',\n      };\n    }, 5000);\n  });\n\n  // Only output once\n  console.log('Rendered.');\n\n  // Both children won't be re-rendered\n  // due to shallow rendering mechanism\n  return (\n    <div>\n      <Username name={user.name} />\n      <UserAvatar src={user.avatarURL} />\n    </div>\n  );\n}\n")),(0,o.kt)("h3",{id:"usecontext-hook"},"UseContext Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create custom ",(0,o.kt)("inlineCode",{parentName:"li"},"XXXContextProvider"),":\n\u4e00\u822c\u90fd\u4e0d\u4f1a\u88f8\u9732\u5730\u4f7f\u7528 Context.Provider, \u800c\u662f\u5c01\u88c5\u4e3a\u72ec\u7acb\u7684 Provider \u7ec4\u4ef6,\n\u5c06\u5b50\u7ec4\u4ef6\u4f5c\u4e3a props.children \u4f20\u5165, \u8fd9\u6837\u5f53 Context \u53d8\u5316\u65f6 Provider \u4e0d\u4f1a\u91cd\u65b0\u6e32\u67d3\u5b83\u7684\u5b50\u7ec4\u4ef6,\n\u7531\u4f9d\u8d56\u4e86 context \u7684\u5b50\u7ec4\u4ef6\u81ea\u5df1\u8fdb\u884c\u91cd\u6e32\u67d3, \u672a\u4f9d\u8d56\u7684\u5b50\u7ec4\u4ef6\u4e0d\u4f1a\u91cd\u65b0\u6e32\u67d3.\n",(0,o.kt)("strong",{parentName:"li"},"\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"strong"},"useMemo")," \u4f7f\u5f97 value \u4e0d\u4f1a\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u6e32\u67d3 (Re-rendering)"),"."),(0,o.kt)("li",{parentName:"ul"},"Create custom ",(0,o.kt)("inlineCode",{parentName:"li"},"useXXXContext")," hook:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Check whether component under ",(0,o.kt)("inlineCode",{parentName:"li"},"XXXContextProvider"),"."),(0,o.kt)("li",{parentName:"ul"},"Wrap complex context logic and only expose simple API (Facade design pattern)."),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"useMemo"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useCallback")," to ",(0,o.kt)("strong",{parentName:"li"},"memorize values and functions"),"."))),(0,o.kt)("li",{parentName:"ul"},"Context \u4e2d\u53ea\u5b9a\u4e49\u88ab\u5927\u591a\u6570\u7ec4\u4ef6\u6240\u5171\u7528\u7684\u5c5e\u6027,\nuse context to avoid ",(0,o.kt)("strong",{parentName:"li"},"Prop Drilling"),".")),(0,o.kt)("h4",{id:"usecontext-hooks-dispatcher"},"UseContext Hooks Dispatcher"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnMount.useContext = readContext"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnUpdate.useContext = readContext"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"HooksDispatcherOnRerender.useContext = readContext"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function createContext<T>(\n  defaultValue: T,\n  calculateChangedBits: ?((a: T, b: T) => number)\n): ReactContext<T> {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  }\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null,\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context,\n  };\n  context.Consumer = context;\n  return context;\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n): Fiber | null {\n  const updateLanes = workInProgress.lanes;\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n  }\n}\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n  const newValue = newProps.value; // <Provider value={}>{children}</Provider>\n\n  // \u66f4\u65b0 ContextProvider._currentValue:\n  // workInProgress.type._context._currentValue = newValue;\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    // \u66f4\u65b0\u9636\u6bb5.\n    // \u5bf9\u6bd4 newValue \u548c oldValue\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n\n    if (changedBits === 0) {\n      // value \u6ca1\u6709\u53d8\u52a8, \u8fdb\u5165 Bailout \u903b\u8f91.\n      if (\n        oldProps.children === newProps.children &&\n        !hasLegacyContextChanged()\n      ) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      }\n    } else {\n      // value\u53d8\u52a8, \u67e5\u627e\u5bf9\u5e94\u7684 Consumers, \u5e76\u4f7f\u5176\u80fd\u591f\u88ab\u66f4\u65b0.\n      // \u5411\u4e0b\u904d\u5386:\n      // \u4ece ContextProvider \u8282\u70b9\u5f00\u59cb,\n      // \u5411\u4e0b\u67e5\u627e\u6240\u6709 fiber.dependencies \u4f9d\u8d56\u8be5 context \u7684\u8282\u70b9.\n      // \u5411\u4e0a\u904d\u5386:\n      // \u4ece ContextConsumer \u8282\u70b9\u5f00\u59cb,\n      // \u5411\u4e0a\u904d\u5386, \u4fee\u6539\u7236\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684 fiber.childLanes \u5c5e\u6027, \u8868\u660e\u5176\u5b50\u8282\u70b9\u6709\u6539\u52a8, \u5b50\u8282\u70b9\u4f1a\u8fdb\u5165\u66f4\u65b0\u903b\u8f91.\n      propagateContextChange(workInProgress, context, changedBits, renderLanes);\n    }\n  }\n\n  // \u751f\u6210\u4e0b\u7ea7 Fiber.\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes\n) {\n  const context: ReactContext<any> = workInProgress.type;\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  // \u8bfb\u53d6 context.\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n\n  // \u751f\u6210\u4e0b\u7ea7 Fiber.\n  const newChildren = render(newValue);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction prepareToReadContext(workInProgress: Fiber, renderLanes: Lanes): void {\n  // Setup.\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  const dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    const firstContext = dependencies.firstContext;\n\n    if (firstContext !== null) {\n      if (includesSomeLane(dependencies.lanes, renderLanes)) {\n        // Context list has a pending update.\n        // Mark that this fiber performed work.\n        markWorkInProgressReceivedUpdate();\n      }\n\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    }\n  }\n}\n\nfunction readContext<T>(\n  context: ReactContext<T>,\n  observedBits: void | number | boolean\n): T {\n  const contextItem = {\n    context: context as ReactContext<mixed>,\n    observedBits: resolvedObservedBits,\n    next: null,\n  };\n\n  // 1. \u6784\u9020\u4e00\u4e2a contextItem, \u52a0\u5165\u5230 workInProgress.dependencies \u94fe\u8868.\n  if (lastContextDependency === null) {\n    lastContextDependency = contextItem;\n    currentlyRenderingFiber.dependencies = {\n      lanes: NoLanes,\n      firstContext: contextItem,\n      responders: null,\n    };\n  } else {\n    lastContextDependency = lastContextDependency.next = contextItem;\n  }\n\n  // 2. \u8fd4\u56de currentValue.\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n")),(0,o.kt)("h4",{id:"usecontext-hooks-usage"},"UseContext Hooks Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nconst CountContext = createContext();\n\nfunction CountProvider(props) {\n  const [count, setCount] = useState(0);\n\n  // Use `useMemo`/`useCallback` to memorize values and functions.\n  const value = useMemo(() => {\n    return {\n      count,\n      setCount,\n    };\n  }, [count, setCount]);\n\n  return <CountContext.Provider value={value} {...props} />;\n}\n\nfunction useCount() {\n  const context = useContext(CountContext);\n\n  // Check whether component under `XXXContextProvider`.\n  if (!context) {\n    throw new Error('useCount must be used within a CountProvider');\n  }\n\n  // Wrap complex context logic, only expose simple API.\n  const { count, setCount } = context;\n  const increment = useCallback(() => setCount(c => c + 1), [setCount]);\n\n  return {\n    count,\n    increment,\n  };\n}\n\nexport { CountProvider, useCount };\n")),(0,o.kt)("h3",{id:"useeffect-hook"},"UseEffect Hook"),(0,o.kt)("h4",{id:"useeffect-hooks-dispatcher"},"UseEffect Hooks Dispatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null\n): void {\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps\n  );\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags; // UpdateEffect | PassiveEffect.\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags, // PassiveHook.\n    create,\n    undefined,\n    nextDeps\n  );\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null\n): void {\n  return updateEffectImpl(PassiveEffect, HookPassive, create, deps);\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        // \u5982\u679c\u4f9d\u8d56\u4e0d\u53d8, \u65b0\u5efa Effect (tag \u4e0d\u542b HookHasEffect).\n        // Reconciler.Commit \u9636\u6bb5\u4f1a\u8df3\u8fc7\u6b64 Effect.\n        pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  // \u5982\u679c\u4f9d\u8d56\u6539\u53d8, \u66f4\u6539 fiber.flags, \u65b0\u5efa Effect.\n  // Reconciler.Commit \u9636\u6bb5\u4f1a\u518d\u6b21\u6267\u884c\u6b64 Effect.\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps\n  );\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect = {\n    tag,\n    create, // User code: effect callback.\n    destroy, // User code: destroy callback.\n    deps, // User code: deps list.\n    next: null,\n  };\n\n  let componentUpdateQueue = currentlyRenderingFiber.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      // Circular effect list.\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n")),(0,o.kt)("h4",{id:"useeffect-lifecycle"},"UseEffect Lifecycle"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"React renders UI for current props/state to screen."),(0,o.kt)("li",{parentName:"ol"},"React cleans up the effect for prev props/state."),(0,o.kt)("li",{parentName:"ol"},"React runs the effect for current props/state\n(",(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," got invoked after ",(0,o.kt)("inlineCode",{parentName:"li"},"componentDidMount"),").")),(0,o.kt)("h4",{id:"useeffect-nasty-loop"},"UseEffect Nasty Loop"),(0,o.kt)("p",null,"The effect hook runs when the component ",(0,o.kt)("inlineCode",{parentName:"p"},"mounts"),"\nbut also when the component ",(0,o.kt)("inlineCode",{parentName:"p"},"updates"),".\nBecause we are setting the state after every data fetch,\nthe component updates and the effect runs again.\nIt fetches the data again and again.\nThat\u2019s a bug and needs to be avoided."),(0,o.kt)("h4",{id:"useeffect-deps-list"},"UseEffect Deps List"),(0,o.kt)("p",null,"\u65e0\u8bba\u662f\u5c06\u7ec4\u4ef6\u7f16\u5199\u4e3a\u7c7b\u8fd8\u662f\u51fd\u6570, \u90fd\u5fc5\u987b\u4e3a effect \u54cd\u5e94\u6240\u6709 props \u548c state \u7684\u66f4\u65b0.\n\u5728\u4f20\u7edf\u7684 Class Component, \u9700\u8981\u7f16\u5199\u4ee3\u7801\u53bb\u68c0\u6d4b\u8fd9\u4e9b props \u548c state \u662f\u5426\u53d8\u66f4\n(shouldComponentUpdate, componentDidUpdate).\n\u5728 Function Component, \u501f\u52a9 useEffect Hook \u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u68c0\u6d4b."),(0,o.kt)("p",null,"That\u2019s why provide an ",(0,o.kt)("strong",{parentName:"p"},"empty array")," as second argument to the effect hook\nto avoid activating it on component updates\nbut ",(0,o.kt)("strong",{parentName:"p"},"only for the mounting")," of the component.\nIf one of the variables changes, the hook runs again.\nFor listeners binding, use ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")," deps list should be better."),(0,o.kt)("p",null,"Functions in useEffect:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If only use some functions inside an effect, move them directly into that effect."),(0,o.kt)("li",{parentName:"ul"},"Hoisting functions that don\u2019t need props or state outside of component,\nand pull the ones that are used only by an effect inside of that effect."),(0,o.kt)("li",{parentName:"ul"},"For useCallback function, it should be in deps list ",(0,o.kt)("inlineCode",{parentName:"li"},"useEffect(() => {}, [callback])"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// https://www.robinwieruch.de/react-hooks-fetch-data\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useDataApi = (initialUrl, initialData) => {\n  const [data, setData] = useState(initialData);\n  const [url, setUrl] = useState(initialUrl);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const result = await axios(url);\n\n        setData(result.data);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n\n  const doFetch = url => {\n    setUrl(url);\n  };\n\n  return { data, isLoading, isError, doFetch };\n};\n")),(0,o.kt)("h4",{id:"useeffect-closure"},"UseEffect Closure"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"useEffect Hook \u4f1a\u4e22\u5f03\u4e0a\u4e00\u6b21\u6e32\u67d3\u7ed3\u679c,\n\u5b83\u4f1a\u6e05\u9664\u4e0a\u4e00\u6b21 effect,\n\u518d\u5efa\u7acb\u4e0b\u4e00\u4e2a effect\n(\u4e5f\u4f1a\u521b\u5efa\u65b0\u7684 Closure),\n\u4e0b\u4e00\u4e2a effect \u9501\u4f4f\u65b0\u7684 props \u548c state\n(\u6574\u4e2a Counter \u51fd\u6570\u5728 re-render \u65f6\u4f1a\u88ab\u91cd\u590d\u8c03\u7528\u4e00\u6b21)."),(0,o.kt)("li",{parentName:"ul"},"setInterval \u4e0d\u4f1a\u4e22\u5f03\u4e0a\u4e00\u6b21\u7ed3\u679c,\n\u4f1a\u5f15\u7528\u65e7\u72b6\u6001 Closure \u4e2d\u7684\u53d8\u91cf,\n\u5bfc\u81f4\u5176\u4e0e useEffect \u6240\u9884\u671f\u884c\u4e3a\u4e0d\u4e00\u81f4."),(0,o.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u901a\u8fc7 useRef \u89e3\u51b3\u8fd9\u4e00\u73b0\u8c61.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// BUG\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setCount(count + 1); // always 1 regardless `count` value change\n    }, 1000);\n    return () => clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <h1>{count}</h1>;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Counter() {\n  const [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1);\n  }, 1000);\n\n  return <h1>{count}</h1>;\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef(callback);\n\n  // Remember the latest callback if it changes\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n")),(0,o.kt)("h4",{id:"useeffect-state"},"UseEffect State"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5982 ",(0,o.kt)("inlineCode",{parentName:"li"},"UseEffect Closure")," \u6240\u8ff0, \u6bcf\u6b21\u8c03\u7528 useEffect \u65f6,\n\u4f1a\u6355\u83b7\u90a3\u4e00\u6b21 render \u65f6\u7684 props \u548c state."),(0,o.kt)("li",{parentName:"ul"},"Class Component \u4e2d\u7684 this.state.xxx \u5374\u603b\u662f\u6307\u5411\u6700\u65b0\u7684 state.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      console.log(`You clicked ${count} times`);\n    }, 3000);\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n// Output:\n// Mounted: You clicked 0 times\n// Clicked 5 times in 3s\n// You clicked 1 times\n// You clicked 2 times\n// You clicked 3 times\n// You clicked 4 times\n// You clicked 5 times\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class Counter {\n  componentDidUpdate() {\n    setTimeout(() => {\n      console.log(`You clicked ${this.state.count} times`);\n    }, 3000);\n  }\n\n  render() {\n    const { count } = this.props;\n\n    return (\n      <div>\n        <p>You clicked {count} times</p>\n        <button onClick={() => this.setState(count + 1)}>Click me</button>\n      </div>\n    );\n  }\n}\n// Output:\n// Mounted: You clicked 0 times\n// Clicked 5 times in 3s\n// You clicked 5 times\n// You clicked 5 times\n// You clicked 5 times\n// You clicked 5 times\n// You clicked 5 times\n")),(0,o.kt)("h4",{id:"useeffect-cleanup"},"UseEffect Cleanup"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Avoid memory leaks."),(0,o.kt)("li",{parentName:"ul"},"Prevent unexpected errors."),(0,o.kt)("li",{parentName:"ul"},"Good user experience.")),(0,o.kt)("p",null,"Cleanup API requests:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const App = () => {\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    const fetchData = async () => {\n      const response = await fetch('some api here', { signal });\n      // do something with response\n    };\n\n    fetchData();\n\n    return () => controller.abort();\n  }, []);\n};\n")),(0,o.kt)("p",null,"Cleanup connections:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const App = () => {\n  useEffect(() => {\n    const socket = new WebSocket('url', protocols);\n    // do what you want with the socket\n\n    return () => socket.close();\n  }, []);\n};\n")),(0,o.kt)("p",null,"Cleanup timeouts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const App = () => {\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      // do something in the timeout\n    }, 3000);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n};\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"React 18 Development Strict Mode")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"With ",(0,o.kt)("inlineCode",{parentName:"p"},"Strict Mode")," in React 18,\nReact will simulate unmounting and remounting component in development mode:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"React mounts component:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Layout effects are created."),(0,o.kt)("li",{parentName:"ul"},"Effect effects are created."))),(0,o.kt)("li",{parentName:"ul"},"React simulates unmounting component:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Layout effects are destroyed."),(0,o.kt)("li",{parentName:"ul"},"Effects are destroyed."))),(0,o.kt)("li",{parentName:"ul"},"React simulates mounting component with previous state:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Layout effect setup code runs."),(0,o.kt)("li",{parentName:"ul"},"Effect setup code runs.")))))),(0,o.kt)("h4",{id:"useeffect-reference"},"UseEffect Reference"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," complete ",(0,o.kt)("a",{parentName:"li",href:"https://overreacted.io/a-complete-guide-to-useeffect"},"guide"),".")),(0,o.kt)("h3",{id:"uselayouteffect-hook"},"UseLayoutEffect Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect")," callback called ",(0,o.kt)("strong",{parentName:"li"},"synchronously"),"\n(fires synchronously after all DOM mutations),\nsubstitute for ",(0,o.kt)("inlineCode",{parentName:"li"},"componentDidMount")," lifecycle function:\n",(0,o.kt)("inlineCode",{parentName:"li"},"Update")," effect flags, ",(0,o.kt)("inlineCode",{parentName:"li"},"HasEffect | Layout")," hook flags."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," got invoked after ",(0,o.kt)("inlineCode",{parentName:"li"},"componentDidMount")," ",(0,o.kt)("strong",{parentName:"li"},"asynchronously"),":\n",(0,o.kt)("inlineCode",{parentName:"li"},"Update | Passive")," effect flags, ",(0,o.kt)("inlineCode",{parentName:"li"},"HasEffect | Passive")," hook flags."),(0,o.kt)("li",{parentName:"ul"},"If need to mutate the DOM or do need to perform DOM measurements,\n",(0,o.kt)("inlineCode",{parentName:"li"},"useLayoutEffect")," is better than ",(0,o.kt)("inlineCode",{parentName:"li"},"useEffect"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null\n): void {\n  return mountEffectImpl(\n    UpdateEffect, // Fiber Flags\n    HookLayout, // Hook Flags\n    create,\n    deps\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null\n): void {\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect, // Fiber Flags\n    HookPassive, // Hook Flags\n    create,\n    deps\n  );\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null\n): void {\n  return updateEffectImpl(PassiveEffect, HookPassive, create, deps);\n}\n")),(0,o.kt)("h3",{id:"useinsertioneffect-hook"},"UseInsertionEffect Hook"),(0,o.kt)("p",null,"Allows CSS-in-JS libraries to address performance\nissues of injecting styles in render.\nThis hook will run after the DOM is mutated,\nbut before layout effects read the new layout."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function useCSS(rule) {\n  if (!canUseDOM) {\n    collectedRulesSet.add(rule);\n  }\n\n  useInsertionEffect(() => {\n    if (!isInserted.has(rule)) {\n      isInserted.add(rule);\n      document.head.appendChild(getStyleForRule(rule));\n    }\n  });\n\n  return rule;\n}\n\nfunction Component() {\n  const className = useCSS(rule);\n  return <div className={className} />;\n}\n")),(0,o.kt)("h3",{id:"usedebugvalue-hook"},"UseDebugValue Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function App() {\n  const date = new Date();\n  useDebugValue(date, date => date.toISOString());\n}\n")),(0,o.kt)("h3",{id:"useimperativehandle-hook"},"UseImperativeHandle Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface MyInputHandles {\n  focus(): void;\n}\n\nconst MyInput: RefForwardingComponent<MyInputHandles, MyInputProps> = (\n  props,\n  ref\n) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    },\n  }));\n\n  return <input {...props} ref={inputRef} />;\n};\n\nexport default React.forwardRef(MyInput);\n")),(0,o.kt)("h3",{id:"usedeferredvalue-hook"},"UseDeferredValue Hook"),(0,o.kt)("p",null,"Debounce:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useDeferredValue } from 'react';\n\nfunction App() {\n  const [text, setText] = useState('hello');\n\n  // Debounced value.\n  const deferredText = useDeferredValue(text, { timeoutMs: 2000 });\n\n  return (\n    <div>\n      <input value={text} onChange={handleChange} />\n      <List text={deferredText} />\n    </div>\n  );\n}\n")),(0,o.kt)("h3",{id:"usetransition-hook"},"UseTransition Hook"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"startTransition")," \u56de\u8c03\u4e2d\u7684\u66f4\u65b0\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f",(0,o.kt)("strong",{parentName:"p"},"\u975e\u7d27\u6025\u5904\u7406"),",\n\u5982\u679c\u51fa\u73b0\u66f4\u7d27\u6025\u7684\u66f4\u65b0 (User Input), \u5219\u4e0a\u9762\u7684\u66f4\u65b0\u90fd\u4f1a\u88ab\u4e2d\u65ad,\n\u76f4\u5230\u6ca1\u6709\u5176\u4ed6\u7d27\u6025\u64cd\u4f5c\u4e4b\u540e\u624d\u4f1a\u53bb\u7ee7\u7eed\u6267\u884c\u66f4\u65b0."),(0,o.kt)("p",null,"Opt-in concurrent features (implementing debounce-like function):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useRef, useState, useTransition } from 'react';\nimport Spinner from './Spinner';\n\nfunction App() {\n  const input = useRef('');\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isPending, startTransition] = useTransition();\n\n  // Urgent: show what was typed.\n  setSearchInputValue(input);\n\n  // Debounced callback.\n  startTransition(() => {\n    setSearchQuery(input);\n  });\n\n  return <div>{isPending && <Spinner />}</div>;\n}\n")),(0,o.kt)("h3",{id:"useid-hook"},"UseId Hook"),(0,o.kt)("p",null,"Generating unique IDs on client and server."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'function Checkbox() {\n  const id = useId();\n\n  return (\n    <>\n      <label htmlFor={id}>Do you like React?</label>\n      <input type="checkbox" name="react" id={id} />\n    </>\n  );\n}\n')),(0,o.kt)("h3",{id:"usesyncexternalstore-hook"},"UseSyncExternalStore Hook"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Props"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"Context"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"useState"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"useReducer")," are internal states\nnot affected by concurrent features."),(0,o.kt)("p",null,"External stores affected by concurrent features including:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Global variables:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"document.body"),"."))),(0,o.kt)("li",{parentName:"ul"},"Date."),(0,o.kt)("li",{parentName:"ul"},"Redux store."),(0,o.kt)("li",{parentName:"ul"},"Zustand store.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useSyncExternalStore")," allows external stores to support concurrent reads\nby forcing updates to the store to be synchronous."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type UseSyncExternalStore = (\n  subscribe: (callback: Callback) => Unsubscribe,\n  getSnapshot: () => State\n) => State;\n")),(0,o.kt)("p",null,"Simple demo from ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=oPfSC5bQPR8"},"React Conf 2021"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useSyncExternalStore } from 'react';\n\n// We will also publish a backwards compatible shim\n// It will prefer the native API, when available\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nconst store = {\n  state: { count: 0 },\n  listeners: new Set(),\n  setState: fn => {\n    store.state = fn(store.state);\n    store.listeners.forEach(listener => listener());\n  },\n  subscribe: callback => {\n    store.listeners.add(callback);\n    return () => store.listeners.delete(callback);\n  },\n  getSnapshot: () => {\n    const snap = Object.freeze(store.state);\n    return snap;\n  },\n};\n\nfunction App() {\n  // Basic usage. getSnapshot must return a cached/memoized result\n  const state = useSyncExternalStore(store.subscribe, store.getSnapshot);\n\n  // Selecting a specific field using an inline getSnapshot\n  const selectedField = useSyncExternalStore(\n    store.subscribe,\n    () => store.getSnapshot().count\n  );\n\n  return (\n    <div>\n      {state.count}\n      {selectedField}\n    </div>\n  );\n}\n")),(0,o.kt)("p",null,"Migrate from ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," + ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," + ",(0,o.kt)("inlineCode",{parentName:"p"},"useRef")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"useSyncExternalStore"),"\nfor 3rd external stores libraries (e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"Redux"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { useCallback, useEffect, useState } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nconst createStore = initialState => {\n  let state = initialState;\n  const listeners = new Set();\n\n  const getState = () => state;\n  const setState = fn => {\n    state = fn(state);\n    listeners.forEach(listener => listener());\n  };\n  const subscribe = listener => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n\n  return {\n    getState,\n    setState,\n    subscribe,\n  };\n};\n\n// Explicitly process external store for React v17.\n// Sync external store state to React internal state\n// with `useState` and `store.subscribe`:\n// store.setState -> updater -> setState.\nconst useStoreLegacy = (store, selector) => {\n  const [state, setState] = useState(selector(store.getState()));\n\n  useEffect(() => {\n    const updater = () => setState(selector(store.getState()));\n    const unsubscribe = store.subscribe(updater);\n    updater();\n    return unsubscribe;\n  }, [store, selector]);\n\n  return state;\n};\n\n// Use `useSyncExternalStore` for React v18+.\nconst useStore = (store, selector) => {\n  return useSyncExternalStore(\n    store.subscribe,\n    useCallback(() => selector(store.getState()), [store, selector])\n  );\n};\n\nconst store = createStore({ count: 0, text: 'hello' });\n\nconst Counter = () => {\n  const count = useStore(\n    store,\n    useCallback(state => state.count, [])\n  );\n\n  const handleClick = () =>\n    store.setState(state => ({ ...state, count: state.count + 1 }));\n\n  return (\n    <div>\n      {count}\n      <button onClick={handleClick}>+1</button>\n    </div>\n  );\n};\n\nconst TextBox = () => {\n  const text = useStore(\n    store,\n    useCallback(state => state.text, [])\n  );\n\n  const handleChange = event => {\n    store.setState(state => ({ ...state, text: event.target.value }));\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n  );\n};\n\nconst App = () => (\n  <div>\n    <Counter />\n    <Counter />\n    <TextBox />\n    <TextBox />\n  </div>\n);\n\nReact.createRoot(document.querySelector('#root')).render(<App />);\n")),(0,o.kt)("h3",{id:"custom-hooks"},"Custom Hooks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/streamich/react-use"},"ReactUse Hooks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/streamich/libreact"},"LibReact")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/alibaba/hooks"},"Alibaba Hooks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/jaredpalmer/the-platform"},"Platform Hooks: Browser APIs turned into Hooks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/juliencrn/useHooks.ts"},"TypeScript Hooks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/perceived-dev/optimistic-state"},"Optimistic state hook")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/uidotdev/usehooks"},"Use Hooks Gallery")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nikgraf/react-hooks"},"React Hooks Gallery"))),(0,o.kt)("h3",{id:"custom-lifecycle-hooks"},"Custom LifeCycle Hooks"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"componentDidMount"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const useMount = fn => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fn(), []);\n};\n")),(0,o.kt)("p",null,"componentWillUnmount:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const useUnmount = fn => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fn, []);\n};\n")),(0,o.kt)("p",null,"componentDidUpdate:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const useUpdate = fn => {\n  const mounting = useRef(true);\n\n  useEffect(() => {\n    if (mounting.current) {\n      // first get called for componentDidMount lifecycle\n      // so skip it\n      mounting.current = false;\n    } else {\n      fn();\n    }\n  });\n};\n")),(0,o.kt)("p",null,"Force Update:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const useUpdate = () => useState(0)[1];\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useState } from 'react';\n\ninterface VoidFunction {\n  (): void;\n}\n\ninterface VoidFunctionCreator {\n  (): VoidFunction;\n}\n\nconst max = 9007199254740990; // Number.MAX_SAFE_INTEGER - 1;\n\nconst useForceUpdate: VoidFunctionCreator = (): VoidFunction => {\n  const [, setState] = useState(0);\n  const forceUpdate: VoidFunction = (): void => {\n    setState((state: number) => (state + 1) % max);\n  };\n  return forceUpdate;\n};\n\nexport default useForceUpdate;\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"isMounted"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const useIsMounted = () => {\n  const [isMount, setIsMount] = useState(false);\n\n  useEffect(() => {\n    if (!isMount) {\n      setIsMount(true);\n    }\n    return () => setIsMount(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isMount;\n};\n")),(0,o.kt)("h3",{id:"custom-async-data-hook"},"Custom Async Data Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState")," to store url and data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," to trigger async ",(0,o.kt)("inlineCode",{parentName:"li"},"fetch")," actions.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useState } from 'react';\n\nfunction useFriendStatus(friendID) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\n    };\n  });\n\n  return isOnline;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function FriendStatus(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n\nfunction FriendListItem(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  return (\n    <li style={{ color: isOnline ? 'green' : 'black' }}>{props.friend.name}</li>\n  );\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useDataApi = (initialUrl, initialData) => {\n  const [data, setData] = useState(initialData);\n  const [url, setUrl] = useState(initialUrl);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const result = await axios(url);\n\n      setData(result.data);\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  }, [url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const doGet = (event, url) => {\n    setUrl(url);\n    event.preventDefault();\n  };\n\n  return { data, isLoading, isError, doGet };\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function App() {\n  const [query, setQuery] = useState('redux');\n  const { data, isLoading, isError, doGet } = useDataApi(\n    'http://hn.algolia.com/api/v1/search?query=redux',\n    { hits: [] }\n  );\n\n  return (\n    <Fragment>\n      <form\n        onSubmit={event =>\n          doGet(event, `http://hn.algolia.com/api/v1/search?query=${query}`)\n        }\n      >\n        <input\n          type=\"text\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isError && <div>Something went wrong ...</div>}\n\n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n        <ul>\n          {data.hits.map(item => (\n            <li key={item.objectID}>\n              <a href={item.url}>{item.title}</a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Fragment>\n  );\n}\n\nexport default App;\n")),(0,o.kt)("p",null,"TypeScript fetch hook with caches:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useReducer, useRef } from 'react';\n\nimport type { AxiosRequestConfig } from 'axios';\nimport axios from 'axios';\n\n// State & hook output\ninterface State<T> {\n  status: 'init' | 'fetching' | 'error' | 'fetched';\n  data?: T;\n  error?: string;\n}\n\ntype Cache<T> = Record<string, T>;\n\n// discriminated union type\ntype Action<T> =\n  | { type: 'request' }\n  | { type: 'success'; payload: T }\n  | { type: 'failure'; payload: string };\n\nfunction useFetch<T = unknown>(\n  url?: string,\n  options?: AxiosRequestConfig\n): State<T> {\n  const cache = useRef<Cache<T>>({});\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    status: 'init',\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case 'request':\n        return { ...initialState, status: 'fetching' };\n      case 'success':\n        return { ...initialState, status: 'fetched', data: action.payload };\n      case 'failure':\n        return { ...initialState, status: 'error', error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    const fetchData = async () => {\n      dispatch({ type: 'request' });\n\n      if (cache.current[url]) {\n        dispatch({ type: 'success', payload: cache.current[url] });\n      } else {\n        try {\n          const response = await axios(url, options);\n          cache.current[url] = response.data;\n\n          if (cancelRequest.current) return;\n\n          dispatch({ type: 'success', payload: response.data });\n        } catch (error) {\n          if (cancelRequest.current) return;\n\n          dispatch({ type: 'failure', payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nexport default useFetch;\n")),(0,o.kt)("h3",{id:"custom-previous-hook"},"Custom Previous Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Counter() {\n  const [count, setCount] = useState(0);\n  const prevCount = usePrevious(count);\n  return (\n    <h1>\n      Now: {count}, before: {prevCount}\n    </h1>\n  );\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n")),(0,o.kt)("h3",{id:"custom-interval-hook"},"Custom Interval Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n\n  // Remember the latest callback if it changes.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    if (delay === null) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n")),(0,o.kt)("h3",{id:"custom-debounce-hook"},"Custom Debounce Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Hook\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value\n      // from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function App() {\n  // Usage\n  const [searchTerm, setSearchTerm] = useState('');\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(() => {}, [debouncedSearchTerm]);\n\n  return <div>App</div>;\n}\n")),(0,o.kt)("h3",{id:"custom-eventlistener-hook"},"Custom EventListener Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useCallback, useEffect } from 'react';\n\nexport default function useKeydown() {\n  const handleKeydown = useCallback(() => {\n    alert('key is pressed.');\n  }, []);\n\n  useMount(() => {\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  });\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect } from 'react';\n\nexport default function useEventListener({ event, handler }) {\n  useMount(() => {\n    document.addEventListener(event, handler);\n    return () => {\n      document.removeEventListener(event, handler);\n    };\n  });\n}\n")),(0,o.kt)("h3",{id:"custom-mouse-hook"},"Custom Mouse Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useRef, useState } from 'react';\n\nexport default function useLongPress(time = 500) {\n  const [action, setAction] = useState();\n\n  const timerRef = useRef();\n  const isLongPress = useRef();\n\n  function startPressTimer() {\n    isLongPress.current = false;\n    timerRef.current = setTimeout(() => {\n      isLongPress.current = true;\n      setAction('LongPress');\n    }, time);\n  }\n\n  function handleClick() {\n    if (isLongPress.current) {\n      return;\n    }\n\n    setAction('Click');\n  }\n\n  function handleMouseDown() {\n    startPressTimer();\n  }\n\n  function handleMouseUp() {\n    clearTimeout(timerRef.current);\n  }\n\n  function handleTouchStart() {\n    startPressTimer();\n  }\n\n  function handleTouchEnd() {\n    if (action === 'LongPress') {\n      return;\n    }\n\n    clearTimeout(timerRef.current);\n  }\n\n  return {\n    action,\n    handlers: {\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n    },\n  };\n}\n")),(0,o.kt)("h3",{id:"custom-observer-hook"},"Custom Observer Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { RefObject } from 'react';\nimport { useEffect, useState } from 'react';\n\ninterface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean;\n}\n\nfunction useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  {\n    threshold = 0,\n    root = null,\n    rootMargin = '0%',\n    freezeOnceVisible = false,\n  }: Args\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible;\n\n  // Update first entry\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry);\n  };\n\n  useEffect(() => {\n    const node = elementRef?.current; // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver;\n\n    if (!hasIOSupport || frozen || !node) return;\n\n    const observerParams = { threshold, root, rootMargin };\n    const observer = new IntersectionObserver(updateEntry, observerParams);\n\n    observer.observe(node);\n\n    return () => observer.disconnect();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef, threshold, root, rootMargin, frozen]);\n\n  return entry;\n}\n\nexport default useIntersectionObserver;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function useComponentSize() {\n  const [size, setSize] = React.useState({\n    height: 0,\n    width: 0,\n  });\n  const ref = React.useRef<any>();\n\n  const onResize = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const newHeight = ref.current.offsetHeight;\n    const newWidth = ref.current.offsetWidth;\n\n    if (newHeight !== size.height || newWidth !== size.width) {\n      setSize({\n        height: newHeight,\n        width: newWidth,\n      });\n    }\n  }, [size.height, size.width]);\n\n  React.useLayoutEffect(() => {\n    if (!ref || !ref.current) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver(onResize);\n    resizeObserver.observe(ref.current);\n\n    return () => resizeObserver.disconnect();\n  }, [ref, onResize]);\n\n  return {\n    ref,\n    ...size,\n  };\n}\n")),(0,o.kt)("h3",{id:"custom-locked-body-hook"},"Custom Locked Body Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useLayoutEffect, useState } from 'react';\n\ntype ReturnType = [boolean, (locked: boolean) => void];\n\nfunction useLockedBody(initialLocked = false): ReturnType {\n  const [locked, setLocked] = useState(initialLocked);\n\n  // Do the side effect before render\n  useLayoutEffect(() => {\n    // Key point 1\n    if (!locked) {\n      return;\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow;\n    const originalPaddingRight = document.body.style.paddingRight;\n\n    // Lock body scroll\n    document.body.style.overflow = 'hidden';\n\n    // Get the scrollBar width\n    const root = document.getElementById('___gatsby'); // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\n    }\n\n    // Key point 2\n    return () => {\n      document.body.style.overflow = originalOverflow;\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight;\n      }\n    };\n  }, [locked]);\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked]);\n\n  return [locked, setLocked];\n}\n\nexport default useLockedBody;\n")),(0,o.kt)("h3",{id:"custom-script-loading-hook"},"Custom Script Loading Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useState } from 'react';\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error';\nexport type ScriptElt = HTMLScriptElement | null;\n\nfunction useScript(src: string): Status {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle');\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle');\n        return;\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      // **Cache mechanism**\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`);\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script');\n        script.src = src;\n        script.async = true;\n        script.setAttribute('data-status', 'loading');\n        // Add script to document body\n        document.body.appendChild(script);\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          );\n        };\n\n        script.addEventListener('load', setAttributeFromEvent);\n        script.addEventListener('error', setAttributeFromEvent);\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status);\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error');\n      };\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent);\n      script.addEventListener('error', setStateFromEvent);\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent);\n          script.removeEventListener('error', setStateFromEvent);\n        }\n      };\n    },\n    [src] // Only re-run effect if script src changes\n  );\n\n  return status;\n}\n\nexport default useScript;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const cachedScripts = [];\n\nconst useScript = src => {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    loaded: false,\n    error: false,\n  });\n\n  useEffect(\n    () => {\n      // If cachedScripts array already includes src\n      // that means another instance ...\n      // ... of this hook already loaded this script, so no need to load again.\n      if (cachedScripts.includes(src)) {\n        setState({\n          loaded: true,\n          error: false,\n        });\n      } else {\n        cachedScripts.push(src);\n\n        // Create script\n        const script = document.createElement('script');\n        script.src = src;\n        script.async = true;\n\n        // Script event listener callbacks for load and error\n        const onScriptLoad = () => {\n          setState({\n            loaded: true,\n            error: false,\n          });\n        };\n\n        const onScriptError = () => {\n          // Remove from cachedScripts we can try loading again\n          const index = cachedScripts.indexOf(src);\n          if (index >= 0) cachedScripts.splice(index, 1);\n          script.remove();\n\n          setState({\n            loaded: true,\n            error: true,\n          });\n        };\n\n        script.addEventListener('load', onScriptLoad);\n        script.addEventListener('error', onScriptError);\n\n        // Add script to document body\n        document.body.appendChild(script);\n\n        // Remove event listeners on cleanup\n        return () => {\n          script.removeEventListener('load', onScriptLoad);\n          script.removeEventListener('error', onScriptError);\n        };\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  );\n\n  return [state.loaded, state.error];\n};\n")),(0,o.kt)("h3",{id:"custom-media-query-hook"},"Custom Media Query Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default function useMedia<T>(\n  queries: string[],\n  values: T[],\n  defaultValue: T\n) {\n  // Array containing a media query list for each query\n  const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n  const getValue = () => {\n    // Get index of first media query that matches\n    const index = mediaQueryLists.findIndex(mql => mql.matches);\n    return values?.[index] || defaultValue;\n  };\n\n  // State and setter for matched value\n  const [value, setValue] = useState<T>(getValue);\n\n  useMount(() => {\n    const handler = () => setValue(getValue);\n    mediaQueryLists.forEach(mql => mql.addListener(handler));\n    return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n  });\n\n  return value;\n}\n")),(0,o.kt)("h3",{id:"custom-cookie-hook"},"Custom Cookie Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// https://github.com/tylerwolff/useCookie.\nimport { useState } from 'react';\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction stringifyOptions(options) {\n  return Object.keys(options).reduce((acc, key) => {\n    if (key === 'days') {\n      // Skip `days`.\n      return acc;\n    } else {\n      if (options[key] === false) {\n        return acc;\n      } else if (options[key] === true) {\n        return `${acc}; ${key}`;\n      } else {\n        return `${acc}; ${key}=${options[key]}`;\n      }\n    }\n  }, '');\n}\n\nfunction getCookie(name, initialValue = '') {\n  return (\n    (isBrowser &&\n      document.cookie.split('; ').reduce((r, v) => {\n        const parts = v.split('=');\n        return parts[0] === name ? decodeURIComponent(parts[1]) : r;\n      }, '')) ||\n    initialValue\n  );\n}\n\nfunction setCookie(name, value, options) {\n  if (!isBrowser) return;\n\n  const optionsWithDefaults = {\n    days: 7,\n    path: '/',\n    ...options,\n  };\n\n  const expires = new Date(\n    Date.now() + optionsWithDefaults.days * 864e5\n  ).toUTCString();\n\n  document.cookie = `${name}=${encodeURIComponent(\n    value\n  )}; expires=${expires}${stringifyOptions(optionsWithDefaults)}`;\n}\n\nfunction useCookie(key, initialValue) {\n  const [item, setItem] = useState(() => {\n    return getCookie(key, initialValue);\n  });\n\n  const updateItem = (value, options) => {\n    setItem(value);\n    setCookie(key, value, options);\n  };\n\n  return [item, updateItem];\n}\n")),(0,o.kt)("h3",{id:"custom-localstorage-hook"},"Custom LocalStorage Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// https://www.robinwieruch.de/react-uselocalstorage-hook.\nconst useLocalStorage = (storageKey, fallbackState) => {\n  const [value, setValue] = React.useState(\n    JSON.parse(localStorage.getItem(storageKey)) || fallbackState\n  );\n\n  // Update logic.\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value));\n  }, [value, storageKey]);\n\n  return [value, setValue];\n};\n\nconst App = () => {\n  const [isOpen, setOpen] = useLocalStorage('is-open', false);\n\n  const handleToggle = () => {\n    setOpen(!isOpen);\n  };\n\n  return (\n    <div>\n      <button onClick={handleToggle}>Toggle</button>\n      {isOpen && <div>Content</div>}\n    </div>\n  );\n};\n")),(0,o.kt)("h3",{id:"custom-form-hook"},"Custom Form Hook"),(0,o.kt)("h4",{id:"usestate-only-form-hook"},"UseState Only Form Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState")," for form entire state and form control data."),(0,o.kt)("li",{parentName:"ul"},"Custom logic via hooks ",(0,o.kt)("inlineCode",{parentName:"li"},"params")," function.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useState } from 'react';\n\nconst useForm = callback => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    callback();\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n")),(0,o.kt)("h4",{id:"usestate-and-useref-form-hook"},"UseState and UseRef Form Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState")," for form entire state."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useRef")," for form control data."),(0,o.kt)("li",{parentName:"ul"},"Custom logic via hooks ",(0,o.kt)("inlineCode",{parentName:"li"},"params")," function.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export const useField = (\n  name,\n  form,\n  { defaultValue, validations = [], fieldsToValidateOnChange = [name] } = {}\n) => {\n  const [value, setValue] = useState(defaultValue);\n  const [errors, setErrors] = useState([]);\n  const [pristine, setPristine] = useState(true);\n  const [validating, setValidating] = useState(false);\n  const validateCounter = useRef(0);\n\n  const validate = async () => {\n    const validateIteration = ++validateCounter.current;\n    setValidating(true);\n    const formData = form.getFormData();\n    let errorMessages = await Promise.all(\n      validations.map(validation => validation(formData, name))\n    );\n    errorMessages = errorMessages.filter(Boolean);\n    if (validateIteration === validateCounter.current) {\n      // this is the most recent invocation\n      setErrors(errorMessages);\n      setValidating(false);\n    }\n    return errorMessages.length === 0;\n  };\n\n  useEffect(() => {\n    if (pristine) return; // Avoid validate on mount\n    form.validateFields(fieldsToValidateOnChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  const field = {\n    name,\n    value,\n    errors,\n    setErrors,\n    pristine,\n    onChange: e => {\n      if (pristine) {\n        setPristine(false);\n      }\n      setValue(e.target.value);\n    },\n    validate,\n    validating,\n  };\n  form.addField(field);\n  return field;\n};\n\nexport const useForm = ({ onSubmit }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const fields = useRef([]);\n\n  const validateFields = async fieldNames => {\n    let fieldsToValidate;\n    if (fieldNames instanceof Array) {\n      fieldsToValidate = fields.current.filter(field =>\n        fieldNames.includes(field.name)\n      );\n    } else {\n      // If fieldNames not provided, validate all fields.\n      fieldsToValidate = fields.current;\n    }\n    const fieldsValid = await Promise.all(\n      fieldsToValidate.map(field => field.validate())\n    );\n    return fieldsValid.every(Boolean);\n  };\n\n  const getFormData = () => {\n    return fields.current.reduce((formData, f) => {\n      formData[f.name] = f.value;\n      return formData;\n    }, {});\n  };\n\n  return {\n    onSubmit: async e => {\n      e.preventDefault();\n      setSubmitting(true);\n      setSubmitted(true); // User has attempted to submit form at least once\n      const formValid = await validateFields();\n      const returnVal = await onSubmit(getFormData(), formValid);\n      setSubmitting(false);\n      return returnVal;\n    },\n    isValid: () => fields.current.every(f => f.errors.length === 0),\n    addField: field => fields.current.push(field),\n    getFormData,\n    validateFields,\n    submitted,\n    submitting,\n  };\n};\n\nconst Field = ({\n  label,\n  name,\n  value,\n  onChange,\n  errors,\n  setErrors,\n  pristine,\n  validating,\n  validate,\n  formSubmitted,\n  ...other\n}) => {\n  const showErrors = (!pristine || formSubmitted) && !!errors.length;\n\n  return (\n    <FormControl className=\"field\" error={showErrors}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Input\n        id={name}\n        value={value}\n        onChange={onChange}\n        onBlur={() => !pristine && validate()}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            {validating && <LoadingIcon className=\"rotate\" />}\n          </InputAdornment>\n        }\n        {...other}\n      />\n      <FormHelperText component=\"div\">\n        {showErrors &&\n          errors.map(errorMsg => <div key={errorMsg}>{errorMsg}</div>)}\n      </FormHelperText>\n    </FormControl>\n  );\n};\n\nconst App = props => {\n  const form = useForm({\n    onSubmit: async (formData, valid) => {\n      if (!valid) return;\n      await timeout(2000); // Simulate network time\n      if (formData.username.length < 10) {\n        // Simulate 400 response from server.\n        usernameField.setErrors(['Make a longer username']);\n      } else {\n        // Simulate 201 response from server.\n        window.alert(\n          `form valid: ${valid}, form data: ${JSON.stringify(formData)}`\n        );\n      }\n    },\n  });\n\n  const usernameField = useField('username', form, {\n    defaultValue: '',\n    validations: [\n      async formData => {\n        await timeout(2000);\n        return formData.username.length < 6 && 'Username already exists';\n      },\n    ],\n    fieldsToValidateOnChange: [],\n  });\n  const passwordField = useField('password', form, {\n    defaultValue: '',\n    validations: [\n      formData =>\n        formData.password.length < 6 &&\n        'Password must be at least 6 characters',\n    ],\n    fieldsToValidateOnChange: ['password', 'confirmPassword'],\n  });\n  const confirmPasswordField = useField('confirmPassword', form, {\n    defaultValue: '',\n    validations: [\n      formData =>\n        formData.password !== formData.confirmPassword &&\n        'Passwords do not match',\n    ],\n    fieldsToValidateOnChange: ['password', 'confirmPassword'],\n  });\n\n  const requiredFields = [usernameField, passwordField, confirmPasswordField];\n\n  return (\n    <div id=\"form-container\">\n      <form onSubmit={form.onSubmit}>\n        <Field\n          {...usernameField}\n          formSubmitted={form.submitted}\n          label=\"Username\"\n        />\n        <Field\n          {...passwordField}\n          formSubmitted={form.submitted}\n          label=\"Password\"\n          type=\"password\"\n        />\n        <Field\n          {...confirmPasswordField}\n          formSubmitted={form.submitted}\n          label=\"Confirm Password\"\n          type=\"password\"\n        />\n        <Button\n          type=\"submit\"\n          disabled={\n            !form.isValid() ||\n            form.submitting ||\n            requiredFields.some(f => f.pristine)\n          }\n        >\n          {form.submitting ? 'Submitting' : 'Submit'}\n        </Button>\n      </form>\n    </div>\n  );\n};\n")),(0,o.kt)("h4",{id:"usestate-and-useref-with-dom-refs-form-hook"},"UseState and UseRef with DOM Refs Form Hook"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState")," for form entire state."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useRef")," for form control data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Function Refs")," bind to native ",(0,o.kt)("inlineCode",{parentName:"li"},"<input />")," elements."),(0,o.kt)("li",{parentName:"ul"},"Custom logic via hooks ",(0,o.kt)("inlineCode",{parentName:"li"},"return")," function.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// https://github.com/react-hook-form/react-hook-form/blob/v7.29.0/src/logic/createFormControl.ts\nconst createFormControl = () => ({\n  register: (name, options = {}) => {\n    // Register input filed.\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f))\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      // Bind to Form Input Element.\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [...refs.filter(live), fieldRef],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n      value,\n      min,\n      max,\n      required,\n      disabled,\n      ...fieldPropValues,\n    };\n  },\n  // Higher order function: onSubmit (Use Code) => onSubmit (Bind to Form Element).\n  handleSubmit: onSubmit => {\n    return (event: SubmitEvent) => {\n      onSubmit(this._getFormData());\n    };\n  },\n});\n\nconst useForm = () => {\n  // Detailed logic handlers: DOM refs, field getter/setter, submit handler.\n  const formControl = useRef<FormControl>(createFormControl());\n  // Entire form state: valid, errors etc.\n  const formState = useState<FormState>();\n\n  return {\n    ...formControl.current,\n  };\n};\n\nconst App = () => {\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register('name')} type=\"text\" />\n      <input {...register('password')} type=\"password\" />\n    </form>\n  );\n};\n")),(0,o.kt)("h3",{id:"custom-url-params-hook"},"Custom URL Params Hook"),(0,o.kt)("p",null,"Storing state in the URL:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default function useStateParams<T>(\n  initialState: T,\n  paramsName: string,\n  serialize: (state: T) => string,\n  deserialize: (state: string) => T\n): [T, (state: T) => void] {\n  const history = useHistory();\n  const search = new URLSearchParams(history.location.search);\n\n  const existingValue = search.get(paramsName);\n  const [state, setState] = useState<T>(\n    existingValue ? deserialize(existingValue) : initialState\n  );\n\n  useEffect(() => {\n    // Updates state when user navigates backwards or forwards in browser history\n    if (existingValue && deserialize(existingValue) !== state) {\n      setState(deserialize(existingValue));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [existingValue]);\n\n  const onChange = (s: T) => {\n    setState(s);\n    const searchParams = new URLSearchParams(history.location.search);\n    searchParams.set(paramsName, serialize(s));\n    const pathname = history.location.pathname;\n    history.push({ pathname, search: searchParams.toString() });\n  };\n\n  return [state, onChange];\n}\n")),(0,o.kt)("h3",{id:"custom-router-hook"},"Custom Router Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useContext, useEffect } from 'react';\nimport { __RouterContext } from 'react-router';\nimport useForceUpdate from 'use-force-update';\n\nconst useReactRouter = () => {\n  const forceUpdate = useForceUpdate();\n  const routerContext = useContext(__RouterContext);\n\n  useEffect(\n    () => routerContext.history.listen(forceUpdate),\n    [forceUpdate, routerContext]\n  );\n\n  return routerContext;\n};\n")),(0,o.kt)("h3",{id:"custom-history-hook"},"Custom History Hook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useCallback, useReducer } from 'react';\n\n// Initial state that we pass into useReducer\nconst initialState = {\n  // Array of previous state values updated each time we push a new state\n  past: [],\n  // Current state value\n  present: null,\n  // Will contain \"future\" state values if we undo (so we can redo)\n  future: [],\n};\n\n// Our reducer function to handle state changes based on action\nconst reducer = (state, action) => {\n  const { past, present, future } = state;\n\n  switch (action.type) {\n    case 'UNDO': {\n      const previous = past[past.length - 1];\n      const newPast = past.slice(0, past.length - 1);\n\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future],\n      };\n    }\n    case 'REDO': {\n      const next = future[0];\n      const newFuture = future.slice(1);\n\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture,\n      };\n    }\n    case 'SET': {\n      const { newPresent } = action;\n\n      if (newPresent === present) {\n        return state;\n      }\n\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: [],\n      };\n    }\n    case 'CLEAR': {\n      const { initialPresent } = action;\n\n      return {\n        ...initialState,\n        present: initialPresent,\n      };\n    }\n    default:\n      throw new Error('Unsupported action type!');\n  }\n};\n\n// Hook\nconst useHistory = initialPresent => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    present: initialPresent,\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n  // Setup our callback functions\n  // We memoize with useCallback to prevent unnecessary re-renders\n\n  const undo = useCallback(() => {\n    if (canUndo) {\n      dispatch({ type: 'UNDO' });\n    }\n  }, [dispatch, canUndo]);\n\n  const redo = useCallback(() => {\n    if (canRedo) {\n      dispatch({ type: 'REDO' });\n    }\n  }, [dispatch, canRedo]);\n\n  const set = useCallback(\n    newPresent => dispatch({ type: 'SET', newPresent }),\n    [dispatch]\n  );\n\n  const clear = useCallback(\n    () => dispatch({ type: 'CLEAR', initialPresent }),\n    [dispatch, initialPresent]\n  );\n\n  // If needed we could also return past and future state\n  return { state: state.present, set, undo, redo, clear, canUndo, canRedo };\n};\n")),(0,o.kt)("h3",{id:"custom-store-hook"},"Custom Store Hook"),(0,o.kt)("p",null,"Simple implementation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useState } from 'react';\n\nexport const store = {\n  state: {},\n  setState(value) {\n    this.state = value;\n    this.setters.forEach(setter => setter(this.state));\n  },\n  setters: [],\n};\n\n// Bind the setState function to the store object so\n// we don't lose context when calling it elsewhere\nstore.setState = store.setState.bind(store);\n\n// this is the custom hook we'll call on components.\nexport default function useStore() {\n  const [state, set] = useState(store.state);\n\n  if (!store.setters.includes(set)) {\n    store.setters.push(set);\n  }\n\n  return [state, store.setState];\n}\n")),(0,o.kt)("p",null,"Complex ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/timc1/kbar"},"implementation"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { deepEqual } from 'fast-equals';\nimport * as React from 'react';\nimport type {\n  Action,\n  ActionId,\n  ActionTree,\n  KBarOptions,\n  KBarProviderProps,\n  KBarState,\n} from './types';\nimport { VisualState } from './types';\n\ntype useStoreProps = KBarProviderProps;\n\nexport default function useStore(props: useStoreProps) {\n  if (!props.actions) {\n    throw new Error(\n      'You must define a list of `actions` when calling KBarProvider'\n    );\n  }\n\n  const [state, setState] = React.useState<KBarState>({\n    searchQuery: '',\n    currentRootActionId: null,\n    visualState: VisualState.hidden,\n    actions: props.actions.reduce((acc, current) => {\n      acc[current.id] = current;\n      return acc;\n    }, {}),\n  });\n\n  const currentState = React.useRef(state);\n  currentState.current = state;\n\n  const getState = React.useCallback(() => currentState.current, []);\n  const publisher = React.useMemo(() => new Publisher(getState), [getState]);\n\n  React.useEffect(() => {\n    currentState.current = state;\n    publisher.notify();\n  }, [publisher, state]);\n\n  const optionsRef = React.useRef((props.options || {}) as KBarOptions);\n\n  const registerActions = React.useCallback((actions: Action[]) => {\n    const actionsByKey: ActionTree = actions.reduce((acc, current) => {\n      acc[current.id] = current;\n      return acc;\n    }, {});\n\n    setState(state => ({\n      ...state,\n      actions: {\n        ...actionsByKey,\n        ...state.actions,\n      },\n    }));\n\n    return function unregister() {\n      setState(state => {\n        const actions = state.actions;\n        const removeActionIds = Object.keys(actionsByKey);\n        removeActionIds.forEach(actionId => delete actions[actionId]);\n        return {\n          ...state,\n          actions: {\n            ...state.actions,\n            ...actions,\n          },\n        };\n      });\n    };\n  }, []);\n\n  return React.useMemo(() => {\n    return {\n      getState,\n      query: {\n        setCurrentRootAction: (actionId: ActionId | null | undefined) => {\n          setState(state => ({\n            ...state,\n            currentRootActionId: actionId,\n          }));\n        },\n        setVisualState: (\n          cb: ((vs: VisualState) => VisualState) | VisualState\n        ) => {\n          setState(state => ({\n            ...state,\n            visualState: typeof cb === 'function' ? cb(state.visualState) : cb,\n          }));\n        },\n        setSearch: (searchQuery: string) =>\n          setState(state => ({\n            ...state,\n            searchQuery,\n          })),\n        registerActions,\n      },\n      options: optionsRef.current,\n      subscribe: (\n        collector: <C>(state: KBarState) => C,\n        cb: <C>(collected: C) => void\n      ) => publisher.subscribe(collector, cb),\n    };\n  }, [getState, publisher, registerActions]);\n}\n\nclass Publisher {\n  getState;\n  subscribers: Subscriber[] = [];\n\n  constructor(getState: () => KBarState) {\n    this.getState = getState;\n  }\n\n  subscribe<C>(\n    collector: (state: KBarState) => C,\n    onChange: (collected: C) => void\n  ) {\n    const subscriber = new Subscriber(\n      () => collector(this.getState()),\n      onChange\n    );\n    this.subscribers.push(subscriber);\n    return this.unsubscribe.bind(this, subscriber);\n  }\n\n  unsubscribe(subscriber: Subscriber) {\n    if (this.subscribers.length) {\n      const index = this.subscribers.indexOf(subscriber);\n      if (index > -1) {\n        return this.subscribers.splice(index, 1);\n      }\n    }\n  }\n\n  notify() {\n    this.subscribers.forEach(subscriber => subscriber.collect());\n  }\n}\n\nclass Subscriber {\n  collected: any; // Previous state cache.\n  collector;\n  onChange;\n\n  constructor(collector: () => any, onChange: (collected: any) => any) {\n    this.collector = collector;\n    this.onChange = onChange;\n  }\n\n  collect() {\n    try {\n      // Grab latest state.\n      const recollect = this.collector();\n      if (!deepEqual(recollect, this.collected)) {\n        this.collected = recollect;\n        if (this.onChange) {\n          this.onChange(this.collected);\n        }\n      }\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n}\n")),(0,o.kt)("h3",{id:"custom-recoil-hook"},"Custom Recoil Hook"),(0,o.kt)("p",null,"Recoil ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bennetthardwick/recoil-clone"},"minimal implementation"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Atom"),": collect children callbacks as ",(0,o.kt)("inlineCode",{parentName:"li"},"listeners"),", notify children when value changed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Selector"),": collect parent ",(0,o.kt)("inlineCode",{parentName:"li"},"Atoms")," as ",(0,o.kt)("inlineCode",{parentName:"li"},"deps"),", update value when parent Atoms notified.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Disconnector {\n  disconnect: () => void;\n}\n\nclass Stateful<T> {\n  private listeners = new Set<(value: T) => void>();\n\n  constructor(private value: T) {}\n\n  protected _update(value: T) {\n    this.value = value;\n    this.notify();\n  }\n\n  snapshot(): T {\n    return this.value;\n  }\n\n  notify() {\n    for (const listener of this.listeners) {\n      listener(this.snapshot());\n    }\n  }\n\n  subscribe(callback: (value: T) => void): Disconnector {\n    this.listeners.add(callback);\n    return {\n      disconnect: () => {\n        this.listeners.delete(callback);\n      },\n    };\n  }\n}\n\nclass Atom<T> extends Stateful<T> {\n  update(value: T) {\n    super._update(value);\n  }\n}\n\ninterface GeneratorContext {\n  get: <V>(dependency: Stateful<V>) => V;\n}\n\ntype SelectorGenerator<T> = (context: GeneratorContext) => T;\n\nexport class Selector<T> extends Stateful<T> {\n  private registeredDeps = new Set<Stateful>();\n\n  constructor(private readonly generate: SelectorGenerator<T>) {\n    super(undefined as any);\n    const context = { get: dep => this.getDep(dep) };\n    this.value = generate(context);\n  }\n\n  private getDep<V>(dep: Stateful<V>): V {\n    if (!this.registeredDeps.has(dep)) {\n      // Update when parent Atom changed.\n      dep.subscribe(() => this.updateSelector());\n      this.registeredDeps.add(dep);\n    }\n\n    return dep.snapshot();\n  }\n\n  private updateSelector() {\n    const context = { get: dep => this.getDep(dep) };\n    this.update(this.generate(context));\n  }\n}\n\nexport function atom<V>(value: { key: string; default: V }): Atom<V> {\n  return new Atom(value.default);\n}\n\nexport function selector<V>(value: {\n  key: string;\n  get: SelectorGenerator<V>;\n}): Selector<V> {\n  return new Selector(value.get);\n}\n\n// This hook will re-render whenever supplied `Stateful` value changes.\n// It can be used with `Selector` or `Atom`.\nexport function useCoiledValue<T>(value: Stateful<T>): T {\n  const [, updateState] = useState({});\n\n  // Force update when value changed.\n  useEffect(() => {\n    const { disconnect } = value.subscribe(() => updateState({}));\n    return () => disconnect();\n  }, [value]);\n\n  return value.snapshot();\n}\n\n// Similar to above method, but it also lets set state.\n// It only can be used with `Atom`.\nexport function useCoiledState<T>(atom: Atom<T>): [T, (value: T) => void] {\n  const value = useCoiledValue(atom);\n  return [value, useCallback(value => atom.update(value), [atom])];\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function generate(context) {\n  // Register NameAtom as a dependency and get its snapshot value:\n  // get(nameAtom) => selector.getDep(nameAtom)\n  // => nameAtom.subscribe(() => selector.updateSelector) + selector.deps.add(nameAtom)\n  const name = context.get(nameAtom);\n  // Do the same for AgeAtom\n  const age = context.get(ageAtom);\n\n  // Return new value using parent atoms.\n  // E.g. 'Bob is 20 years old'.\n  return `${name} is ${age} years old.`;\n}\n")),(0,o.kt)("h3",{id:"custom-atom-hook"},"Custom Atom Hook"),(0,o.kt)("p",null,"Simple global store based on:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Subscribe pattern."),(0,o.kt)("li",{parentName:"ul"},"UseState hook.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Dispatch, MutableRefObject, SetStateAction } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst store = new Map<string, any>();\n\nclass Atom<T> {\n  key = nanoid();\n  subscribers = new Map<\n    MutableRefObject<boolean>,\n    Dispatch<SetStateAction<T>>\n  >();\n\n  private _current: T;\n\n  constructor(initialState: T) {\n    store.set(this.key, initialState);\n    this._current = initialState;\n  }\n\n  subscribe(\n    ref: MutableRefObject<boolean>,\n    action: Dispatch<SetStateAction<T>>\n  ) {\n    this.subscribers.set(ref, action);\n  }\n\n  unsubscribe(ref: MutableRefObject<boolean>) {\n    this.subscribers.delete(ref);\n  }\n\n  setState(nextState: T) {\n    this._current = nextState;\n    store.set(this.key, nextState);\n    this.subscribers.forEach(action => action(nextState));\n  }\n\n  get current() {\n    return this._current;\n  }\n}\n\nexport const atom = <T>(initialState: T) => new Atom(initialState);\n\nexport const useAtomValue = <T>(atom: Atom<T>) => {\n  const ref = useRef(false);\n  const [state, setState] = useState(atom.current);\n\n  if (ref.current === false) {\n    ref.current = true;\n    atom.subscribe(ref, setState);\n  }\n  useMount(() => () => atom.unsubscribe(ref));\n  return state;\n};\n\nexport const setAtomValue =\n  <T>(atom: Atom<T>) =>\n  (nextState: T) =>\n    atom.setState(nextState);\n")),(0,o.kt)("h3",{id:"hooks-best-practice"},"Hooks Best Practice"),(0,o.kt)("p",null,"\u5982\u679c\u5c06\u4e00\u4e2a\u51fd\u6570\u4efb\u610f\u5730\u5c06\u5176\u653e\u5728 useEffect Deps List \u4e2d\n\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u590d\u65e0\u610f\u4e49\u7684 useEffect \u6267\u884c\n(\u56e0\u4e3a\u6bcf\u6b21 render \u671f\u95f4\u7684\u6b64\u51fd\u6570\u90fd\u4f1a\u91cd\u65b0\u5b9a\u4e49).\n\u6709\u4e24\u4e2a\u89e3\u51b3\u529e\u6cd5:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u88ab\u591a\u6b21\u590d\u7528 Utils \u51fd\u6570 (\u4e14\u4e0d\u4f9d\u8d56\u7ec4\u4ef6\u7684\u4efb\u4f55\u503c),\n\u5e94\u8be5\u63d0\u5230\u7ec4\u4ef6\u5916\u9762\u7684\u516c\u5171\u533a\u57df\u53bb\u5b9a\u4e49."),(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u53ea\u88ab\u7279\u5b9a Effect Hook \u8c03\u7528\u7684 Utils \u51fd\u6570,\n\u53ef\u4ee5\u653e\u5230 useEffect \u5185\u90e8\u5b9a\u4e49."),(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5176\u4ed6\u9700\u8981\u5728\u7ec4\u4ef6\u5185(\u6216\u81ea\u5b9a\u4e49 Hooks \u5185)\u5b9a\u4e49\u7684\u51fd\u6570,\n\u53ef\u4f7f\u7528 useCallback \u5305\u88f9\u51fd\u6570, \u5e76\u8bbe\u7f6e\u6b63\u786e\u7684 Deps List,\n\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11 render \u65f6\u91cd\u65b0\u5b9a\u4e49\u6b64\u51fd\u6570.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// \u2705 Not affected by the data flow\nfunction getFetchUrl(query) {\n  return `https://hn.algolia.com/api/v1/search?query=${query}`;\n}\n\nfunction SearchResults() {\n  useEffect(() => {\n    const url = getFetchUrl('react');\n    // ... Fetch data and do something ...\n  }, []); // \u2705 Deps are OK\n\n  useEffect(() => {\n    const url = getFetchUrl('redux');\n    // ... Fetch data and do something ...\n  }, []); // \u2705 Deps are OK\n\n  // ...\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Don't forget to cleanup side effects (return function in useEffect)"),(0,o.kt)("li",{parentName:"ul"},"Set correct deps list for useEffect:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"avoid object deps (should use object property)."),(0,o.kt)("li",{parentName:"ul"},"enough deps list to avoid infinite loop rendering pitfall."),(0,o.kt)("li",{parentName:"ul"},"enough deps list to avoid stale closure."))),(0,o.kt)("li",{parentName:"ul"},"setState(state => state + 1) is better (avoid outdated state)."),(0,o.kt)("li",{parentName:"ul"},"Change ",(0,o.kt)("inlineCode",{parentName:"li"},"useState")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"useRef")," when values not for rendering."),(0,o.kt)("li",{parentName:"ul"},"Don't put any ",(0,o.kt)("inlineCode",{parentName:"li"},"if")," statement before hooks function."),(0,o.kt)("li",{parentName:"ul"},"Only call Hooks at the top level (don't inside loops, conditions or nested functions)."),(0,o.kt)("li",{parentName:"ul"},"Only call Hooks from React function components.")),(0,o.kt)("h2",{id:"react-style-guide"},"React Style Guide"),(0,o.kt)("h3",{id:"naming-style"},"Naming Style"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use PascalCase for ",(0,o.kt)("inlineCode",{parentName:"li"},".jsx")," and component constructor"),(0,o.kt)("li",{parentName:"ul"},"use camelCase for component instance reference"),(0,o.kt)("li",{parentName:"ul"},"use camelCase for props name")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// bad\nimport reservationCard from './ReservationCard';\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// good\nimport ReservationCard from './ReservationCard';\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// bad\nconst ReservationItem = <ReservationCard />;\n\n// good\nconst reservationItem = <ReservationCard />;\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Setting displayName for HOC:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// bad\nfunction withFoo(WrappedComponent) {\n  return function WithFoo(props) {\n    return <WrappedComponent {...props} foo />;\n  };\n}\n\n// good\nfunction withFoo(WrappedComponent) {\n  function WithFoo(props) {\n    return <WrappedComponent {...props} foo />;\n  }\n\n  const wrappedComponentName =\n    WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n  WithFoo.displayName = `withFoo(${wrappedComponentName})`;\n  return WithFoo;\n}\n")),(0,o.kt)("h3",{id:"props-style"},"Props Style"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use ",(0,o.kt)("inlineCode",{parentName:"li"},"prop")," not ",(0,o.kt)("inlineCode",{parentName:"li"},"prop={true}")),(0,o.kt)("li",{parentName:"ul"},"filter out unnecessary props")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// bad\nclass Component {\n  render() {\n    const { irrelevantProp, ...relevantProps } = this.props;\n    return <WrappedComponent {...this.props} />;\n  }\n}\n\n// good\nclass Component {\n  render() {\n    const { irrelevantProp, ...relevantProps } = this.props;\n    return <WrappedComponent {...relevantProps} />;\n  }\n}\n")),(0,o.kt)("h3",{id:"refs-style"},"Refs Style"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use callback refs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// bad\n// deprecated\nconst Component = <Foo ref="myRef" />;\n\n// good\nconst Component = (\n  <Foo\n    ref={ref => {\n      this.myRef = ref;\n    }}\n  />\n);\n')),(0,o.kt)("h3",{id:"alignment-style"},"Alignment Style"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// good\nconst Component = <Foo superLongParam="bar" anotherSuperLongParam="baz" />;\n\n// if props fit in one line then keep it on the same line\nconst Component = <Foo bar="bar" />;\n\n// children get indented normally\nconst Component = (\n  <Foo superLongParam="bar" anotherSuperLongParam="baz">\n    <Bar />\n  </Foo>\n);\n\n// good\nconst Component = <div>{showButton && <Button />}</div>;\n')),(0,o.kt)("h3",{id:"quotes-style"},"Quotes Style"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},'"')," for JSX attributes, use ",(0,o.kt)("inlineCode",{parentName:"li"},"'")," for all other JS:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// bad\n// <Foo bar='bar' />\n\n// good\nconst App = <Foo bar=\"bar\" />;\n\n// bad\n// <Foo style={{ left: \"20px\" }} />\n\n// good\nconst App = <Foo style={{ left: '20px' }} />;\n")),(0,o.kt)("h3",{id:"spacing-style"},"Spacing Style"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A single space in self-closing tag."),(0,o.kt)("li",{parentName:"ul"},"No pad JSX curly spaces>.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// bad\n// <Foo/>\n\n// very bad\n// <Foo                 />\n\n// good\nconst App = <Foo />;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// bad\n// <Foo bar={ baz } />\n\n// good\nconst App = <Foo bar={baz} />;\n")),(0,o.kt)("h3",{id:"ordering-of-class-component"},"Ordering of Class Component"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"optional static methods"),(0,o.kt)("li",{parentName:"ol"},"constructor"),(0,o.kt)("li",{parentName:"ol"},"getChildContext"),(0,o.kt)("li",{parentName:"ol"},"getDerivedStateFromProps"),(0,o.kt)("li",{parentName:"ol"},"componentDidMount"),(0,o.kt)("li",{parentName:"ol"},"getDerivedStateFromProps"),(0,o.kt)("li",{parentName:"ol"},"shouldComponentUpdate"),(0,o.kt)("li",{parentName:"ol"},"getSnapshotBeforeUpdate"),(0,o.kt)("li",{parentName:"ol"},"componentDidUpdate"),(0,o.kt)("li",{parentName:"ol"},"componentWillUnmount"),(0,o.kt)("li",{parentName:"ol"},"clickHandlers or eventHandlers like onClickSubmit() or onChangeDescription()"),(0,o.kt)("li",{parentName:"ol"},"getter methods for render like getSelectReason() or getFooterContent()"),(0,o.kt)("li",{parentName:"ol"},"optional render methods like renderNavigation() or renderProfilePicture()"),(0,o.kt)("li",{parentName:"ol"},"render")),(0,o.kt)("h3",{id:"project-structure-best-practice"},"Project Structure Best Practice"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"components"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6a21\u5757\u5316\u9694\u79bb, \u6700\u5c0f\u4f9d\u8d56, \u6d4b\u8bd5\u53cb\u597d."),(0,o.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u7ec4\u4ef6\u6587\u4ef6\u5939\u5305\u542b\u5927\u5199\u5e76\u4e0e\u6587\u4ef6\u540c\u540d\u7684\u7ec4\u4ef6,\n\u4e14\u5176\u4e2d\u9664\u4e86\u6ce8\u5165\u670d\u52a1\u64cd\u4f5c\u5916, render return \u4e4b\u524d, \u65e0\u4efb\u4f55\u4ee3\u7801."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"use"),"\u5f00\u5934\u5e76\u4e0e\u6587\u4ef6\u5939\u540c\u540d\u7684\u670d\u52a1."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"use"),"\u5f00\u5934, ",(0,o.kt)("inlineCode",{parentName:"li"},"Service"),"\u7ed3\u5c3e, \u5e76\u4e0e\u6587\u4ef6\u5939\u540c\u540d\u7684\u53ef\u6ce8\u5165\u670d\u52a1."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"services"),": \u670d\u52a1\u4e2d\u53ea\u5b58\u5728\u57fa\u7840 Hooks, \u81ea\u5b9a\u4e49 Hooks, \u7b2c\u4e09\u65b9 Hooks,\n\u9759\u6001\u6570\u636e, \u5de5\u5177\u51fd\u6570, \u5de5\u5177\u7c7b.")),(0,o.kt)("h3",{id:"react-style-best-practice"},"React Style Best Practice"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u7ec4\u4ef6\u7ec6\u5206\u5316."),(0,o.kt)("li",{parentName:"ul"},"\u7ec4\u4ef6:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u53ea\u4f20\u5165\u5fc5\u8981\u7684 props."),(0,o.kt)("li",{parentName:"ul"},"\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"Immutable.js")," \u6216\u8005 ",(0,o.kt)("inlineCode",{parentName:"li"},"React.addons.update")," \u5b9e\u73b0\u4e0d\u53ef\u53d8\u6570\u636e\u7ed3\u6784."),(0,o.kt)("li",{parentName:"ul"},"\u7ed3\u5408 ",(0,o.kt)("inlineCode",{parentName:"li"},"React.addons.PureRenderMixin")," \u6765\u51cf\u5c11 reRender."))),(0,o.kt)("li",{parentName:"ul"},"\u5728 ",(0,o.kt)("inlineCode",{parentName:"li"},"shouldComponentUpdate")," \u4e2d\u4f18\u5316\u7ec4\u4ef6\u51cf\u5c11 reRender."),(0,o.kt)("li",{parentName:"ul"},"\u4f7f\u7528 Context API."),(0,o.kt)("li",{parentName:"ul"},"\u5c11\u505a DOM \u64cd\u4f5c\uff0c\u59cb\u7ec8\u8ba9 UI \u80fd\u591f\u57fa\u4e8e state \u8fd8\u539f."),(0,o.kt)("li",{parentName:"ul"},"\u5728 store \u548c action \u4e2d\u4e0d DOM \u64cd\u4f5c\u6216\u8005\u8bbf\u95ee ",(0,o.kt)("inlineCode",{parentName:"li"},"window.\u5c5e\u6027"),"\uff0c\u53ea\u4e0e\u6570\u636e\u6253\u4ea4\u9053."),(0,o.kt)("li",{parentName:"ul"},"\u63a8\u8350\u4f7f\u7528 ES6."),(0,o.kt)("li",{parentName:"ul"},"npm \u7684 debug \u5305, log \u7ec4\u4ef6\u6e32\u67d3\u7684\u6bcf\u4e2a\u6b65\u9aa4\u548c\u52a8\u4f5c."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/diegohaz/singel"},"Single Element Pattern"),".")),(0,o.kt)("h2",{id:"modern-react"},"Modern React"),(0,o.kt)("h3",{id:"es6-binding-for-this"},"ES6 Binding for This"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class Component extends React.Component {\n  state = {};\n  handleES6 = event => {};\n\n  constructor(props) {\n    super(props);\n    this.handleLegacy = this.handleLegacy.bind(this);\n  }\n\n  handleLegacy(event) {\n    this.setState(prev => ({ ...prev }));\n  }\n\n  render() {\n    return <div>Component</div>;\n  }\n}\n")),(0,o.kt)("h3",{id:"context-api"},"Context API"),(0,o.kt)("p",null,"Context API provide a Dependency Injection style method,\nto provide values to children components."),(0,o.kt)("p",null,"Context \u4e2d\u53ea\u5b9a\u4e49\u88ab\u5927\u591a\u6570\u7ec4\u4ef6\u6240\u5171\u7528\u7684\u5c5e\u6027\n(avoid ",(0,o.kt)("strong",{parentName:"p"},"Prop Drilling"),"):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Global state."),(0,o.kt)("li",{parentName:"ul"},"Theme."),(0,o.kt)("li",{parentName:"ul"},"Preferred language."),(0,o.kt)("li",{parentName:"ul"},"Application configuration."),(0,o.kt)("li",{parentName:"ul"},"Authenticated user name."),(0,o.kt)("li",{parentName:"ul"},"User settings."),(0,o.kt)("li",{parentName:"ul"},"Collection of services.")),(0,o.kt)("p",null,"\u9891\u7e41\u7684 Context value \u66f4\u6539\u4f1a\u5bfc\u81f4\u4f9d\u8d56 value \u7684\u7ec4\u4ef6\n\u7a7f\u900f ",(0,o.kt)("inlineCode",{parentName:"p"},"shouldComponentUpdate"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"React.memo")," \u8fdb\u884c ",(0,o.kt)("inlineCode",{parentName:"p"},"forceUpdate"),",\n\u589e\u52a0 ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," \u6b21\u6570, \u4ece\u800c\u5bfc\u81f4\u6027\u80fd\u95ee\u9898."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { createContext, useContext, useMemo, useState } from 'react';\nimport { fakeAuth } from './app/services/auth';\n\nconst authContext = createContext();\n\nfunction AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  const signIn = useCallback(cb => {\n    return fakeAuth.signIn(() => {\n      setUser('user');\n      cb();\n    });\n  }, []);\n\n  const signOut = useCallback(cb => {\n    return fakeAuth.signOut(() => {\n      setUser(null);\n      cb();\n    });\n  }, []);\n\n  const auth = useMemo(() => {\n    return {\n      user,\n      signIn,\n      signOut,\n    };\n  }, [user, signIn, signOut]);\n\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nexport { AuthProvider, useAuth };\n")),(0,o.kt)("h4",{id:"ref-with-context"},"Ref with Context"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// Context.js\nimport React, { Component, createContext } from 'react';\n\n// React team \u2014 thanks for Context API \ud83d\udc4d\nconst context = createContext();\nconst { Provider: ContextProvider, Consumer } = context;\n\nclass Provider extends Component {\n  // refs\n  // usage: this.textareaRef.current\n  textareaRef = React.createRef();\n\n  // input handler\n  onInput = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <ContextProvider\n        value={{\n          textareaRef: this.textareaRef,\n          onInput: this.onInput,\n        }}\n      >\n        {this.props.children}\n      </ContextProvider>\n    );\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// TextArea.jsx\nimport React from \'react\';\nimport { Consumer } from \'./Context\';\n\nconst TextArea = () => (\n  <Consumer>\n    {context => (\n      <textarea\n        ref={context.textareaRef}\n        className="app__textarea"\n        name="snippet"\n        placeholder="Your snippet\u2026"\n        onChange={context.onInput}\n        autoComplete="off"\n        autoCorrect="off"\n        autoCapitalize="off"\n        spellCheck="false"\n        wrap="off"\n      />\n    )}\n  </Consumer>\n);\n')),(0,o.kt)("h3",{id:"error-boundary"},"Error Boundary"),(0,o.kt)("p",null,"\u4ee5\u4e0b\u662f\u9519\u8bef\u8fb9\u754c\u4e0d\u8d77\u4f5c\u7528\u7684\u60c5\u51b5:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728\u4e8b\u4ef6\u5904\u7406\u5668\u5185."),(0,o.kt)("li",{parentName:"ul"},"setTimeout \u6216 requestAnimationFrame \u56de\u8c03\u4e2d\u7684\u5f02\u6b65\u4ee3\u7801."),(0,o.kt)("li",{parentName:"ul"},"\u5728\u670d\u52a1\u7aef\u6e32\u67d3\u671f\u95f4."),(0,o.kt)("li",{parentName:"ul"},"\u9519\u8bef\u8fb9\u754c\u4ee3\u7801\u672c\u8eab\u4e2d\u5f15\u53d1\u9519\u8bef\u65f6.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/bvaughn/react-error-boundary"},"React Error Boundary")," library:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class ErrorBoundary extends React.Component {\n  state = {\n    hasError: false,\n    error: null,\n    info: null,\n  };\n\n  // key point\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n      error,\n      info,\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>Oops, something went wrong :(</h1>\n          <p>The error: {this.state.error.toString()}</p>\n          <p>Where it occurred: {this.state.info.componentStack}</p>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n")),(0,o.kt)("h3",{id:"react-fragment"},"React Fragment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class Items extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Fruit />\n        <Beverages />\n        <Drinks />\n      </React.Fragment>\n    );\n  }\n}\n\nclass Fruit extends React.Component {\n  render() {\n    return (\n      <>\n        <li>Apple</li>\n        <li>Orange</li>\n        <li>Blueberry</li>\n        <li>Cherry</li>\n      </>\n    );\n  }\n}\n\nclass Frameworks extends React.Component {\n  render() {\n    return (\n      <>\n        <p>JavaScript:</p>\n        <li>React</li>,<li>Vuejs</li>,<li>Angular</li>\n      </>\n    );\n  }\n}\n")),(0,o.kt)("h3",{id:"react-portals"},"React Portals"),(0,o.kt)("p",null,"Portals provide a first-class way to render children into a DOM node\nthat exists ",(0,o.kt)("strong",{parentName:"p"},"outside")," the DOM hierarchy of the parent component\n",(0,o.kt)("inlineCode",{parentName:"p"},"ReactDOM.createPortal(child, container)"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<div id="root"></div>\n<div id="portal"></div>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const portalRoot = document.getElementById(\'portal\');\n\nclass Portal extends React.Component {\n  constructor() {\n    super();\n    this.el = document.createElement(\'div\');\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  };\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.el);\n  };\n\n  render() {\n    const { children } = this.props;\n    return ReactDOM.createPortal(children, this.el);\n  }\n}\n\nclass Modal extends React.Component {\n  render() {\n    const { children, toggle, on } = this.props;\n\n    return (\n      <Portal>\n        {on ? (\n          <div className="modal is-active">\n            <div className="modal-background" />\n            <div className="modal-content">\n              <div className="box">\n                <h2 class="subtitle">{children}</h2>\n                <button onClick={toggle} className="closeButton button is-info">\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </Portal>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  };\n\n  render() {\n    const { showModal } = this.state;\n    return (\n      <div className="box">\n        <h1 class="subtitle">Hello, I am the parent!</h1>\n        <button onClick={this.toggleModal} className="button is-black">\n          Toggle Modal\n        </button>\n        <Modal on={showModal} toggle={this.toggleModal}>\n          {showModal ? <h1>Hello, I am the portal!</h1> : null}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\'root\'));\n')),(0,o.kt)("h3",{id:"concurrent-features"},"Concurrent Features"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as ReactDOM from 'react-dom';\nimport App from 'App';\n\n// Create a root by using ReactDOM.createRoot():\nconst root = ReactDOM.createRoot(document.getElementById('app'));\n\n// Render the main <App/> element to the root:\nroot.render(<App />);\n")),(0,o.kt)("h3",{id:"batching-updates"},"Batching Updates"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All updates will be automatically batched,\nincluding updates inside of ",(0,o.kt)("strong",{parentName:"li"},"promises, async code and native event handlers"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReactDOM.flushSync")," can opt-out of automatic batching.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function handleClick() {\n  // React 17: Re-rendering happens after both of the states are updated.\n  // This is called batching.\n  // This is also the default behavior of React 18.\n  setIsBirthday(b => !b);\n  setAge(a => a + 1);\n}\n\n// For the following code blocks,\n// React 18 does automatic batching, but React 17 doesn't.\n// 1. Promises:\nfunction handleClick() {\n  fetchSomething().then(() => {\n    setIsBirthday(b => !b);\n    setAge(a => a + 1);\n  });\n}\n\n// 2. Async code:\nsetInterval(() => {\n  setIsBirthday(b => !b);\n  setAge(a => a + 1);\n}, 5000);\n\n// 3. Native event handlers:\nelement.addEventListener('click', () => {\n  setIsBirthday(b => !b);\n  setAge(a => a + 1);\n});\n")),(0,o.kt)("p",null,"Reconciler \u6ce8\u518c\u8c03\u5ea6\u4efb\u52a1\u65f6, \u4f1a\u901a\u8fc7\u8282\u6d41\u4e0e\u9632\u6296\u63d0\u5347\u8c03\u5ea6\u6027\u80fd:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728 Task \u6ce8\u518c\u5b8c\u6210\u540e, \u4f1a\u8bbe\u7f6e ",(0,o.kt)("inlineCode",{parentName:"li"},"FiberRoot")," \u7684\u5c5e\u6027, \u4ee3\u8868\u73b0\u5728\u5df2\u7ecf\u5904\u4e8e\u8c03\u5ea6\u8fdb\u884c\u4e2d."),(0,o.kt)("li",{parentName:"ul"},"\u518d\u6b21\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"li"},"ensureRootIsScheduled")," \u65f6\n(\u6bd4\u5982\u8fde\u7eed 2 \u6b21 ",(0,o.kt)("inlineCode",{parentName:"li"},"setState"),", \u7b2c\u4e8c\u6b21 ",(0,o.kt)("inlineCode",{parentName:"li"},"setState")," \u540c\u6837\u4f1a\u89e6\u53d1 Reconciler \u4e0e Scheduler \u6267\u884c),\n\u5982\u679c\u53d1\u73b0\u5904\u4e8e\u8c03\u5ea6\u4e2d, \u5219\u4f1a\u901a\u8fc7\u8282\u6d41\u4e0e\u9632\u6296, \u4fdd\u8bc1\u8c03\u5ea6\u6027\u80fd."),(0,o.kt)("li",{parentName:"ul"},"\u8282\u6d41:\n",(0,o.kt)("inlineCode",{parentName:"li"},"existingCallbackPriority === newCallbackPriority"),",\n\u65b0\u65e7\u66f4\u65b0\u7684\u4f18\u5148\u7ea7\u76f8\u540c, \u5219\u65e0\u9700\u6ce8\u518c\u65b0 Task, \u7ee7\u7eed\u6cbf\u7528\u4e0a\u4e00\u4e2a\u4f18\u5148\u7ea7\u76f8\u540c\u7684 Task, \u76f4\u63a5\u9000\u51fa\u8c03\u7528."),(0,o.kt)("li",{parentName:"ul"},"\u9632\u6296:\n",(0,o.kt)("inlineCode",{parentName:"li"},"existingCallbackPriority !== newCallbackPriority"),",\n\u65b0\u65e7\u66f4\u65b0\u7684\u4f18\u5148\u7ea7\u4e0d\u540c, \u5219\u53d6\u6d88\u65e7 Task, \u91cd\u65b0\u6ce8\u518c\u65b0 Task.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberWorkLoop.new.js"},"EnsureRootIsScheduled"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (nextLanes === NoLanes) {\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  }\n\n  const newCallbackPriority = getHighestPriorityLane(nextLanes);\n  const existingCallbackPriority = root.callbackPriority;\n\n  // Debounce.\n  if (existingCallbackPriority === newCallbackPriority) {\n    // The priority hasn't changed. We can reuse the existing task. Exit.\n    return;\n  }\n\n  // Throttle.\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    if (root.tag === LegacyRoot) {\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    if (supportsMicroTasks) {\n      scheduleMicroTask(() => {\n        if (executionContext === NoContext) {\n          flushSyncCallbacks();\n        }\n      });\n    } else {\n      scheduleCallback(ImmediateSchedulerPriority, flushSyncCallbacks);\n    }\n\n    newCallbackNode = null;\n  } else {\n    const eventPriority = lanesToEventPriority(nextLanes);\n    const schedulerPriorityLevel =\n      eventPriorityToSchedulePriority(eventPriority);\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root)\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n")),(0,o.kt)("h3",{id:"suspense"},"Suspense"),(0,o.kt)("p",null,"Extract loading/skeleton/placeholder components into single place:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const App = () => (\n  <Suspense fallback={<Skeleton />}>\n    <Header />\n    <Suspense fallback={<ListPlaceholder />}>\n      <ListLayout>\n        <List pageId={pageId} />\n      </ListLayout>\n    </Suspense>\n  </Suspense>\n);\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"React Bottlenecks")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},"CPU bottleneck: Concurrency Feature (Priority Interrupt Mechanism)."),(0,o.kt)("li",{parentName:"ol"},"I/O bottleneck: Suspense.")))),(0,o.kt)("h4",{id:"suspense-and-lazy"},"Suspense and Lazy"),(0,o.kt)("p",null,"Lazy loading and code splitting:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { Suspense, lazy } from \'react\';\n\nconst Product = lazy(() => import(\'./ProductHandler\'));\n\nconst App = () => (\n  <div className="product-list">\n    <h1>My Awesome Product</h1>\n    <Suspense fallback={<h2>Product list is loading...</h2>}>\n      <p>Take a look at my product:</p>\n      <section>\n        <Product id="PDT-49-232" />\n        <Product id="PDT-50-233" />\n        <Product id="PDT-51-234" />\n      </section>\n    </Suspense>\n  </div>\n);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { lazy, Suspense } = React;\n\nconst Lazy = lazy(\n  () =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve({ default: () => <Resource /> });\n      }, 4000);\n    })\n);\n\nconst Resource = () => (\n  <div className=\"box\">\n    <h1>React Lazy</h1>\n    <p>This component loaded after 4 seconds, using React Lazy and Suspense</p>\n  </div>\n);\n\nconst App = () => {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Lazy />\n    </Suspense>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n")),(0,o.kt)("h4",{id:"suspense-for-ssr"},"Suspense for SSR"),(0,o.kt)("p",null,"React v18+: enable ",(0,o.kt)("inlineCode",{parentName:"p"},"Suspense")," on the server:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Selective Hydration: one slow part doesn't slow down whole page."),(0,o.kt)("li",{parentName:"ul"},"Streaming HTML: show initial HTML early and stream the rest HTML."),(0,o.kt)("li",{parentName:"ul"},"Enable code splitting for SSR.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const LandingPage = () => (\n  <div>\n    <FastComponent />\n    <Suspense fallback={<Spinner />}>\n      <Comments />\n    </Suspense>\n  </div>\n);\n")),(0,o.kt)("h2",{id:"react-performance"},"React Performance"),(0,o.kt)("h3",{id:"react-performance-mental-model"},"React Performance Mental Model"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3L")," - Less render times, less render calculations, less render nodes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6570\u636e: \u5229\u7528\u7f13\u5b58 (\u590d\u7528\u6570\u636e\u4e0e VNode), \u51cf\u5c11 re-render \u6b21\u6570."),(0,o.kt)("li",{parentName:"ul"},"\u8ba1\u7b97: \u7cbe\u786e\u5224\u65ad\u66f4\u65b0\u65f6\u673a\u548c\u8303\u56f4, \u51cf\u5c11\u8ba1\u7b97\u91cf, \u4f18\u5316 render \u8fc7\u7a0b."),(0,o.kt)("li",{parentName:"ul"},"\u6e32\u67d3: \u7cbe\u7ec6\u7c92\u5ea6, \u964d\u4f4e\u7ec4\u4ef6\u590d\u6742\u5ea6, \u51cf\u5c11 DOM \u6570\u91cf.")),(0,o.kt)("h3",{id:"react-performance-best-practice"},"React Performance Best Practice"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"key")," correctly."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.useMemo")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"React.useCallback")," (no anonymous functions)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"shouldComponentUpdate"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"React.memo"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"React.PureComponent"),":\n",(0,o.kt)("strong",{parentName:"li"},"shallow compare")," on components\nto prevent unnecessary re-rendering ",(0,o.kt)("strong",{parentName:"li"},"caused by parent components"),"."),(0,o.kt)("li",{parentName:"ul"},"Lazy loading components (",(0,o.kt)("inlineCode",{parentName:"li"},"React.lazy")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"React.Suspense"),")."),(0,o.kt)("li",{parentName:"ul"},"Virtualized Lists."),(0,o.kt)("li",{parentName:"ul"},"Stateless component: less props, less state, less nest (HOC or render props)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Immutable.js"),"."),(0,o.kt)("li",{parentName:"ul"},"Isomorphic rendering."),(0,o.kt)("li",{parentName:"ul"},"Webpack bundle analyzer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://houssein.me/progressive-react"},"Progressive React"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useDeferredValue"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"useTransition")," hook for debounce concurrent features.")),(0,o.kt)("h3",{id:"re-rendering-problem"},"Re-rendering Problem"),(0,o.kt)("p",null,"React will recursively render ",(0,o.kt)("strong",{parentName:"p"},"all child components")," inside of it\n(because ",(0,o.kt)("inlineCode",{parentName:"p"},"props.children")," is always a new reference when parent re-rendering)."),(0,o.kt)("p",null,"The major difference is that\n",(0,o.kt)("inlineCode",{parentName:"p"},"React.Component")," doesn\u2019t implement ",(0,o.kt)("inlineCode",{parentName:"p"},"shouldComponentUpdate()")," lifecycle method\nwhile ",(0,o.kt)("inlineCode",{parentName:"p"},"React.PureComponent")," implements it."),(0,o.kt)("p",null,"If component ",(0,o.kt)("inlineCode",{parentName:"p"},"render()")," function renders\nthe same result given the same props and state,\nuse ",(0,o.kt)("inlineCode",{parentName:"p"},"React.PureComponent"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"React.memo")," for a performance boost in some cases."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { PureComponent } from 'react';\n\nconst Unstable = props => {\n  console.log(' Rendered Unstable component ');\n\n  return (\n    <div>\n      <p> {props.value}</p>\n    </div>\n  );\n};\n\nclass App extends PureComponent {\n  state = {\n    value: 1,\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(() => {\n        return { value: 1 };\n      });\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <div>\n        <Unstable value={this.state.value} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { Component } from 'react';\n\nconst Unstable = React.memo(props => {\n  console.log(' Rendered this component ');\n\n  return (\n    <div>\n      <p> {props.value}</p>\n    </div>\n  );\n});\n\nclass App extends Component {\n  state = {\n    value: 1,\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(() => {\n        return { value: 1 };\n      });\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <div>\n        <Unstable value={this.state.value} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n")),(0,o.kt)("p",null,"Prevent useless re-rendering:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"shouldComponentUpdate"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PureComponent"),": ",(0,o.kt)("strong",{parentName:"li"},"shallow compare")," diff."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.memo"),": ",(0,o.kt)("strong",{parentName:"li"},"shallow compare")," diff,\nto memorize stateless components that ",(0,o.kt)("strong",{parentName:"li"},"props not changed often"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"export default React.memo(MyComponent, areEqual)"),"."),(0,o.kt)("li",{parentName:"ul"},"Memorized values."),(0,o.kt)("li",{parentName:"ul"},"Memorized event handlers."),(0,o.kt)("li",{parentName:"ul"},"\u5728\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"memo")," \u6216\u8005 ",(0,o.kt)("inlineCode",{parentName:"li"},"useMemo")," \u505a\u4f18\u5316\u524d\n(",(0,o.kt)("a",{parentName:"li",href:"https://overreacted.io/before-you-memo"},"Before You Memo"),"),\n\u53ef\u4ee5\u4ece\u4e0d\u53d8\u7684\u90e8\u5206\u91cc\u5206\u5272\u51fa\u53d8\u5316\u7684\u90e8\u5206.\n\u901a\u8fc7\u5c06\u53d8\u5316\u90e8\u5206\u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"state")," \u5411\u4e0b\u79fb\u52a8\u4ece\u800c\u62bd\u8c61\u51fa\u53d8\u5316\u7684\u5b50\u7ec4\u4ef6,\n\u6216\u8005\u5c06",(0,o.kt)("strong",{parentName:"li"},"\u53d8\u5316\u5185\u5bb9\u63d0\u5347")," (",(0,o.kt)("strong",{parentName:"li"},"Lift Up"),") \u5230\u7236\u7ec4\u4ef6\u4ece\u800c\u5c06\u4e0d\u53d8\u90e8\u5206\u72ec\u7acb\u51fa\u6765:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// BAD\n// When <App> re-rendering, <ExpensiveTree> will re-rendering:\n// <ExpensiveTree /> is actually <ExpensiveTree props={}>.\n// Every time <App> re-rendering will pass a new `{}` reference to <ExpensiveTree>.\nimport { useState } from 'react';\n\nexport default function App() {\n  const [color, setColor] = useState('red');\n\n  return (\n    <div>\n      <input value={color} onChange={e => setColor(e.target.value)} />\n      <p style={{ color }}>Hello, world!</p>\n      <ExpensiveTree />\n    </div>\n  );\n}\n\nfunction ExpensiveTree() {\n  const now = performance.now();\n\n  while (performance.now() - now < 100) {\n    // Artificial delay -- do nothing for 100ms\n  }\n\n  return <p>I am a very slow component tree.</p>;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// GOOD\n// <ExpensiveTree> will not re-rendering.\nexport default function App() {\n  return (\n    <>\n      <Form />\n      <ExpensiveTree />\n    </>\n  );\n}\n\nfunction Form() {\n  const [color, setColor] = useState('red');\n  return (\n    <>\n      <input value={color} onChange={e => setColor(e.target.value)} />\n      <p style={{ color }}>Hello, world!</p>\n    </>\n  );\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// GOOD\n// <ExpensiveTree> will not re-rendering.\nexport default function App() {\n  return (\n    <ColorPicker>\n      <p>Hello, world!</p>\n      <ExpensiveTree />\n    </ColorPicker>\n  );\n}\n\nfunction ColorPicker({ children }) {\n  const [color, setColor] = useState('red');\n  return (\n    <div style={{ color }}>\n      <input value={color} onChange={e => setColor(e.target.value)} />\n      {children}\n    </div>\n  );\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// BAD\nfunction App1(items) {\n  return <BigListComponent style={{ width: '100%' }} items={items} />;\n}\n\n// GOOD\nconst bigListStyle = { width: '100%' };\n\nfunction App2(items) {\n  return <BigListComponent style={bigListStyle} items={items} />;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// BAD: Inline function\nfunction App1(items) {\n  return <BigListComponent onClick={() => dispatchEvent()} />;\n}\n\n// GOOD: Reference to a function\nconst clickHandler = () => dispatchEvent();\n\nfunction App2(items) {\n  return <BigListComponent onClick={clickHandler} />;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'function Parent({ children, lastChild }) {\n  return (\n    <div className="parent">\n      <ChildA /> {/* Only ChildA gets re-rendered */}\n      {children} {/* Bailed out */}\n      {lastChild} {/* Bailed out */}\n    </div>\n  );\n}\n')),(0,o.kt)("h3",{id:"code-splitting"},"Code Splitting"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst formValidator = Yup.object().shape({\n  /* ... */\n});\n\nexport default class Form extends Component {\n  render() {\n    return <Formik validationSchema={formValidator}>{/* ... */}</Formik>;\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { Component } from 'react';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Form: undefined,\n    };\n  }\n\n  render() {\n    const { Form } = this.state;\n\n    return (\n      <div className=\"app\">\n        {Form ? <Form /> : <button onClick={this.showForm}>Show form</button>}\n      </div>\n    );\n  }\n\n  showForm = async () => {\n    const { default: Form } = await import('./Form');\n    this.setState({ Form });\n  };\n}\n")),(0,o.kt)("h2",{id:"server-side-rendering"},"Server Side Rendering"),(0,o.kt)("p",null,"Application code is written in a way that\nit can be executed ",(0,o.kt)("strong",{parentName:"p"},"both on the server and on the client"),".\nThe browser displays the initial HTML (fetch from server),\nsimultaneously downloads the single-page app (SPA) in the background.\nOnce the client-side code is ready,\nthe client takes over and the website becomes a SPA."),(0,o.kt)("p",null,"\u524d\u540e\u7aef\u5206\u79bb\u662f\u4e00\u79cd\u8fdb\u6b65\uff0c\u4f46\u5f7b\u5e95\u7684\u5206\u79bb\uff0c\u4e5f\u4e0d\u5c3d\u5584\u5c3d\u7f8e\uff0c\n\u6bd4\u5982\u4f1a\u6709\u9996\u5c4f\u52a0\u8f7d\u901f\u5ea6\u548c SEO \u65b9\u9762\u7684\u56f0\u6270\u3002\n\u524d\u540e\u7aef\u5206\u79bb+\u670d\u52a1\u7aef\u9996\u5c4f\u6e32\u67d3\u770b\u8d77\u6765\u662f\u4e2a\u66f4\u4f18\u7684\u65b9\u6848\uff0c\n\u5b83\u7ed3\u5408\u4e86\u524d\u540e\u7aef\u5206\u79bb\u548c\u670d\u52a1\u7aef\u6e32\u67d3\u4e24\u8005\u7684\u4f18\u70b9\uff0c\n\u65e2\u505a\u5230\u4e86\u524d\u540e\u7aef\u5206\u79bb\uff0c\u53c8\u80fd\u4fdd\u8bc1\u9996\u9875\u6e32\u67d3\u901f\u5ea6\uff0c\u8fd8\u6709\u5229\u4e8e SEO\u3002"),(0,o.kt)("h3",{id:"pros-of-ssr"},"Pros of SSR"),(0,o.kt)("h4",{id:"performance"},"Performance"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Smaller first meaningful paint time"),(0,o.kt)("li",{parentName:"ul"},"HTML's strengths: progressive rendering"),(0,o.kt)("li",{parentName:"ul"},"Browsers are incredibly good at rendering partial content")),(0,o.kt)("h4",{id:"seo"},"SEO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Search engine crawlers used to not execute scripts (or initial scripts)"),(0,o.kt)("li",{parentName:"ul"},"Search engine usually stop after a while (roughly 10 seconds)"),(0,o.kt)("li",{parentName:"ul"},"SPAs can't set meaningful HTTP status codes")),(0,o.kt)("h3",{id:"ssr-library"},"SSR Library"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nextjs.org"},"Next.js for Isomorphic rendering"))),(0,o.kt)("h3",{id:"ssr-example"},"SSR Example"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://peerigon.github.io/talks/2018-07-20-js-camp-barcelona-bumpy-road-universal-javascript/#1"},"presentation")),(0,o.kt)("p",null,"Webpack configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const baseConfig = require('./baseConfig');\n\nconst webConfig = {\n  ...baseConfig,\n  target: 'web',\n};\n\nconst nodeConfig = {\n  ...baseConfig,\n  target: 'node',\n  output: {\n    ...baseConfig.output,\n    libraryTarget: 'commonjs2',\n  },\n  externals: [require('webpack-node-externals')()],\n};\n\nmodule.exports = { webConfig, nodeConfig };\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"start.server.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport App from './App.js';\n\nconst render = () => ReactDOMServer.renderToString(<App />);\n\nexport default render;\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"index.html.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const startApp = require(\'../dist/server.js\').default;\n\nmodule.exports = () => `<!DOCTYPE html>\n    <head>\n    </head>\n    <body>\n      <div id="app">${startApp()}</div>\n      <script src="/static/client.js"><\/script>\n    </body>\n  </html>`;\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"start.client.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport ReactDOMServer from 'react-dom';\nimport App from './App.js';\n\nReactDOM.hydrate(<App />, document.getElementById('app'));\n")),(0,o.kt)("p",null,"Async fetch out of ",(0,o.kt)("inlineCode",{parentName:"p"},"<App />"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const data = await fetchData();\nconst App = <App {...data} />;\n\nreturn {\n  html: ReactDOMServer.renderToString(App),\n  state: { data },\n};\n")),(0,o.kt)("h2",{id:"react-with-typescript"},"React with TypeScript"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/typescript-cheatsheets/react"},"React TypeScript CheatSheet")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/typescript-cheatsheets/react/blob/main/docs/advanced/types-react-ap.md"},"@types/react API"))),(0,o.kt)("h3",{id:"props-types"},"Props Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export declare interface AppProps {\n  children: React.ReactNode; // best\n  style?: React.CSSProperties; // for style\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void; // form events!\n  props: Props & React.HTMLProps<HTMLButtonElement>;\n}\n")),(0,o.kt)("h3",{id:"react-refs-types"},"React Refs Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class CssThemeProvider extends React.PureComponent<Props> {\n  private rootRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  render() {\n    return <div ref={this.rootRef}>{this.props.children}</div>;\n  }\n}\n")),(0,o.kt)("h3",{id:"function-component-types"},"Function Component Types"),(0,o.kt)("p",null,"Don't use ",(0,o.kt)("inlineCode",{parentName:"p"},"React.FC"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"React.FunctionComponent"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"React 17:\nUnnecessary addition of ",(0,o.kt)("inlineCode",{parentName:"li"},"children")," (hide some run-time error)."),(0,o.kt)("li",{parentName:"ul"},"React 18:\n",(0,o.kt)("inlineCode",{parentName:"li"},"@types/react")," v18 ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ant-design/ant-design/pull/34937"},"remove implicit ",(0,o.kt)("inlineCode",{parentName:"a"},"children")," in ",(0,o.kt)("inlineCode",{parentName:"a"},"React.FunctionComponent")),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.FC")," doesn't support generic components."),(0,o.kt)("li",{parentName:"ul"},"Barrier for ",(0,o.kt)("inlineCode",{parentName:"li"},"<Comp>")," with ",(0,o.kt)("inlineCode",{parentName:"li"},"<Comp.Sub>")," types (",(0,o.kt)("strong",{parentName:"li"},"component as namespace pattern"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.FC")," doesn't work correctly with ",(0,o.kt)("inlineCode",{parentName:"li"},"defaultProps"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// Declaring type of props\ninterface AppProps {\n  message: string;\n}\n\n// Inferred return type\nconst App = ({ message }: AppProps) => <div>{message}</div>;\n\n// Explicit return type annotation\nconst App = ({ message }: AppProps): JSX.Element => <div>{message}</div>;\n\n// Inline types annotation\nconst App = ({ message }: { message: string }) => <div>{message}</div>;\n")),(0,o.kt)("h3",{id:"class-component-types"},"Class Component Types"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.Component<P, S>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"readonly state: State")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"static defaultProps")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"static getDerivedStateFromProps"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"class MyComponent extends React.Component<{\n  message?: string;\n}> {\n  render() {\n    const { message = 'default' } = this.props;\n    return <div>{message}</div>;\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport Button from './Button';\n\ntype Props = typeof ButtonCounter.defaultProps & {\n  name: string;\n};\n\nconst initialState = { clicksCount: 0 };\ntype State = Readonly<typeof initialState>;\n\nclass ButtonCounter extends React.Component<Props, State> {\n  readonly state: State = initialState;\n\n  static defaultProps = {\n    name: 'count',\n  };\n\n  static getDerivedStateFromProps(\n    props: Props,\n    state: State\n  ): Partial<State> | null {\n    // ...\n  }\n\n  render() {\n    return <span>{this.props.foo}</span>;\n  }\n}\n")),(0,o.kt)("h3",{id:"generic-component-types"},"Generic Component Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u4e00\u4e2a\u6cdb\u578b\u7ec4\u4ef6\ninterface SelectProps<T> {\n  items: T[];\n}\n\nclass Select<T> extends React.Component<SelectProps<T>, any> {}\n\n// \u4f7f\u7528\nconst Form = () => <Select<string> items={['a', 'b']} />;\n")),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},".tsx")," file, ",(0,o.kt)("inlineCode",{parentName:"p"},"<T>")," maybe considered ",(0,o.kt)("inlineCode",{parentName:"p"},"JSX.Element"),",\nuse ",(0,o.kt)("inlineCode",{parentName:"p"},"extends {}")," to avoid it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const foo = <T extends {}>(arg: T) => arg;\n")),(0,o.kt)("h3",{id:"component-props-type"},"Component Props Type"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ComponentProps")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ComponentPropsWithRef")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ComponentPropsWithoutRef"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Button } from 'library';\n\ntype ButtonProps = React.ComponentProps<typeof Button>;\ntype AlertButtonProps = Omit<ButtonProps, 'onClick'>;\n\nconst AlertButton: React.FC<AlertButtonProps> = props => (\n  <Button onClick={() => alert('hello')} {...props} />\n);\n")),(0,o.kt)("p",null,"Typing existing untyped React components:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"declare module 'react-router-dom' {\n  import * as React from 'react';\n\n  interface NavigateProps<T> {\n    to: string | number;\n    replace?: boolean;\n    state?: T;\n  }\n\n  export class Navigate<T = any> extends React.Component<NavigateProps<T>> {}\n}\n")),(0,o.kt)("h3",{id:"component-return-type"},"Component Return Type"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"JSX.Element"),": return value of ",(0,o.kt)("inlineCode",{parentName:"li"},"React.createElement"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ReactNode"),": return value of a component.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function foo(bar: string) {\n  return { baz: 1 };\n}\n\ntype FooReturn = ReturnType<typeof foo>; // { baz: number }\n")),(0,o.kt)("h3",{id:"react-event-types"},"React Event Types"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.SyntheticEvent"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.AnimationEvent"),":\nCSS animations."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ChangeEvent"),":\n",(0,o.kt)("inlineCode",{parentName:"li"},"<input>"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"<select>"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"<textarea>")," change events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ClipboardEvent"),":\ncopy/paste/cut events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.CompositionEvent"),":\nuser indirectly entering text events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.DragEvent"),":\ndrag/drop interaction events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.FocusEvent"),":\nelements gets/loses focus events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.FormEvent<HTMLElement>"),":\nform focus/change/submit events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.InvalidEvent"),":\nvalidity restrictions of inputs fails."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.KeyboardEvent"),":\nkeyboard interaction events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.MouseEvent"),":\npointing device interaction events (e.g mouse)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.TouchEvent"),":\ntouch device interaction events.\nExtends UIEvent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.PointerEvent"),":\nadvanced pointing device interaction events\n(includes mouse, pen/stylus, touchscreen),\nrecommended for modern browser.\nExtends ",(0,o.kt)("inlineCode",{parentName:"li"},"UIEvent"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.TransitionEvent"),":\nCSS transition.\nExtends UIEvent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.UIEvent"),":\nbase event for Mouse/Touch/Pointer events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.WheelEvent"),":\nmouse wheel scrolling events."),(0,o.kt)("li",{parentName:"ul"},"Missing ",(0,o.kt)("inlineCode",{parentName:"li"},"InputEvent")," (extends ",(0,o.kt)("inlineCode",{parentName:"li"},"UIEvent"),"):\n",(0,o.kt)("inlineCode",{parentName:"li"},"InputEvent")," is still an experimental interface\nand not fully supported by all browsers.\nUse ",(0,o.kt)("inlineCode",{parentName:"li"},"SyntheticEvent")," instead.")),(0,o.kt)("h4",{id:"react-event-handler-types"},"React Event Handler Types"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ChangeEventHandler<HTMLElement>"),".")),(0,o.kt)("h4",{id:"react-form-event-types"},"React Form Event Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface State {\n  text: string;\n}\n\nclass App extends React.Component<Props, State> {\n  state = {\n    text: '',\n  };\n\n  // typing on RIGHT hand side of =\n  onChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    this.setState({ text: e.currentTarget.value });\n  };\n\n  // typing on LEFT hand side of =\n  onChange: React.ChangeEventHandler<HTMLInputElement> = e => {\n    this.setState({ text: e.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.text} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const Form = () => (\n  <form\n    ref={formRef}\n    onSubmit={(e: React.SyntheticEvent) => {\n      e.preventDefault();\n\n      const target = e.target as typeof e.target & {\n        email: { value: string };\n        password: { value: string };\n      };\n\n      const email = target.email.value; // Type Checks\n      const password = target.password.value; // Type Checks\n    }}\n  >\n    <div>\n      <label>\n        Email:\n        <input type="email" name="email" />\n      </label>\n    </div>\n    <div>\n      <label>\n        Password:\n        <input type="password" name="password" />\n      </label>\n    </div>\n    <div>\n      <input type="submit" value="Log in" />\n    </div>\n  </form>\n);\n')),(0,o.kt)("h3",{id:"react-html-and-css-types"},"React HTML and CSS Types"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.DOMAttributes<HTMLElement>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.AriaAttributes<HTMLElement>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.SVGAttributes<HTMLElement>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.HTMLAttributes<HTMLElement>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.ButtonHTMLAttributes<HTMLButtonElement>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.HTMLProps<HTMLElement>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"React.CSSProperties"))),(0,o.kt)("h4",{id:"react-input-types"},"React Input Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type StringChangeHandler = (newValue: string) => void;\ntype NumberChangeHandler = (newValue: number) => void;\ntype BooleanChangeHandler = (newValue: boolean) => void;\n\ninterface BaseInputDefinition {\n  id: string;\n  label: string;\n}\n\ninterface TextInputDefinition extends BaseInputDefinition {\n  type: 'text';\n  value: string;\n  onChange: StringChangeHandler;\n}\n\ninterface NumberInputDefinition extends BaseInputDefinition {\n  type: 'number';\n  value: number;\n  onChange: NumberChangeHandler;\n}\n\ninterface CheckboxInputDefinition extends BaseInputDefinition {\n  type: 'checkbox';\n  value: boolean;\n  onChange: BooleanChangeHandler;\n}\n\ntype Input =\n  | TextInputDefinition\n  | NumberInputDefinition\n  | CheckboxInputDefinition;\n")),(0,o.kt)("h3",{id:"react-portals-types"},"React Portals Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const modalRoot = document.getElementById('modal-root') as HTMLElement;\n\nexport class Modal extends React.Component {\n  el: HTMLElement = document.createElement('div');\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\nconst Modal: React.FC<{}> = ({ children }) => {\n  const el = useRef(document.createElement('div'));\n\n  useEffect(() => {\n    const current = el.current;\n    modalRoot!.appendChild(current);\n    return () => modalRoot!.removeChild(current);\n  }, []);\n\n  return createPortal(children, el.current);\n};\n\nexport default Modal;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Modal } from '@components';\n\nfunction App() {\n  const [showModal, setShowModal] = React.useState(false);\n\n  return (\n    <div>\n      <div id=\"modal-root\"></div>\n      {showModal && (\n        <Modal>\n          <div>\n            I'm a modal!{' '}\n            <button onClick={() => setShowModal(false)}>close</button>\n          </div>\n        </Modal>\n      )}\n      <button onClick={() => setShowModal(true)}>show Modal</button>\n    </div>\n  );\n}\n")),(0,o.kt)("h3",{id:"react-redux-types"},"React Redux Types"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const initialState = {\n  name: '',\n  points: 0,\n  likesGames: true,\n};\n\ntype State = typeof initialState;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function updateName(name: string) {\n  return {\n    type: 'UPDATE_NAME',\n    name,\n  } as const;\n}\n\nexport function addPoints(points: number) {\n  return {\n    type: 'ADD_POINTS',\n    points,\n  } as const;\n}\n\nexport function setLikesGames(value: boolean) {\n  return {\n    type: 'SET_LIKES_GAMES',\n    value,\n  } as const;\n}\n\ntype Action = ReturnType<\n  typeof updateName | typeof addPoints | typeof setLikesGames\n>;\n\n// =>\n// type Action = {\n//   readonly type: 'UPDATE_NAME';\n//   readonly name: string;\n// } | {\n//   readonly type: 'ADD_POINTS';\n//   readonly points: number;\n// } | {\n//   readonly type: 'SET_LIKES_GAMES';\n//   readonly value: boolean;\n// }\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Reducer } from 'redux';\n\nconst reducer = (state: State, action: Action): Reducer<State, Action> => {\n  switch (action.type) {\n    case 'UPDATE_NAME':\n      return { ...state, name: action.name };\n    case 'ADD_POINTS':\n      return { ...state, points: action.points };\n    case 'SET_LIKES_GAMES':\n      return { ...state, likesGames: action.value };\n    default:\n      return state;\n  }\n};\n")),(0,o.kt)("h3",{id:"react-hooks-types"},"React Hooks Types"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState<T>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Dispatch<T>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SetStateAction<T>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"RefObject<T>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"MutableRefObject<T>")),(0,o.kt)("li",{parentName:"ul"},"More ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/juliencrn/useHooks.ts"},"TypeScript Hooks"),".")),(0,o.kt)("h4",{id:"usestate-hook-type"},"UseState Hook Type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function App() {\n  const [user, setUser] = React.useState<IUser>({} as IUser);\n  const handleClick = () => setUser(newUser);\n\n  return <div>App</div>;\n}\n")),(0,o.kt)("h4",{id:"usereducer-hook-type"},"UseReducer Hook Type"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions"},"Discriminated Unions"),"\nfor reducer actions.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const initialState = { count: 0 };\ntype State = typeof initialState;\n\ntype Action =\n  | { type: 'increment'; payload: number }\n  | { type: 'decrement'; payload: string };\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + action.payload };\n    case 'decrement':\n      return { count: state.count - Number(action.payload) };\n    default:\n      throw new Error('Error');\n  }\n}\n\nfunction Counter() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({ type: 'decrement', payload: '5' })}>\n        -\n      </button>\n      <button onClick={() => dispatch({ type: 'increment', payload: 5 })}>\n        +\n      </button>\n    </>\n  );\n}\n")),(0,o.kt)("h4",{id:"useref-hook-type"},"UseRef Hook Type"),(0,o.kt)("h5",{id:"dom-element-ref-type"},"DOM Element Ref Type"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If possible, prefer as specific as possible."),(0,o.kt)("li",{parentName:"ul"},"Return type is ",(0,o.kt)("inlineCode",{parentName:"li"},"RefObject<T>"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Foo() {\n  const divRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!divRef.current) throw new Error('divRef is not assigned');\n\n    doSomethingWith(divRef.current);\n  });\n\n  return <div ref={divRef}>etc</div>;\n}\n")),(0,o.kt)("h5",{id:"mutable-value-ref"},"Mutable Value Ref"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Return type is ",(0,o.kt)("inlineCode",{parentName:"li"},"MutableRefObject<T>"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function Foo() {\n  const intervalRef = useRef<number | null>(null);\n\n  // You manage the ref yourself (that's why it's called MutableRefObject!)\n  useEffect(() => {\n    intervalRef.current = setInterval();\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  // The ref is not passed to any element's \"ref\" prop\n  return (\n    <button onClick={() => clearInterval(intervalRef.current)}>\n      Cancel timer\n    </button>\n  );\n}\n")),(0,o.kt)("h4",{id:"custom-hooks-types"},"Custom Hooks Types"),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"as const")," type assertion to avoid type inference\n(especially for ",(0,o.kt)("inlineCode",{parentName:"p"},"[first, second]")," type)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function useLoading() {\n  const [isLoading, setState] = React.useState(false);\n  const load = () => {\n    setState(true);\n  };\n\n  // return `[boolean, () => void]` as want\n  // instead of `(boolean | () => void)[]`\n  return [isLoading, load] as const;\n}\n")),(0,o.kt)("p",null,"More hooks"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Dispatch, SetStateAction } from 'react';\nimport { useState } from 'react';\n\ninterface ReturnType {\n  value: boolean;\n  setValue: Dispatch<SetStateAction<boolean>>;\n  setTrue: () => void;\n  setFalse: () => void;\n  toggle: () => void;\n}\n\nfunction useBoolean(defaultValue?: boolean): ReturnType {\n  const [value, setValue] = useState(!!defaultValue);\n\n  const setTrue = () => setValue(true);\n  const setFalse = () => setValue(false);\n  const toggle = () => setValue(x => !x);\n\n  return { value, setValue, setTrue, setFalse, toggle };\n}\n\nexport default useBoolean;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { RefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nfunction useEventListener<T extends HTMLElement = HTMLDivElement>(\n  eventName: keyof WindowEventMap,\n  handler: (event: Event) => void,\n  element?: RefObject<T>\n) {\n  // Create a ref that stores handler\n  const savedHandler = useRef<(event: Event) => void>();\n\n  useEffect(() => {\n    // Define the listening target\n    const targetElement: T | Window = element?.current || window;\n    if (!(targetElement && targetElement.addEventListener)) {\n      return;\n    }\n\n    // Update saved handler if necessary\n    if (savedHandler.current !== handler) {\n      savedHandler.current = handler;\n    }\n\n    // Create event listener that calls handler function stored in ref\n    const eventListener = (event: Event) => {\n      savedHandler?.current(event);\n    };\n\n    targetElement.addEventListener(eventName, eventListener);\n\n    // Remove event listener on cleanup\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element, handler]);\n}\n\nexport default useEventListener;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useEffect, useReducer, useRef } from 'react';\n\nimport type { AxiosRequestConfig } from 'axios';\nimport axios from 'axios';\n\n// State & hook output\ninterface State<T> {\n  status: 'init' | 'fetching' | 'error' | 'fetched';\n  data?: T;\n  error?: string;\n}\n\ntype Cache<T> = Record<string, T>;\n\n// discriminated union type\ntype Action<T> =\n  | { type: 'request' }\n  | { type: 'success'; payload: T }\n  | { type: 'failure'; payload: string };\n\nfunction useFetch<T = unknown>(\n  url?: string,\n  options?: AxiosRequestConfig\n): State<T> {\n  const cache = useRef<Cache<T>>({});\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    status: 'init',\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case 'request':\n        return { ...initialState, status: 'fetching' };\n      case 'success':\n        return { ...initialState, status: 'fetched', data: action.payload };\n      case 'failure':\n        return { ...initialState, status: 'error', error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    const fetchData = async () => {\n      dispatch({ type: 'request' });\n\n      if (cache.current[url]) {\n        dispatch({ type: 'success', payload: cache.current[url] });\n      } else {\n        try {\n          const response = await axios(url, options);\n          cache.current[url] = response.data;\n\n          if (cancelRequest.current) return;\n\n          dispatch({ type: 'success', payload: response.data });\n        } catch (error) {\n          if (cancelRequest.current) return;\n\n          dispatch({ type: 'failure', payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nexport default useFetch;\n")),(0,o.kt)("h2",{id:"react-testing"},"React Testing"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://medium.com/codeclan/testing-react-with-jest-and-enzyme-20505fec4675"},"Jest and Enzyme snapshots testing"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/cypress"},"Cypress: E2E testing framework"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://storybook.js.org/blog/how-to-automate-ui-tests-with-github-actions"},"GitHub CI for UI testing"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.robinwieruch.de/react-testing-tutorial"},"React testing tutorial"),".")),(0,o.kt)("h3",{id:"shallow-renderer"},"Shallow Renderer"),(0,o.kt)("p",null,"\u6d45\u5c42\u6e32\u67d3 (Shallow Renderer) \u5bf9\u4e8e\u5728 React \u4e2d\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u5f88\u6709\u7528.\n\u5b83\u5141\u8bb8\u6e32\u67d3\u4e00\u4e2a\u4e00\u7ea7\u6df1\u7684\u7ec4\u4ef6\u5e76\u65ad\u8a00\u5176\u6e32\u67d3\u65b9\u6cd5\u8fd4\u56de\u7684\u5185\u5bb9, \u800c\u4e0d\u5fc5\u62c5\u5fc3\u5b50\u7ec4\u4ef6\u672a\u5b9e\u4f8b\u5316\u6216\u6e32\u67d3."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function MyComponent() {\n  return (\n    <div>\n      <span className={'heading'}>{'Title'}</span>\n      <span className={'description'}>{'Description'}</span>\n    </div>\n  );\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import ShallowRenderer from 'react-test-renderer/shallow';\n\nconst renderer = new ShallowRenderer();\nrenderer.render(<MyComponent />);\n\nconst result = renderer.getRenderOutput();\n\nexpect(result.type).toBe('div');\nexpect(result.props.children).toEqual([\n  <span className={'heading'}>{'Title'}</span>,\n  <span className={'description'}>{'Description'}</span>,\n]);\n")),(0,o.kt)("h3",{id:"test-renderer"},"Test Renderer"),(0,o.kt)("p",null,"\u6d4b\u8bd5\u6e32\u67d3\u5668 (Test Renderer) \u53ef\u7528\u4e8e\u5c06\u7ec4\u4ef6\u6e32\u67d3\u4e3a\u7eaf JavaScript \u5bf9\u8c61,\n\u800c\u4e0d\u4f9d\u8d56\u4e8e DOM \u6216\u539f\u751f\u79fb\u52a8\u73af\u5883.\n\u8be5\u5305\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u7531 ReactDOM \u6216 React Native \u5e73\u53f0\u6240\u6e32\u67d3\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784 (\u7c7b\u4f3c\u4e8e DOM \u6811) \u7684\u5feb\u7167,\n\u800c\u65e0\u9700\u4f7f\u7528\u6d4f\u89c8\u5668\u6216 jsdom."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import TestRenderer from 'react-test-renderer';\n\nconst Link = ({ page, children }) => <a href={page}>{children}</a>;\n\nconst testRenderer = TestRenderer.create(\n  <Link page={'https://www.facebook.com/'}>{'Facebook'}</Link>\n);\n\nconsole.log(testRenderer.toJSON());\n// {\n//   type: 'a',\n//   props: { href: 'https://www.facebook.com/' },\n//   children: [ 'Facebook' ]\n// }\n")),(0,o.kt)("h3",{id:"enzyme-mindset"},"Enzyme Mindset"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"React Internals"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Enzyme tests ultimately prevent from modifying component without changing the test."),(0,o.kt)("li",{parentName:"ul"},"Enzyme tests slowed down development speed and productivity,\nsince every small change requires rewriting some part of tests."),(0,o.kt)("li",{parentName:"ul"},"Enzyme provide access the DOM of the component.\nSo using enzyme,\nwe are not bound to test the internals\nbut we can test the DOM too.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D enzyme enzyme-adapter-react-16 @types/enzyme\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { configure, shallow } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport { DataTable } from './components';\n\nconfigure({ adapter: new Adapter() });\n\ndescribe(() => {\n  it('renders in table rows based on provided columns', () => {\n    const cols = [\n      { header: 'ID', name: 'id' },\n      { header: 'Name', name: 'name' },\n      { header: 'Email', name: 'email' },\n    ];\n    const data = [\n      { id: 5, name: 'John', email: 'john@example.com' },\n      { id: 6, name: 'Liam', email: 'liam@example.com' },\n      { id: 7, name: 'Maya', email: 'maya@example.com', someTest: 10 },\n      {\n        id: 8,\n        name: 'Oliver',\n        email: 'oliver@example.com',\n        hello: 'hello world',\n      },\n      { id: 25, name: 'Amelia', email: 'amelia@example.com' },\n    ];\n\n    // Shallow render Data Table\n    const container = shallow(<DataTable data={data} cols={cols} />);\n\n    // There should be ONLY 1 table element\n    const table = container.find('table');\n    expect(table).toHaveLength(1);\n\n    // The table should have ONLY 1 thead element\n    const thead = table.find('thead');\n    expect(thead).toHaveLength(1);\n\n    // The number of th tags should be equal to number of columns\n    const headers = thead.find('th');\n    expect(headers).toHaveLength(cols.length);\n    // Each th tag text should equal to column header\n    headers.forEach((th, idx) => {\n      expect(th.text()).toEqual(cols[idx].header);\n    });\n\n    // The table should have ONLY 1 tbody tag\n    const tbody = table.find('tbody');\n    expect(tbody).toHaveLength(1);\n\n    // tbody tag should have the same number of tr tags as data rows\n    const rows = tbody.find('tr');\n    expect(rows).toHaveLength(data.length);\n    // Loop through each row and check the content\n    rows.forEach((tr, rowIndex) => {\n      const cells = tr.find('td');\n      expect(cells).toHaveLength(cols.length);\n      expect(cells.at(0).text()).toEqual(data[rowIndex].id);\n      expect(cells.at(1).text()).toEqual(data[rowIndex].name);\n      expect(cells.at(2).text()).toEqual(data[rowIndex].email);\n    });\n  });\n});\n")),(0,o.kt)("h3",{id:"react-testing-library-mindset"},"React Testing Library Mindset"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"User behavior")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"A11Y"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Rather than tests focusing on the ",(0,o.kt)("strong",{parentName:"li"},"implementation")," (props and state) (Enzyme),\ntests are more focused on ",(0,o.kt)("strong",{parentName:"li"},"user behavior")," (react-testing-library)."),(0,o.kt)("li",{parentName:"ul"},"React testing library enforce to\nuse ",(0,o.kt)("inlineCode",{parentName:"li"},"placeholder"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"aria"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"test-ids")," to access elements,\nbenefiting for a11y components\n(write tests > build accessible components > tests pass).")),(0,o.kt)("p",null,"But sometimes may need to test the internals of the component\nwhen just testing the DOM from user\u2019s perspective may not make sense."),(0,o.kt)("p",null,"So depending on the use cases,\nwe can choose between these two libraries\nor just install them all for individual use cases."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Enzyme for Internal API, React testing library for user behavior.")),(0,o.kt)("h3",{id:"react-testing-library-installation"},"React Testing Library Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @testing-library/react @testing-library/dom @testing-library/jest-dom @testing-library/user-event\n")),(0,o.kt)("h3",{id:"react-testing-library-basis"},"React Testing Library Basis"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\n\n/**\n * render: render the component\n * screen: finding elements along with user\n **/\nimport { render, screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { Checkbox, Welcome } from './';\n\ndescribe('Welcome should', () => {\n  test('has correct welcome message', () => {\n    render(<Welcome firstName=\"John\" lastName=\"Doe\" />);\n    expect(screen.getByRole('heading')).toHaveTextContent('Welcome, John Doe');\n  });\n\n  test('has correct input value', () => {\n    render(<Welcome firstName=\"John\" lastName=\"Doe\" />);\n    expect(screen.getByRole('form')).toHaveFormValues({\n      firstName: 'John',\n      lastName: 'Doe',\n    });\n  });\n\n  test('handles click correctly', () => {\n    render(<Checkbox />);\n    userEvent.click(screen.getByText('Check'));\n    expect(screen.getByLabelText('Check')).toBeChecked();\n  });\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { fireEvent, render, wait } from '@testing-library/react';\n\nimport { App } from './App';\nimport { api } from './api';\n\n// Normally you can mock entire module using jest.mock('./api);\nconst mockCreateItem = (api.createItem = jest.fn());\n\ntest('allows users to add items to their list', async () => {\n  const todoText = 'Learn spanish';\n  mockCreateItem.mockResolvedValueOnce({ id: 123, text: todoText });\n\n  const { getByText, getByLabelText } = render(<App />);\n\n  const input = getByLabelText('What needs to be done?');\n  const button = getByText('Add #1');\n\n  fireEvent.change(input, { target: { value: todoText } });\n  fireEvent.click(button);\n\n  await wait(() => getByText(todoText));\n\n  expect(mockCreateItem).toBeCalledTimes(1);\n  expect(mockCreateItem).toBeCalledWith(\n    '/items',\n    expect.objectContaining({ text: todoText })\n  );\n});\n")),(0,o.kt)("h3",{id:"react-testing-library-events"},"React Testing Library Events"),(0,o.kt)("h4",{id:"fireevent-api"},"FireEvent API"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fireEvent")," trigger DOM event: ",(0,o.kt)("inlineCode",{parentName:"li"},"fireEvent(node, event)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fireEvent.*")," helpers for default event types:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"click fireEvent.click(node)."),(0,o.kt)("li",{parentName:"ul"},"See ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/testing-library/dom-testing-library/blob/main/src/event-map.js"},"all supported events"),".")))),(0,o.kt)("h4",{id:"userevent-api"},"UserEvent API"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/ecosystem-user-event"},"User Event"),"\nprovides more advanced simulation of browser interactions\nthan the built-in ",(0,o.kt)("inlineCode",{parentName:"p"},"fireEvent method"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @testing-library/user-event @testing-library/dom\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\n\ntest('click', () => {\n  render(\n    <div>\n      <label htmlFor=\"checkbox\">Check</label>\n      <input id=\"checkbox\" type=\"checkbox\" />\n    </div>\n  );\n\n  userEvent.click(screen.getByText('Check'));\n  expect(screen.getByLabelText('Check')).toBeChecked();\n});\n")),(0,o.kt)("h3",{id:"react-hooks-testing-library"},"React Hooks Testing Library"),(0,o.kt)("h4",{id:"basic-hook-testing"},"Basic Hook Testing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useCallback, useState } from 'react';\n\nexport default function useCounter(initialValue = 0) {\n  const [count, setCount] = useState(initialValue);\n  const increment = useCallback(() => setCount(x => x + 1), []);\n  const reset = useCallback(() => setCount(initialValue), [initialValue]);\n  return { count, increment, reset };\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { act, renderHook } from '@testing-library/react-hooks';\nimport useCounter from './useCounter';\n\ntest('should reset counter to updated initial value', () => {\n  const { result, rerender } = renderHook(\n    ({ initialValue }) => useCounter(initialValue),\n    {\n      initialProps: { initialValue: 0 },\n    }\n  );\n\n  rerender({ initialValue: 10 });\n\n  act(() => {\n    result.current.reset();\n  });\n\n  expect(result.current.count).toBe(10);\n});\n")),(0,o.kt)("h4",{id:"async-hook-testing"},"Async Hook Testing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import React, { useCallback, useContext, useState } from 'react';\n\nexport default function useCounter(initialValue = 0) {\n  const [count, setCount] = useState(initialValue);\n  const step = useContext(CounterStepContext);\n  const increment = useCallback(() => setCount(x => x + step), [step]);\n  const incrementAsync = useCallback(\n    () => setTimeout(increment, 100),\n    [increment]\n  );\n  const reset = useCallback(() => setCount(initialValue), [initialValue]);\n  return { count, increment, incrementAsync, reset };\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { renderHook } from '@testing-library/react-hooks';\nimport useCounter from './useCounter';\n\ntest('should increment counter after delay', async () => {\n  const { result, waitForNextUpdate } = renderHook(() => useCounter());\n  result.current.incrementAsync();\n  await waitForNextUpdate();\n  expect(result.current.count).toBe(1);\n});\n")),(0,o.kt)("h4",{id:"error-hook-testing"},"Error Hook Testing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import React, { useCallback, useContext, useState } from 'react';\n\nexport default function useCounter(initialValue = 0) {\n  const [count, setCount] = useState(initialValue);\n  const step = useContext(CounterStepContext);\n  const increment = useCallback(() => setCount(x => x + step), [step]);\n  const incrementAsync = useCallback(\n    () => setTimeout(increment, 100),\n    [increment]\n  );\n  const reset = useCallback(() => setCount(initialValue), [initialValue]);\n\n  if (count > 9000) {\n    throw new Error(\"It's over 9000!\");\n  }\n\n  return { count, increment, incrementAsync, reset };\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { act, renderHook } from '@testing-library/react-hooks';\nimport { useCounter } from './useCounter';\n\nit('should throw when over 9000', () => {\n  const { result } = renderHook(() => useCounter(9000));\n\n  act(() => {\n    result.current.increment();\n  });\n\n  expect(result.error).toEqual(Error(\"It's over 9000!\"));\n});\n")),(0,o.kt)("h3",{id:"react-testing-library-api"},"React Testing Library API"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getByXXX")," queries: common use case."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"queryByXXX")," queries: not throw error when nothing match."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"findByXXX")," queries: ",(0,o.kt)("inlineCode",{parentName:"li"},"getBy")," queries + ",(0,o.kt)("inlineCode",{parentName:"li"},"waitFor"),".")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"API"),(0,o.kt)("th",{parentName:"tr",align:null},"No Match"),(0,o.kt)("th",{parentName:"tr",align:null},"1 Match"),(0,o.kt)("th",{parentName:"tr",align:null},"1+ Match"),(0,o.kt)("th",{parentName:"tr",align:null},"Await"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"getBy"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"return"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"No")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"queryBy"),(0,o.kt)("td",{parentName:"tr",align:null},"null"),(0,o.kt)("td",{parentName:"tr",align:null},"return"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"No")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"findBy"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"return"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"getAllBy"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"array"),(0,o.kt)("td",{parentName:"tr",align:null},"array"),(0,o.kt)("td",{parentName:"tr",align:null},"No")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"queryAllBy"),(0,o.kt)("td",{parentName:"tr",align:null},"[]"),(0,o.kt)("td",{parentName:"tr",align:null},"array"),(0,o.kt)("td",{parentName:"tr",align:null},"array"),(0,o.kt)("td",{parentName:"tr",align:null},"No")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"findAllBy"),(0,o.kt)("td",{parentName:"tr",align:null},"throw"),(0,o.kt)("td",{parentName:"tr",align:null},"array"),(0,o.kt)("td",{parentName:"tr",align:null},"array"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { render, screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport TransactionCreateStepTwo from './TransactionCreateStepTwo';\n\ntest('if amount and note is entered, pay button becomes enabled', async () => {\n  render(\n    <TransactionCreateStepTwo sender={{ id: '5' }} receiver={{ id: '5' }} />\n  );\n\n  expect(await screen.findByRole('button', { name: /pay/i })).toBeDisabled();\n\n  userEvent.type(screen.getByPlaceholderText(/amount/i), '50');\n  userEvent.type(screen.getByPlaceholderText(/add a note/i), 'dinner');\n  expect(await screen.findByRole('button', { name: /pay/i })).toBeEnabled();\n});\n")),(0,o.kt)("h3",{id:"react-testing-library-reference"},"React Testing Library Reference"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testing-library.com/docs/react-testing-library/cheatsheet"},"React testing library cheat sheet"))),(0,o.kt)("h2",{id:"create-react-app"},"Create React App"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://auth0.com/blog/how-to-configure-create-react-app/"},"Custom React Scripts"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-react-app app-name --scripts-version @sabertazimi/react-scripts --use-npm\nnpm init react-app app-name --scripts-version @sabertazimi/react-scripts --use-npm\n")),(0,o.kt)("h3",{id:"create-react-app-cli"},"Create React APP CLI"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"createReactApp.js"),":"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"init"),"\n-> commander setup\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"createApp()"),"\n-> process CLI args\n-> ",(0,o.kt)("inlineCode",{parentName:"p"},"run()"),"\n-> process ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts@version")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"cra-template-xxx@version"),"\n-> install ",(0,o.kt)("inlineCode",{parentName:"p"},"react"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"react-dom"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"cra-template-xxx"),"\n-> invoke ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts init")," for further process."),(0,o.kt)("h3",{id:"react-scripts"},"React Scripts"),(0,o.kt)("h4",{id:"react-scripts-initialization"},"React Scripts Initialization"),(0,o.kt)("p",null,"Initialization in ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts/scripts/init.js"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u7528\u4e8e\u6539\u53d8\u9ed8\u8ba4 registry:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"'use strict';\n\nconst registries = {\n  npm: 'https://registry.npmjs.org',\n  yarn: 'https://registry.yarnpkg.com',\n  aliyun: 'https://registry.npm.taobao.org',\n};\n\nmodule.exports = registries;\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u81ea\u5b9a\u4e49\u5b89\u88c5\u9ed8\u8ba4\u4f9d\u8d56 (",(0,o.kt)("inlineCode",{parentName:"li"},"react"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"react-dom"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"react-router"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"redux")," etc.)"),(0,o.kt)("li",{parentName:"ul"},"\u989d\u5916\u5b89\u88c5\u6a21\u677f\u4f9d\u8d56 ",(0,o.kt)("inlineCode",{parentName:"li"},"packages.dependencies")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"cra-template/template.json")),(0,o.kt)("li",{parentName:"ul"},"Setup ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json"),":\n",(0,o.kt)("inlineCode",{parentName:"li"},"appPackage.eslintConfig"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"appPackage.browserslist"),".\n",(0,o.kt)("inlineCode",{parentName:"li"},"appPackage.dependencies"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"appPackage.scripts"),"\nand merge rest config in ",(0,o.kt)("inlineCode",{parentName:"li"},"packages")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"cra-template/template.json"),"\n(ignore `)."),(0,o.kt)("li",{parentName:"ul"},"Copy template files from ",(0,o.kt)("inlineCode",{parentName:"li"},"cra-template-xxx/template")," directory."),(0,o.kt)("li",{parentName:"ul"},"Setup git repository."),(0,o.kt)("li",{parentName:"ul"},"Install deps and devDeps list from ",(0,o.kt)("inlineCode",{parentName:"li"},"react-scripts")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"cra-template-xxx"),"."),(0,o.kt)("li",{parentName:"ul"},"Uninstall ",(0,o.kt)("inlineCode",{parentName:"li"},"cra-template-xxx")," package."),(0,o.kt)("li",{parentName:"ul"},"Setup first git commit."),(0,o.kt)("li",{parentName:"ul"},"Print available scripts."),(0,o.kt)("li",{parentName:"ul"},"Done.")),(0,o.kt)("h4",{id:"react-scripts-commands"},"React Scripts Commands"),(0,o.kt)("p",null,"Locating in ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts/scripts/"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"start.js")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"react-scripts start"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"build.js")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"react-scripts build"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"test.js")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"react-scripts test"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"eject.js")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"react-scripts eject"),".")),(0,o.kt)("h5",{id:"react-scripts-start"},"React Scripts Start"),(0,o.kt)("p",null,"When develop ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts")," locally\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts start"),",\nit will use ",(0,o.kt)("inlineCode",{parentName:"p"},"templatePath")," located in\n",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts/config/paths.js"),"\nto find local template."),(0,o.kt)("h4",{id:"react-scripts-configuration"},"React Scripts Configuration"),(0,o.kt)("p",null,"Config in ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts/config/")," directory:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"env.js"),": static environment variables."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"getHttpsConfig.js"),": get HTTPS(SSL) config."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"modules.js"),": locale modules webpack alias with ",(0,o.kt)("inlineCode",{parentName:"li"},"baseUrl"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"paths.js"),": configurable paths variables (most for Webpack config)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"webpackDevServer.config.js"),": Webpack Dev Server configuration."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"webpack.config.js"),": Webpack configuration\n(paths, deps/devDeps, plugins, loader rules etc.).")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Add support for Ant Design UI.\nconst webpackConfig = {\n  test: /\\.(js|mjs|jsx|ts|tsx)$/,\n  include: paths.appSrc,\n  loader: require.resolve('babel-loader'),\n  options: {\n    customize: require.resolve('babel-preset-react-app/webpack-overrides'),\n    plugins: [\n      [\n        require.resolve('babel-plugin-import'),\n        {\n          libraryName: 'antd',\n          libraryDirectory: 'es',\n          style: 'css',\n        },\n      ],\n    ],\n    cacheDirectory: true,\n    cacheCompression: isEnvProduction,\n    compact: isEnvProduction,\n  },\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Add Webpack bundle analyzer plugin.\nconst { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\n\nconst webpackConfig = {\n  plugins: [\n    isEnvDevelopment &&\n      new BundleAnalyzerPlugin({\n        analyzerPort: 5000,\n      }),\n  ].filter(Boolean),\n};\n")),(0,o.kt)("h3",{id:"cra-usage"},"CRA Usage"),(0,o.kt)("h4",{id:"cra-css"},"CRA CSS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"@import-normalize; /* bring in normalize.css styles */\n\n/* rest of app styles */\n")),(0,o.kt)("h4",{id:"cra-public-folder"},"CRA Public Folder"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"None of the files in public folder get post-processed or minified."),(0,o.kt)("li",{parentName:"ul"},"Missing files will not be called at compilation time,\nand will cause ",(0,o.kt)("inlineCode",{parentName:"li"},"404")," errors for your users."),(0,o.kt)("li",{parentName:"ul"},"Result filenames won\u2019t include ",(0,o.kt)("inlineCode",{parentName:"li"},"content hashes"),"\nso you\u2019ll need to add query arguments or rename them every time they change.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<link rel="icon" href="%PUBLIC_URL%/favicon.ico" />\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'class Component {\n  render() {\n    // Note: this is an escape hatch and should be used sparingly!\n    // Normally recommend using `import` for getting asset URLs\n    // as described in \u201cAdding Images and Fonts\u201d section.\n    return <img src={`${process.env.PUBLIC_URL}/img/logo.png`} alt="Here" />;\n  }\n}\n')),(0,o.kt)("h4",{id:"cra-environment-variables"},"CRA Environment Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create custom environment variables beginning with ",(0,o.kt)("inlineCode",{parentName:"li"},"REACT_APP_"),".\nAny other variables except ",(0,o.kt)("inlineCode",{parentName:"li"},"NODE_ENV")," will be ignored."),(0,o.kt)("li",{parentName:"ul"},"HTML access environment variables ",(0,o.kt)("inlineCode",{parentName:"li"},"%REACT_APP_XXX%"),"."),(0,o.kt)("li",{parentName:"ul"},"JavaScript access environment variables via ",(0,o.kt)("inlineCode",{parentName:"li"},"process.env.REACT_APP_XXX"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/motdotla/dotenv"},(0,o.kt)("inlineCode",{parentName:"a"},".env")),"\nfile define permanent environment variables:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm start"),": ",(0,o.kt)("inlineCode",{parentName:"li"},".env.development.local"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env.local"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env.development"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm run build"),": ",(0,o.kt)("inlineCode",{parentName:"li"},".env.production.local"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env.local"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env.production"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm test"),": ",(0,o.kt)("inlineCode",{parentName:"li"},".env.test.local"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env.test"),">",(0,o.kt)("inlineCode",{parentName:"li"},".env"),"."))),(0,o.kt)("li",{parentName:"ul"},"Environment variables ",(0,o.kt)("a",{parentName:"li",href:"https://create-react-app.dev/docs/advanced-configuration"},"list"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"GENERATE_SOURCEMAP=false\nREACT_APP_NOT_SECRET_CODE=abcdef\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<link rel="icon" href="%PUBLIC_URL%/favicon.ico" />\n<title>%REACT_APP_WEBSITE_NAME%</title>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const App = () => (\n  <div>\n    <small>\n      You are running this application in <b>{process.env.NODE_ENV}</b> mode.\n    </small>\n    <form>\n      <input\n        type="hidden"\n        defaultValue={process.env.REACT_APP_NOT_SECRET_CODE}\n      />\n    </form>\n  </div>\n);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<div>\n  <small>You are running this application in <b>development</b> mode.</small>\n  <form>\n    <input type="hidden" value="abcdef" />\n  </form>\n</div>\n')),(0,o.kt)("h4",{id:"cra-code-splitting"},"CRA Code Splitting"),(0,o.kt)("p",null,"Code splitting for ",(0,o.kt)("a",{parentName:"p",href:"https://create-react-app.dev/docs/production-build"},"production build"),"\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"import('dep').then();"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // Code splitting into separate chunk\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n")),(0,o.kt)("h4",{id:"cra-service-worker"},"CRA Service Worker"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cra-template/pwa"},"PWA Template"))),(0,o.kt)("h4",{id:"cra-deployment"},"CRA Deployment"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://facebook.github.io/create-react-app/docs/deployment"},"Official Documentation"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://medium.com/@svinkle/how-to-deploy-a-react-app-to-a-subdirectory-f694d46427c1"},"Deploy Subdirectory"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Cache-Control: max-age=31536000")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"build/static")," assets,\n",(0,o.kt)("inlineCode",{parentName:"li"},"Cache-Control: no-cache")," for everything else.\n",(0,o.kt)("inlineCode",{parentName:"li"},"build/static")," file contents hash is embedded into the filename."),(0,o.kt)("li",{parentName:"ul"},"Change ",(0,o.kt)("inlineCode",{parentName:"li"},"homepage")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"homepage": "."'),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"homepage": "https://example.com/relative/path/"'),"."))),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"path={'${process.env.PUBLIC_URL}/about'}"),"\nin ",(0,o.kt)("inlineCode",{parentName:"li"},"Routes.js")," when using ",(0,o.kt)("inlineCode",{parentName:"li"},"react-router-dom"),"."),(0,o.kt)("li",{parentName:"ul"},"Or use ",(0,o.kt)("inlineCode",{parentName:"li"},"basename")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"react-router@^4"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// renders <a href="/calendar/today">\nfunction App() {\n  return (\n    <BrowserRouter basename="/calendar">\n      <Link to="/today" />\n    </BrowserRouter>\n  );\n}\n')),(0,o.kt)("h4",{id:"spa-deployment"},"SPA Deployment"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deployment services ",(0,o.kt)("a",{parentName:"li",href:"https://hiddedevries.nl/en/blog/2020-06-27-how-deployment-services-make-client-side-routing-work"},"guide"),".")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://vercel.com/support/articles/how-do-i-use-the-ignored-build-step-field-on-vercel"},(0,o.kt)("inlineCode",{parentName:"a"},"vercel.json")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [{ "src": "/[^.]+", "dest": "/", "status": 200 }]\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    { "handle": "filesystem" },\n    { "src": "/.*", "dest": "/index.html" }\n  ]\n}\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps"},"Netlify"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/*    /index.html   200\n")),(0,o.kt)("p",null,"GitHub Pages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# 404 fallback\nln -s index.html 404.html\n")),(0,o.kt)("h3",{id:"custom-cra"},"Custom CRA"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Custom ",(0,o.kt)("inlineCode",{parentName:"li"},"packages/cra-template-*"),": change HTML/CSS/JS boilerplate."),(0,o.kt)("li",{parentName:"ul"},"Custom ",(0,o.kt)("inlineCode",{parentName:"li"},"packages/react-scripts/config/"),":\nchange paths, deps/devDeps, plugins, loader rules etc."),(0,o.kt)("li",{parentName:"ul"},"Custom ",(0,o.kt)("inlineCode",{parentName:"li"},"packages/react-scripts/scripts/"),": change react-scripts CLI behaviors.")),(0,o.kt)("h4",{id:"cra-monorepo"},"CRA MonoRepo"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"babel-preset-react-app"),": babel preset configuration."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cra-template"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"cra-template-typescript"),": CRA default templates."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"eslint-config-react-app"),": eslint configuration."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"react-app-polyfill"),": polyfills for various browsers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"react-dev-utils"),":\nmost utility functions for paths, helpers, middleware, and webpack plugins.")),(0,o.kt)("h4",{id:"custom-react-scripts"},"Custom React Scripts"),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"Create React App"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/create-react-app/blob/main/packages/create-react-app/createReactApp.js"},"code"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const templatesVersionMinimum = '3.3.0';\n\n// Assume compatibility if we can't test the version.\nif (!semver.valid(packageVersion)) {\n  packageVersion = templatesVersionMinimum;\n}\n\n// Only support templates when used alongside new react-scripts versions.\nconst supportsTemplates = semver.gte(packageVersion, templatesVersionMinimum);\nif (supportsTemplates) {\n  allDependencies.push(templateToInstall);\n}\n")),(0,o.kt)("p",null,"Due to version checking for template feature,\ncustom react scripts should\npublish with version ",(0,o.kt)("inlineCode",{parentName:"p"},"^3.3.0")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"^4.x.x"),"."),(0,o.kt)("h4",{id:"custom-cra-templates"},"Custom CRA Templates"),(0,o.kt)("p",null,"HTML/CSS/JSX boilerplate in ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts/template/")," directory,\nnow Templates are always named in the format cra-template-","[template-name]","\nin ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/cra-template")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/cra-template-typescript"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-react-app my-app --template [template-name]\n")),(0,o.kt)("p",null,"Dependencies in ",(0,o.kt)("inlineCode",{parentName:"p"},"template.json"),"\nwill bump to latest minor version automatically."),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts/scripts/utils/verifyTypeScriptSetup.js"),",\nif template ",(0,o.kt)("inlineCode",{parentName:"p"},"src")," don't exist ",(0,o.kt)("inlineCode",{parentName:"p"},"react-app-env.d.ts")," file,\nit will create automatically with ",(0,o.kt)("inlineCode",{parentName:"p"},"reference")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"react-scripts")," types:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// Reference `react-scripts` types\nif (!fs.existsSync(paths.appTypeDeclarations)) {\n  fs.writeFileSync(\n    paths.appTypeDeclarations,\n    `/// <reference types="react-scripts" />${os.EOL}`\n  );\n}\n')),(0,o.kt)("h2",{id:"react-internationalization"},"React Internationalization"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/XLIFF"},"XLIFF"),":\nXML Localization Interchange File Format."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/unicode-org/icu"},"ICU"),":\nInternational Components for Unicode."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/wooorm/bcp-47"},"BCP 47"),":\nIETF BCP 47 language tag.")),(0,o.kt)("h3",{id:"simple-i18n-implementation"},"Simple i18n Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// locale/zh-CN.js\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  hello: '\u4f60\u597d\uff0c{name}',\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// locale/en-US.js\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  hello: 'Hello\uff0c{name}',\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import IntlMessageFormat from 'intl-messageformat';\nimport zh from '../locale/zh';\nimport en from '../locale/en';\nconst MESSAGES = { en, zh };\nconst LOCALE = 'en'; // \u8fd9\u91cc\u5199\u4e0a\u51b3\u5b9a\u8bed\u8a00\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u53ef\u4ee5\u4ece cookie \u5224\u65ad\u8bed\u8a00\n\nclass Intl {\n  get(key, defaultMessage, options) {\n    let msg = MESSAGES[LOCALE][key];\n\n    if (msg == null) {\n      if (defaultMessage != null) {\n        return defaultMessage;\n      }\n\n      return key;\n    }\n\n    if (options) {\n      msg = new IntlMessageFormat(msg, LOCALE);\n      return msg.format(options);\n    }\n\n    return msg;\n  }\n}\n\nexport default Intl;\n")),(0,o.kt)("h3",{id:"react-i18n-library"},"React i18n Library"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/alibaba/react-intl-universal"},"react-intl"))),(0,o.kt)("h3",{id:"i18n-solution"},"i18n Solution"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://mp.weixin.qq.com/s/QfTf02GrEXrbCnQswnWFuQ"},"\u5947\u5b89\u4fe1\u524d\u7aef\u56fd\u9645\u5316\u5e73\u53f0"))),(0,o.kt)("h2",{id:"styled-component"},"Styled Component"),(0,o.kt)("h3",{id:"shared-css-styles"},"Shared CSS Styles"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// Import React.js, styled-components and css\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nconst container = document.querySelector('.container');\n\n// Define new const with bold style\nconst headingStyle = css`\n  font-weight: bold;\n`;\n\n// Define typography styles\nconst H1 = styled.h1`\n  font-size: 54px;\n  // Using headingStyle const\n  ${headingStyle}\n`;\nconst H2 = styled.h2`\n  font-size: 36px;\n  // Using headingStyle const\n  ${headingStyle}\n`;\nconst H3 = styled.h3`\n  font-size: 24px;\n  // Using headingStyle const\n  ${headingStyle}\n`;\nconst H4 = styled.h4`\n  font-size: 16px;\n  // Using headingStyle const\n  ${headingStyle}\n`;\nconst H5 = styled.h5`\n  font-size: 14px;\n  // Using headingStyle const\n  ${headingStyle}\n`;\nconst H6 = styled.h6`\n  font-size: 12px;\n  // Using headingStyle const\n  ${headingStyle}\n`;\nconst Text = styled.p`\n  font-size: 16px;\n`;\nconst Small = styled.small`\n  font-size: 80%;\n`;\n\n// Use our styles\nconst WrapperContainer = () => (\n  <div>\n    <H1>Heading h1</H1>\n    <H2>Heading h2</H2>\n    <H3>Heading h3</H3>\n    <H4>Heading h4</H4>\n    <H5>Heading h5</H5>\n    <H6>Heading h6</H6>\n    <Text>Body text</Text>\n    <Small>Small text</Small>\n  </div>\n);\n\nReactDOM.render(<WrapperContainer />, container);\n")),(0,o.kt)("h3",{id:"styled-component-extension"},"Styled Component Extension"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// Import React.js and styled-components\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst container = document.querySelector('.container');\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  font-size: 16px;\n  color: #fff;\n  border: 0;\n  border-radius: 35px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  cursor: pointer;\n`;\n\n// Using extend to create a red variant of the button\nconst RedButton = Button.extend`\n  background-color: #e74c3c;\n`;\n\n// Using extend to create a green variant of the button\nconst GreenButton = Button.extend`\n  background-color: #2ecc71;\n`;\n\n// Use our styles\nconst WrapperContainer = () => (\n  <div>\n    <Button>Default button</Button>\n    <RedButton>Red button</RedButton>\n    <GreenButton>Green button</GreenButton>\n  </div>\n);\n\nReactDOM.render(<WrapperContainer />, container);\n")),(0,o.kt)("h3",{id:"styled-component-props"},"Styled Component Props"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// Import React.js, styled-components and css\nimport React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst container = document.querySelector('.container');\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  font-size: 16px;\n  border: 0;\n  border-radius: 35px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  cursor: pointer;\n\n  // Using props to create a gray variant of the button\n  ${props =>\n    props.gray &&\n    css`\n      background-color: #95a5a6;\n    `}\n  // Using props to create a green variant of the button\n  ${props =>\n    props.green &&\n    css`\n      background-color: #2ecc71;\n    `}\n  // Using props to create a red variant of the button\n  ${props =>\n    props.red &&\n    css`\n      background-color: #e74c3c;\n    `}\n  // We can also use a ternary operator for \"binary\" changes\n  color: ${props => (props.gray ? '#2c3e50' : '#fff')};\n`;\n\nconst WrapperContainer = () => (\n  <div>\n    <Button>Default button</Button>\n    {/* Button with prop \"red\" */}\n    <Button red>Red button</Button>\n    {/* Button with prop \"green\" */}\n    <Button green>Green button</Button>\n  </div>\n);\n\nReactDOM.render(<WrapperContainer />, container);\n")),(0,o.kt)("h2",{id:"micro-frontends"},"Micro Frontends"),(0,o.kt)("p",null,"\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"single-spa")," \u5305\u88c5\u7684\u4e3b\u5e94\u7528\u662f\u4e00\u4e2a\u57fa\u5ea7,\n\u5b83\u63d0\u4f9b\u76f8\u5e94\u7684\u534f\u8bae,\n\u5b50\u5e94\u7528\u6309\u7167\u534f\u8bae\u8fdb\u884c\u5305\u88c5\u5c31\u53ef\u4ee5\u63a5\u5165\u4e3b\u5e94\u7528.\n\u4e3b\u5e94\u7528\u5c31\u50cf\u63d2\u5ea7,\n\u5b50\u5e94\u7528\u5c31\u50cf\u4e0d\u540c\u7684\u7535\u5668,\n\u53ea\u8981\u9075\u5faa\u67d0\u79cd\u534f\u8bae\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u53ef\u63d2\u62d4\u64cd\u4f5c."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Single SPA Lifecycle")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Register."),(0,o.kt)("li",{parentName:"ul"},"Load."),(0,o.kt)("li",{parentName:"ul"},"Bootstrap."),(0,o.kt)("li",{parentName:"ul"},"Mount."),(0,o.kt)("li",{parentName:"ul"},"Unmount."),(0,o.kt)("li",{parentName:"ul"},"Unload.")))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"single-spa")," \u5b50\u9879\u76ee\u7684\u7684\u6302\u8f7d\u3001\u66f4\u65b0\u3001\u5378\u8f7d\u7b49\u64cd\u4f5c,\n\u5e76\u4e0d\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"single-spa")," \u539f\u751f\u63d0\u4f9b\u7684,\n\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u6765\u81ea\u884c\u5b9e\u73b0\u5b50\u5e94\u7528\u7684\u6302\u8f7d, \u5378\u8f7d\u53ca\u66f4\u65b0\u7b49\u903b\u8f91.\n",(0,o.kt)("inlineCode",{parentName:"p"},"single-spa")," \u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"reroute")," \u548c\u8def\u7531\u63a7\u5236\u6765\u8c03\u7528\u5b50\u5e94\u7528.\n\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"single-spa")," \u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d,\n\u9700\u8981\u81ea\u5df1\u624b\u52a8\u53bb\u5199\u8c03\u7528\u5b50\u5e94\u7528\u7684\u65b9\u6cd5."),(0,o.kt)("h3",{id:"application-entrypoint"},"Application EntryPoint"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"HTML Entry (",(0,o.kt)("inlineCode",{parentName:"li"},"import-html-entry")," from ",(0,o.kt)("inlineCode",{parentName:"li"},"qiankun"),")."),(0,o.kt)("li",{parentName:"ul"},"JavaScript Entry.")),(0,o.kt)("h3",{id:"styles-isolation"},"Styles Isolation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Shadow DOM container."),(0,o.kt)("li",{parentName:"ul"},"CSS module."),(0,o.kt)("li",{parentName:"ul"},"CSS scoped namespace."),(0,o.kt)("li",{parentName:"ul"},"CSS selector renaming."),(0,o.kt)("li",{parentName:"ul"},"CSS in JS.")),(0,o.kt)("h3",{id:"scripts-isolation"},"Scripts Isolation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Snapshot sandbox: \u7c7b\u4f3c\u4e2d\u65ad\u6062\u590d\u673a\u5236, \u5907\u4efd\u5feb\u7167 -> \u5b50\u5e94\u7528\u6302\u8f7d/\u8fd0\u884c/\u5378\u8f7d -> \u6062\u590d\u5feb\u7167."),(0,o.kt)("li",{parentName:"ul"},"Proxy sandbox: ",(0,o.kt)("inlineCode",{parentName:"li"},"window")," proxy (",(0,o.kt)("inlineCode",{parentName:"li"},"fakeWindow")," for every sub-app)."),(0,o.kt)("li",{parentName:"ul"},"Runtime sandbox.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"class SnapshotSandbox {\n  constructor() {\n    this.proxy = window; // window\u5c5e\u6027.\n    this.modifyPropsMap = {}; // \u8bb0\u5f55\u5728 window \u4e0a\u7684\u4fee\u6539.\n  }\n\n  active() {\n    this.windowSnapshot = {}; // \u5feb\u7167.\n\n    for (const prop in window) {\n      if (window.hasOwn(prop)) {\n        this.windowSnapshot[prop] = window[prop];\n      }\n\n      Object.keys(this.modifyPropsMap).forEach(p => {\n        window[p] = this.modifyPropsMap[p];\n      });\n    }\n  }\n\n  inactive() {\n    for (const prop in window) {\n      if (window.hasOwn(prop)) {\n        if (window[prop] !== this.windowSnapshot[prop]) {\n          this.modifyPropsMap[prop] = window[prop];\n          window[prop] = this.windowSnapshot[prop];\n        }\n      }\n    }\n  }\n}\n")),(0,o.kt)("h3",{id:"application-communication"},"Application Communication"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Pub-Sub Pattern."),(0,o.kt)("li",{parentName:"ul"},"Callback registration."),(0,o.kt)("li",{parentName:"ul"},"Global store.")),(0,o.kt)("h2",{id:"interviews"},"Interviews"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/semlinker/reactjs-interview-questions"},"React Interview Questions"))))}m.isMDXComponent=!0},5813:function(e,n,t){n.Z=t.p+"assets/images/ReactCorePackages-08e2adc3bb013c66966f9a71e93715c0.png"},2542:function(e,n,t){n.Z=t.p+"assets/images/ReactFiberTrees-c1b57b3b1ce1239d058a44a8d33f0ab4.png"},6004:function(e,n,t){n.Z=t.p+"assets/images/ReactFiberWorkLoop-59263ed5fab0b0ece74a9201cde6ccee.png"},4437:function(e,n,t){n.Z=t.p+"assets/images/ReactSyntheticEvents-4c0afc0525ad26f8ec7ec03816133710.png"}}]);