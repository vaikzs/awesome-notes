"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[8184],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),u=o(n),k=l,c=u["".concat(p,".").concat(k)]||u[k]||s[k]||r;return n?a.createElement(c,i(i({ref:t},m),{},{components:n})):a.createElement(c,i({ref:t},m))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=u;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:l,i[1]=d;for(var o=2;o<r;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},460:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return d},metadata:function(){return o},toc:function(){return s}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],d={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Language","C"]},p="C Basic Notes",o={unversionedId:"language/c/cBasicNotes",id:"language/c/cBasicNotes",title:"C Basic Notes",description:"\u7f16\u7a0b\u4e60\u60ef",source:"@site/notes/language/c/cBasicNotes.md",sourceDirName:"language/c",slug:"/language/c/cBasicNotes",permalink:"/awesome-notes/language/c/cBasicNotes",editUrl:"https://github.com/sabertazimi/awesome-notes/edit/main/notes/language/c/cBasicNotes.md",tags:[{label:"Language",permalink:"/awesome-notes/tags/language"},{label:"C",permalink:"/awesome-notes/tags/c"}],version:"current",lastUpdatedBy:"sabertazimi",lastUpdatedAt:1649250539,formattedLastUpdatedAt:"4/6/2022",frontMatter:{author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Language","C"]},sidebar:"sidebar",previous:{title:"Assembly Basic Notes",permalink:"/awesome-notes/language/assembly/assemblyBasicNotes"},next:{title:"C++ Basic Notes",permalink:"/awesome-notes/language/cpp/cppBasicNotes"}},m={},s=[{value:"\u7f16\u7a0b\u4e60\u60ef",id:"\u7f16\u7a0b\u4e60\u60ef",level:2},{value:"Macro(\u5b8f)",id:"macro\u5b8f",level:3},{value:"\u62ec\u53f7",id:"\u62ec\u53f7",level:4},{value:"\u7279\u6b8a\u7528\u6cd5",id:"\u7279\u6b8a\u7528\u6cd5",level:4},{value:"\u5934\u6587\u4ef6",id:"\u5934\u6587\u4ef6",level:3},{value:"\u7f3a\u5c11\u6807\u51c6\u5e93\u5934\u6587\u4ef6",id:"\u7f3a\u5c11\u6807\u51c6\u5e93\u5934\u6587\u4ef6",level:4},{value:"\u7f3a\u5c11\u51fd\u6570\u539f\u578b",id:"\u7f3a\u5c11\u51fd\u6570\u539f\u578b",level:5},{value:"\u8986\u76d6\u6807\u51c6\u5e93\u51fd\u6570\u539f\u578b",id:"\u8986\u76d6\u6807\u51c6\u5e93\u51fd\u6570\u539f\u578b",level:5},{value:"\u7f3a\u5c11\u5b8f\u5b9a\u4e49",id:"\u7f3a\u5c11\u5b8f\u5b9a\u4e49",level:5},{value:"\u9632\u6b62\u91cd\u590d\u5305\u62ec\u5934\u6587\u4ef6",id:"\u9632\u6b62\u91cd\u590d\u5305\u62ec\u5934\u6587\u4ef6",level:4},{value:"\u5934\u6587\u4ef6\u4e0d\u7533\u8bf7\u5185\u5b58\u5355\u5143",id:"\u5934\u6587\u4ef6\u4e0d\u7533\u8bf7\u5185\u5b58\u5355\u5143",level:4},{value:"\u68c0\u67e5",id:"\u68c0\u67e5",level:3},{value:"\u8fb9\u754c\u68c0\u67e5",id:"\u8fb9\u754c\u68c0\u67e5",level:4},{value:"\u6307\u9488\u68c0\u67e5",id:"\u6307\u9488\u68c0\u67e5",level:4},{value:"\u7c7b\u578b\u8f6c\u6362",id:"\u7c7b\u578b\u8f6c\u6362",level:2},{value:"\u673a\u5668\u7801\u8f6c\u6362",id:"\u673a\u5668\u7801\u8f6c\u6362",level:3},{value:"Pointer Tips and Best Practice",id:"pointer-tips-and-best-practice",level:2},{value:"Error Prone Pointers",id:"error-prone-pointers",level:3},{value:"Debugging Malloc",id:"debugging-malloc",level:3},{value:"\u5904\u7406 void \u6307\u9488",id:"\u5904\u7406-void-\u6307\u9488",level:4},{value:"\u5229\u7528 void \u6307\u9488\u5b9e\u73b0 Generic",id:"\u5229\u7528-void-\u6307\u9488\u5b9e\u73b0-generic",level:3},{value:"\u901a\u7528\u578b Swap \u51fd\u6570",id:"\u901a\u7528\u578b-swap-\u51fd\u6570",level:4},{value:"\u901a\u7528\u578b Search Function",id:"\u901a\u7528\u578b-search-function",level:4},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:5},{value:"int \u5b9e\u4f8b",id:"int-\u5b9e\u4f8b",level:5},{value:"string \u5b9e\u4f8b",id:"string-\u5b9e\u4f8b",level:5},{value:"\u6cdb\u578b\u6570\u636e\u7ed3\u6784",id:"\u6cdb\u578b\u6570\u636e\u7ed3\u6784",level:4},{value:"\u901a\u7528\u578b\u6808",id:"\u901a\u7528\u578b\u6808",level:5},{value:"Tools",id:"tools",level:4},{value:"Useful Functions",id:"useful-functions",level:2},{value:"memset",id:"memset",level:3},{value:"free",id:"free",level:3},{value:"Strings",id:"strings",level:3},{value:"strdup",id:"strdup",level:4},{value:"strchr and strstr",id:"strchr-and-strstr",level:4},{value:"strtok",id:"strtok",level:4},{value:"strcasecmp",id:"strcasecmp",level:4},{value:"getopt",id:"getopt",level:4},{value:"I/O",id:"io",level:3},{value:"String Scanf",id:"string-scanf",level:4},{value:"Exceptions",id:"exceptions",level:3},{value:"Process",id:"process",level:3},{value:"Fork and Execve",id:"fork-and-execve",level:4},{value:"Other",id:"other",level:4},{value:"Threads",id:"threads",level:3},{value:"PThread",id:"pthread",level:4},{value:"Semaphore",id:"semaphore",level:4},{value:"\u8054\u5408\u4f53",id:"\u8054\u5408\u4f53",level:2},{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"\u5e38\u7528\u7f29\u5199\u8bcd",id:"\u5e38\u7528\u7f29\u5199\u8bcd",level:3},{value:"Header File",id:"header-file",level:3},{value:"C Standard Library",id:"c-standard-library",level:2},{value:"Assert",id:"assert",level:3},{value:"Types",id:"types",level:3},{value:"Errno",id:"errno",level:3},{value:"Float and Limits",id:"float-and-limits",level:3},{value:"Locale",id:"locale",level:3},{value:"Math",id:"math",level:3},{value:"SetJMP",id:"setjmp",level:3},{value:"Signal",id:"signal",level:3},{value:"Stdarg",id:"stdarg",level:3},{value:"Stddef",id:"stddef",level:3},{value:"String",id:"string",level:3},{value:"GDB Tutorial",id:"gdb-tutorial",level:2},{value:"Basic Command",id:"basic-command",level:3},{value:"GDB Set Command",id:"gdb-set-command",level:3},{value:"GDB Shell",id:"gdb-shell",level:3},{value:"GDB Assemble",id:"gdb-assemble",level:3},{value:"GDB Core Dump",id:"gdb-core-dump",level:4},{value:"GDB Disasm",id:"gdb-disasm",level:4},{value:"GDB Stack Frame",id:"gdb-stack-frame",level:3},{value:"GCC",id:"gcc",level:2},{value:"Awesome Tools",id:"awesome-tools",level:2}],u={toc:s};function k(e){var t=e.components,d=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},u,d,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"c-basic-notes"},"C Basic Notes"),(0,r.kt)("h2",{id:"\u7f16\u7a0b\u4e60\u60ef"},"\u7f16\u7a0b\u4e60\u60ef"),(0,r.kt)("h3",{id:"macro\u5b8f"},"Macro(\u5b8f)"),(0,r.kt)("h4",{id:"\u62ec\u53f7"},"\u62ec\u53f7"),(0,r.kt)("p",null,"\u5c3d\u91cf\u6dfb\u52a0\u8db3\u591f\u7684\u62ec\u53f7,\u51cf\u5c11\u5b8f\u5b9a\u4e49\u7684\u4e8c\u4e49\u6027"),(0,r.kt)("h4",{id:"\u7279\u6b8a\u7528\u6cd5"},"\u7279\u6b8a\u7528\u6cd5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"#"),": \u5b57\u7b26\u4e32\u5316"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"##"),": \u5f3a\u5236\u8fde\u63a5\u7b26"),(0,r.kt)("li",{parentName:"ul"},"do { ... } while (0): \u9632\u6b62\u8bed\u6cd5\u9519\u8bef")),(0,r.kt)("h3",{id:"\u5934\u6587\u4ef6"},"\u5934\u6587\u4ef6"),(0,r.kt)("h4",{id:"\u7f3a\u5c11\u6807\u51c6\u5e93\u5934\u6587\u4ef6"},"\u7f3a\u5c11\u6807\u51c6\u5e93\u5934\u6587\u4ef6"),(0,r.kt)("h5",{id:"\u7f3a\u5c11\u51fd\u6570\u539f\u578b"},"\u7f3a\u5c11\u51fd\u6570\u539f\u578b"),(0,r.kt)("p",null,"\u94fe\u63a5\u6210\u529f - \u94fe\u63a5\u5668\u81ea\u52a8\u88c5\u8f7d\u5e93\u51fd\u6570\uff0c\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u6267\u884c ",(0,r.kt)("strong",{parentName:"p"},"\u53ea\u8b66\u544a\uff0c\u4e0d\u62a5\u9519")),(0,r.kt)("h5",{id:"\u8986\u76d6\u6807\u51c6\u5e93\u51fd\u6570\u539f\u578b"},"\u8986\u76d6\u6807\u51c6\u5e93\u51fd\u6570\u539f\u578b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u8fc7\u591a\u53c2\u6570\u539f\u578b\uff0c\u8c03\u7528\u65f6\u4f20\u5165\u8fc7\u591a\u53c2\u6570\uff0c\u51fd\u6570\u6b63\u786e\u6267\u884c(\u65e0\u89c6\u591a\u4f59\u53c2\u6570)"),(0,r.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u7f3a\u5c11\u53c2\u6570\u539f\u578b\uff0c\u8c03\u7528\u65f6\u4f20\u5165\u4e0d\u5b8c\u6574\u53c2\u6570\uff0c\u51fd\u6570\u9519\u8bef\u6267\u884c\uff0c\u8bef\u628a 0xc(%ebp)\uff0c0x10(%ebp)\uff0c\u2026\u7b49\u66f4\u591a\u5185\u5b58\u5355\u5143\u5f53\u4f5c\u51fd\u6570\u53c2\u6570")),(0,r.kt)("h5",{id:"\u7f3a\u5c11\u5b8f\u5b9a\u4e49"},"\u7f3a\u5c11\u5b8f\u5b9a\u4e49"),(0,r.kt)("p",null,"\u94fe\u63a5\u5931\u8d25 - \u5b8f\u5b9a\u4e49\u4f1a\u88ab\u8bc6\u522b\u4e3a\u51fd\u6570\uff0c\u4f46\u94fe\u63a5\u5668\u67e5\u627e\u4e0d\u5230\u76f8\u5e94\u5e93\u51fd\u6570"),(0,r.kt)("h4",{id:"\u9632\u6b62\u91cd\u590d\u5305\u62ec\u5934\u6587\u4ef6"},"\u9632\u6b62\u91cd\u590d\u5305\u62ec\u5934\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef _FILENAME_H_\n#define _FILENAME_H_\n\n...\n...\n...\n\n#endif\n")),(0,r.kt)("h4",{id:"\u5934\u6587\u4ef6\u4e0d\u7533\u8bf7\u5185\u5b58\u5355\u5143"},"\u5934\u6587\u4ef6\u4e0d\u7533\u8bf7\u5185\u5b58\u5355\u5143"),(0,r.kt)("p",null,"\u9664\u4e86\u5168\u5c40\u5171\u4eab\u9759\u6001\u53d8\u91cf\u5916, \u5934\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\u4e0d\u5141\u8bb8\u7533\u8bf7\u5b9e\u9645\u7684\u5185\u5b58\u5355\u5143"),(0,r.kt)("h3",{id:"\u68c0\u67e5"},"\u68c0\u67e5"),(0,r.kt)("h4",{id:"\u8fb9\u754c\u68c0\u67e5"},"\u8fb9\u754c\u68c0\u67e5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7a7a/\u6ee1\u6808\u68c0\u67e5"),(0,r.kt)("li",{parentName:"ul"},"\u53c2\u6570\u5408\u6cd5\u6027\u68c0\u67e5 e.g elemSize > 0 \u68c0\u67e5")),(0,r.kt)("h4",{id:"\u6307\u9488\u68c0\u67e5"},"\u6307\u9488\u68c0\u67e5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Alloctor \u5931\u8d25\uff0c\u9700\u6dfb\u52a0 NULL \u68c0\u67e5:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"assert"),(0,r.kt)("li",{parentName:"ul"},"exit")))),(0,r.kt)("h2",{id:"\u7c7b\u578b\u8f6c\u6362"},"\u7c7b\u578b\u8f6c\u6362"),(0,r.kt)("h3",{id:"\u673a\u5668\u7801\u8f6c\u6362"},"\u673a\u5668\u7801\u8f6c\u6362"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6709\u7b26\u53f7\u7c7b\u578b\u8f6c\u6362: \u8fdb\u884c\u7b26\u53f7\u6269\u5c55"),(0,r.kt)("li",{parentName:"ul"},"\u65e0\u7b26\u53f7\u7c7b\u578b\u8f6c\u6362: \u8fdb\u884c\u96f6\u6269\u5c55")),(0,r.kt)("h2",{id:"pointer-tips-and-best-practice"},"Pointer Tips and Best Practice"),(0,r.kt)("h3",{id:"error-prone-pointers"},"Error Prone Pointers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 37;\nfloat f = *(float *)&i;\n\nfloat f = 7.0;\nshort s = *(short *)&f;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u60ac\u6302\u6307\u9488"),(0,r.kt)("li",{parentName:"ul"},"\u672a\u521d\u59cb\u5316"),(0,r.kt)("li",{parentName:"ul"},"\u6539\u5199\u672a\u77e5\u533a\u57df",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4e0b\u6807\u8d8a\u754c"),(0,r.kt)("li",{parentName:"ul"},"\u5185\u5b58\u4e0a\u6ea2 e.g ",(0,r.kt)("inlineCode",{parentName:"li"},"gets(string);")))),(0,r.kt)("li",{parentName:"ul"},"\u6307\u9488\u76f8\u5173\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u6027"),(0,r.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},"\u91cd\u590d\u91ca\u653e\u5185\u5b58\u7a7a\u95f4"),(0,r.kt)("li",{parentName:"ul"},"\u5185\u5b58\u6cc4\u6f0f e.g \u672a\u91ca\u653e\u7a7a\u95f4/\u672a\u91ca\u653e\u90e8\u5206\u6df1\u5ea6\u7a7a\u95f4(\u591a\u7ef4\u6570\u7ec4)"),(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u80fd\u5f15\u7528 void \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5355\u5143")),(0,r.kt)("h3",{id:"debugging-malloc"},"Debugging Malloc"),(0,r.kt)("h4",{id:"\u5904\u7406-void-\u6307\u9488"},"\u5904\u7406 void \u6307\u9488"),(0,r.kt)("p",null,"Tips: \u4e2d\u9014\u8fd0\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362,\u4f7f\u5f97 void \u6307\u9488\u53ef\u4ee5\u6267\u884c\u6307\u9488\u52a0\u51cf\u8fd0\u7b97"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void *target = (char *)void_pointer + ...;\n")),(0,r.kt)("h3",{id:"\u5229\u7528-void-\u6307\u9488\u5b9e\u73b0-generic"},"\u5229\u7528 void \u6307\u9488\u5b9e\u73b0 Generic"),(0,r.kt)("h4",{id:"\u901a\u7528\u578b-swap-\u51fd\u6570"},"\u901a\u7528\u578b Swap \u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void swap(void *vp1, void *vp2, int size) {\n    char buffer[size];\n    memcpy(buffer, vp1, size);\n    memcpy(vp1, vp2, size);\n    memcpy(vp2, buffer, size);\n}\n")),(0,r.kt)("h4",{id:"\u901a\u7528\u578b-search-function"},"\u901a\u7528\u578b Search Function"),(0,r.kt)("h5",{id:"\u5b9e\u73b0"},"\u5b9e\u73b0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void *lsearch(void *key, void *base, int n, int elemSize,\n  int (*cmp_fn)(void *, void *)) {\n    for (int i = 0;i < n;i++) {\n        void * elemAddr = (char *)base + i * elemSize;\n        if (cmp_fn(key, elemAddr) == 0) {\n            return elemAddr;\n        }\n    }\n\n    return NULL;\n}\n")),(0,r.kt)("h5",{id:"int-\u5b9e\u4f8b"},"int \u5b9e\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int IntCmp(void *elem1, void *elem2) {\n    int *ip1 = (int *)elem1;\n    int *ip2 = (int *)elem2;\n    return *ip1 - *ip2;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int array[] = {4, 2, 3, 7, 11, 6},\n    size = 6,\n    target = 7;\n\n// \u5e94\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\nint * found = (int *)lsearch(&target, array, 6, sizeof(int), IntCmp);\n\nif (found == NULL) {\n    printf("Not Found");\n} else {\n    printf("Found");\n}\n')),(0,r.kt)("h5",{id:"string-\u5b9e\u4f8b"},"string \u5b9e\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int StrCmp(void *vp1, void *vp2) {\n    // \u5fc5\u987b\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n    char *s1 = *(char **)vp1;\n    char *s2 = *(char **)vp2;\n    return strcmp(s1, s2);\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'char *notes[] = {"Ab", "F#", "B", "Gb", "D"},\n    *target = "Eb";\nchar ** found = lsearch(&target, notes, 5, sizeof(char *), StrCmp);\n')),(0,r.kt)("h4",{id:"\u6cdb\u578b\u6570\u636e\u7ed3\u6784"},"\u6cdb\u578b\u6570\u636e\u7ed3\u6784"),(0,r.kt)("h5",{id:"\u901a\u7528\u578b\u6808"},"\u901a\u7528\u578b\u6808"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef struct {\n    void *elements;\n    int elemSize;\n    int logLen;\n    int allocLen;\n} stack;\n\nvoid StackNew(stack *s, int elemSize);\nvoid StackDispose(stack *s);\nvoid StackPush(stack *s, void *elemAddr);\nvoid StackPop(stack *s, void *elemAddr);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'void StackNew(stack *s, int elemSize) {\n    // \u53c2\u6570\u5408\u6cd5\u6027\u68c0\u67e5\n    if (s->elemSize <= 0) {\n        perror("ElemSize <= 0");\n        return;\n    }\n\n    s->elemSize = elemSize;\n    s->logLen = 0;\n    s->allocLen = 4;\n    s->elements = (int *)malloc(s->allocLen * elemSize);\n\n    // NULL\u68c0\u67e5\n    if (s->elements == NULL) {\n        perror("No Mem");\n        exit(0);\n    }\n}\n\nvoid StackPush(stack *s, void *elemAddr) {\n    // \u6ee1\u6808\u68c0\u67e5\n    if (s->logLen == s->allocLen) {\n        s->allocLen *= 2;\n        s->elements = (int *)malloc(s->elements, s->allocLen * s->elemSize);\n    }\n\n    void *target = (char *)s->elements + s->logLen * s->elemSize;\n    memcpy(target, elemAddr, s->elemSize);\n    s->logLen++;\n}\n\nvoid StackPop(stack *s, void *elemAddr) {\n    // \u7a7a\u6808\u68c0\u67e5\n    if (s->logLen == 0) {\n        perror("Empty Stack");\n        return;\n    }\n\n    s->logLen--;\n    void *source = (char *)s->elements + s->logLen * s->elemSize;\n    memcpy(elemAddr, source, s->elemSize);\n}\n')),(0,r.kt)("h4",{id:"tools"},"Tools"),(0,r.kt)("p",null,"Valgrind - ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/svn2github/valgrind"},"GitHub Repo")),(0,r.kt)("h2",{id:"useful-functions"},"Useful Functions"),(0,r.kt)("h3",{id:"memset"},"memset"),(0,r.kt)("h3",{id:"free"},"free"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"free \u51fd\u6570\u4f1a\u56de\u9000 4/8 \u5b57\u8282\uff0c\u53d6\u51fa heap \u5757\u7684\u957f\u5ea6/\u4fe1\u606f,\u6839\u636e\u6b64\u4fe1\u606f\u8fdb\u884c heap \u5757\u7684\u91ca\u653e.")),(0,r.kt)("h3",{id:"strings"},"Strings"),(0,r.kt)("h4",{id:"strdup"},"strdup"),(0,r.kt)("p",null,"string duplicate - ",(0,r.kt)("inlineCode",{parentName:"p"},"char *strdup(string)")," \u5c01\u88c5 allocator \u7ec6\u8282"),(0,r.kt)("h4",{id:"strchr-and-strstr"},"strchr and strstr"),(0,r.kt)("p",null,"\u8fd4\u56de\u5b57\u7b26/\u4e32\u5728\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e(\u5730\u5740)"),(0,r.kt)("h4",{id:"strtok"},"strtok"),(0,r.kt)("h4",{id:"strcasecmp"},"strcasecmp"),(0,r.kt)("h4",{id:"getopt"},"getopt"),(0,r.kt)("p",null,"\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570, \u8f7b\u677e\u5730\u63d0\u53d6\u4ee5 - \u6216 / \u5f00\u5934\u7684\u53c2\u6570"),(0,r.kt)("h3",{id:"io"},"I/O"),(0,r.kt)("h4",{id:"string-scanf"},"String Scanf"),(0,r.kt)("p",null,"\u53ef\u4ee5\u7528\u4f5c\u7b80\u6613\u5339\u914d\u8bfb\u53d6\u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u63d0\u53d6\u9664 http:// \u5916\u7684\u5b57\u7b26\u4e32\nsscanf(buf, "http://%s", url_part);\n')),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,"perror(string) - \u7528\u6765\u5c06\u4e0a\u4e00\u4e2a\u51fd\u6570\u53d1\u751f\u9519\u8bef\u7684\u539f\u56e0\u8f93\u51fa\u5230\u6807\u51c6\u8bbe\u5907(stderr)"),(0,r.kt)("h3",{id:"process"},"Process"),(0,r.kt)("h4",{id:"fork-and-execve"},"Fork and Execve"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"fork(): \u521b\u5efa\u5f53\u524d\u8fdb\u7a0b\u7684\u62f7\u8d1d"),(0,r.kt)("li",{parentName:"ul"},"execve(): \u7528\u53e6\u4e00\u7a0b\u5e8f\u7684\u4ee3\u7801\u4ee3\u66ff\u5f53\u524d\u8fdb\u7a0b\u7684\u4ee3\u7801",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"int execve(char *filename, char *argv[], char *env_p[])"))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'void fork_exec(char *path, char *argv[]) {\n    pid_t pid = fork();\n\n    if (0 != pid) {\n        printf("Parent: created a child %d\\n", pid);\n    } else {\n        printf("Child: exec-ing new program now\\n");\n        execv(path, argv);\n    }\n\n    printf("This line printed by parent only!\\n");\n}\n')),(0,r.kt)("h4",{id:"other"},"Other"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getpid()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"wait(int *child_status)"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"waitpid(pid)"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exit()"),".")),(0,r.kt)("h3",{id:"threads"},"Threads"),(0,r.kt)("h4",{id:"pthread"},"PThread"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef unsigned long int pthread_t;\n\n/**\n * create thread\n * @param  {\u6307\u5411\u7ebf\u7a0b\u6807\u8bc6\u7b26\u7684\u6307\u9488}   pthread_t *__thread\n * @param  {\u8bbe\u7f6e\u7ebf\u7a0b\u5c5e\u6027}         __const pthread_attr_t *__attr\n * @param  {\u7ebf\u7a0b\u8fd0\u884c\u51fd\u6570\u7684\u8d77\u59cb\u5730\u5740} void *(*__start_routine) (void *)\n * @param  {\u8fd0\u884c\u51fd\u6570\u7684\u53c2\u6570}        void *__arg\n */\nextern int pthread_create __P ((\n  pthread_t *__thread,\n  __const pthread_attr_t *__attr,\n  void *(*__start_routine) (void *)\uff0c void *__arg)\n);\n\u3000\u3000\n/**\n * \u7b49\u5f85\u7ebf\u7a0b\n * @param  {\u88ab\u7b49\u5f85\u7684\u7ebf\u7a0b\u6807\u8bc6\u7b26}                              pthread_t __th\n * @param  {\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u6307\u9488\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u88ab\u7b49\u5f85\u7ebf\u7a0b\u7684\u8fd4\u56de\u503c} void **__thread_return\n */\nextern int pthread_join __P ((pthread_t __th, void **__thread_return));\n\n/**\n * \u9000\u51fa\u7ebf\u7a0b\n * @param  {\u51fd\u6570\u7684\u8fd4\u56de\u4ee3\u7801} (void *__retval)) __attribute__ ((__noreturn__)\n */\nextern void pthread_exit __P ((void *__retval)) __attribute__ ((__noreturn__));\n\n// \u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u80fd\u88ab\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85\uff0c\u5426\u5219\u7b2c\u4e00\u4e2a\u63a5\u6536\u5230\u4fe1\u53f7\u7684\u7ebf\u7a0b\u6210\u529f\u8fd4\u56de\uff0c\u5176\u4f59\u8c03\u7528pthread_join\u7684\u7ebf\u7a0b\u5219\u8fd4\u56de\u9519\u8bef\u4ee3\u7801 ESRCH\n\n// \u4ee5\u4e0b\u4e3a\u4e92\u65a5\u9501\u76f8\u5173\u51fd\u6570\n\npthread_mutex_init\npthread_mutexattr_init\n\n/**\n * \u8bbe\u7f6e\u5c5e\u6027 pshared\n * PTHREAD_PROCESS_PRIVATE\n * PTHREAD_PROCESS_SHARED\n */\npthread_mutexattr_setpshared\n\n/**\n * \u8bbe\u7f6e\u4e92\u65a5\u9501\u7c7b\u578b\n * PTHREAD_MUTEX_NORMAL\n * PTHREAD_MUTEX_ERRORCHECK\n * PTHREAD_MUTEX_RECURSIVE\n * PTHREAD_MUTEX_DEFAULT\n */\npthread_mutexattr_settype\n\npthread_mutex_lock\npthread_mutex_unlock\npthread_delay_np\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"InitThreadPackage;\nThreadNew;\nThreadSleep;\nRunAllThreads;\nSemaphoreNew(int > 0);\nSemaphoreWait(lock);\nSemaphoreSignal(lock);\n")),(0,r.kt)("h4",{id:"semaphore"},"Semaphore"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898"),(0,r.kt)("li",{parentName:"ul"},"\u5c06 Semaphore \u53d8\u91cf\u7684\u503c\u5728\u5141\u8bb8\u8303\u56f4\u5185(\u4e0d\u81f3\u4e8e\u4f7f\u5f97\u7ebf\u7a0b\u9501\u5931\u6548)\u4f7f\u5f97\u5176\u53d6\u6700\u5927\u503c\uff0c\u51cf\u5c11\u7ebf\u7a0b\u963b\u585e"),(0,r.kt)("li",{parentName:"ul"},"EmptyBuf 8, FullBuf 0"),(0,r.kt)("li",{parentName:"ul"},"\u53cc\u5411\u901a\u4fe1\uff0c\u4e92\u76f8\u5524\u9192 - ",(0,r.kt)("inlineCode",{parentName:"li"},"Writer:sw(empty),ss(full);")," ",(0,r.kt)("inlineCode",{parentName:"li"},"Reader:sw(full),ss(empty);"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'void SellTickets(int agent, int *ticketsNum, Semaphore lock) {\n  while (true) {\n    // \u5f53 lock == 0 \u65f6,\u5f53\u524d\u8fdb\u7a0b\u963b\u585e, \u7b49\u5f85 lock > 0\n    // \u5f53 lock > 0 \u65f6, \u5f53\u524d\u8fdb\u7a0b\u7ee7\u7eed\u8fdb\u884c, \u5e76\u4e14 lock--\n    SemaphoreWait(lock);\n\n    if (*ticketsNum == 0) break;  // \u7968\u5df2\u552e\u78ec\n\n    (*ticketsNum)--;  // \u552e\u51fa\u4e00\u5f20\u7968\n    printf("Sell One Ticket.\\n");\n\n    // lock++ \u4f7f\u5f97 lock > 0\n    // \u82e5\u6709\u5176\u4ed6\u8fdb\u7a0b\u8c03\u7528\u4e86SemaphoreWait, \u4e14\u56e0\u4e4b\u524d lock == 0 \u800c\u88ab\u963b\u585e, \u5219\u6b64\u65f6\u5176\u4ed6\u8fdb\u7a0b\u53ef\u7ee7\u7eed\u8fdb\u884c\n    SemaphoreSignal(lock);\n  }\n\n    // break to here\n  // \u4f5c\u7528\u540c\u5faa\u73af\u5185\u7684 Signal \u51fd\u6570\n  SemaphoreSignal(lock);\n}\n')),(0,r.kt)("h2",{id:"\u8054\u5408\u4f53"},"\u8054\u5408\u4f53"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u673a\u5668\u7801 e.g \u7406\u89e3 IEEE 754 \u6807\u51c6"),(0,r.kt)("li",{parentName:"ul"},"\u533a\u5206\u5927/\u5c0f\u7aef\u6a21\u5f0f")),(0,r.kt)("h2",{id:"naming-conventions"},"Naming Conventions"),(0,r.kt)("h3",{id:"\u5e38\u7528\u7f29\u5199\u8bcd"},"\u5e38\u7528\u7f29\u5199\u8bcd"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"\u539f\u8bcd"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u7f29\u5199"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"addition"),(0,r.kt)("td",{parentName:"tr",align:"left"},"add")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"answer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ans")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"array"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arr")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"average"),(0,r.kt)("td",{parentName:"tr",align:"left"},"avg")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"buffer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"buf \u6216 buff")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"capture"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cap \u6216 capt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"check"),(0,r.kt)("td",{parentName:"tr",align:"left"},"chk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"count"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cnt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"column"),(0,r.kt)("td",{parentName:"tr",align:"left"},"col")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"control"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ctrl")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"decode"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dec")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"define"),(0,r.kt)("td",{parentName:"tr",align:"left"},"def")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"del")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"destination"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dst \u6216 dest")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"display"),(0,r.kt)("td",{parentName:"tr",align:"left"},"disp")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"division"),(0,r.kt)("td",{parentName:"tr",align:"left"},"div")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"encode"),(0,r.kt)("td",{parentName:"tr",align:"left"},"enc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"environment"),(0,r.kt)("td",{parentName:"tr",align:"left"},"env")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"error"),(0,r.kt)("td",{parentName:"tr",align:"left"},"err")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"flt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"frequency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"freq")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"header"),(0,r.kt)("td",{parentName:"tr",align:"left"},"hdr")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"index"),(0,r.kt)("td",{parentName:"tr",align:"left"},"idx")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"image"),(0,r.kt)("td",{parentName:"tr",align:"left"},"img")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"increment"),(0,r.kt)("td",{parentName:"tr",align:"left"},"inc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"initialize"),(0,r.kt)("td",{parentName:"tr",align:"left"},"init")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"iteration"),(0,r.kt)("td",{parentName:"tr",align:"left"},"itr")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"length"),(0,r.kt)("td",{parentName:"tr",align:"left"},"len")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"memory"),(0,r.kt)("td",{parentName:"tr",align:"left"},"mem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"middle"),(0,r.kt)("td",{parentName:"tr",align:"left"},"mid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"make"),(0,r.kt)("td",{parentName:"tr",align:"left"},"mk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"message"),(0,r.kt)("td",{parentName:"tr",align:"left"},"msg")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"multiplication"),(0,r.kt)("td",{parentName:"tr",align:"left"},"mul")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"number"),(0,r.kt)("td",{parentName:"tr",align:"left"},"num")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"operand"),(0,r.kt)("td",{parentName:"tr",align:"left"},"opnd")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"optimization"),(0,r.kt)("td",{parentName:"tr",align:"left"},"opt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"operator"),(0,r.kt)("td",{parentName:"tr",align:"left"},"optr")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"packet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"pkt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"position"),(0,r.kt)("td",{parentName:"tr",align:"left"},"pos")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"previous"),(0,r.kt)("td",{parentName:"tr",align:"left"},"pre/prev")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"payload"),(0,r.kt)("td",{parentName:"tr",align:"left"},"type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"pointer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ptr/pt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"return"),(0,r.kt)("td",{parentName:"tr",align:"left"},"code")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"record"),(0,r.kt)("td",{parentName:"tr",align:"left"},"rcd/rc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"receive"),(0,r.kt)("td",{parentName:"tr",align:"left"},"recv")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"result"),(0,r.kt)("td",{parentName:"tr",align:"left"},"res")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"return"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ret")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"src")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"str")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"subtraction"),(0,r.kt)("td",{parentName:"tr",align:"left"},"sub")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"table"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tab")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"temporary"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tmp \u6216 temp")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"total"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tot")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stamp")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"value"),(0,r.kt)("td",{parentName:"tr",align:"left"},"val")))),(0,r.kt)("h3",{id:"header-file"},"Header File"),(0,r.kt)("p",null,"\u9632\u6b62\u5176\u4ed6\u6587\u4ef6\u91cd\u590d#include \u672c\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef MONGOOSE_HEADER_INCLUDED\n#define\xa0\xa0\xa0 MONGOOSE_HEADER_INCLUDED\n\n/*.................................\n\xa0* do something here\n\xa0*.................................\n\xa0*/\n\n#endif /* MONGOOSE_HEADER_INCLUDED */\n")),(0,r.kt)("h2",{id:"c-standard-library"},"C Standard Library"),(0,r.kt)("h3",{id:"assert"},"Assert"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5173\u95ed\u65ad\u8a00")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define NDEBUG\n#include <assert.h>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5f00\u542f\u65ad\u8a00")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#undef NDEBUG\n#include <assert.h>\n")),(0,r.kt)("h3",{id:"types"},"Types"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u53ef\u68c0\u6d4b\u5b57\u7b26")),(0,r.kt)("p",null,"getc\u3001fgetc\u3001getchar \u51fd\u6570\u53ef\u8fd4\u56de\u503c(EOF \u503c/unsigned char \u7c7b\u578b)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u68c0\u6d4b\u5b57\u7b26")),(0,r.kt)("p",null,"\u975e EOF \u503c/\u975e unsigned char \u7c7b\u578b(",(0,r.kt)("em",{parentName:"p"},"\u4f1a\u5f15\u53d1\u4e25\u91cd\u9519\u8bef"),")"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"CType Functions",src:n(447).Z,width:"643",height:"273"})),(0,r.kt)("h3",{id:"errno"},"Errno"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"errno \u7684\u503c\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u4e3a\u96f6\uff0c\u4f46\u662f\u4e0d\u4f1a\u88ab\u4efb\u4f55\u5e93\u51fd\u6570\u8bbe\u4e3a\u96f6")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'errno = 0;\ny = sqrt(x);\nif (errno != 0) {\n    printf("invalid x : %e\\n", x);\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef _I386_ERRNO_H\n#define _I386_ERRNO_H\n#define EPERM 1 /* Operation not permitted */\n#define ENOENT 2 /* No such file or directory */\n#define ESRCH 3 /* No such process */\n#define EINTR 4 /* Interrupted system call */\n#define EIO 5 /* I/O error */\n#define ENXIO 6 /* No such device or address */\n#define E2BIG 7 /* Arg list too long */\n#define ENOEXEC 8 /* Exec format error */\n#define EBADF 9 /* Bad file number */\n#define ECHILD 10 /* No child processes */\n#define EAGAIN 11 /* Try again */\n#define ENOMEM 12 /* Out of memory */\n#define EACCES 13 /* Permission denied */\n#define EFAULT 14 /* Bad address */\n#define ENOTBLK 15 /* Block device required */\n#define EBUSY 16 /* Device or resource busy */\n#define EEXIST 17 /* File exists */\n#define EXDEV 18 /* Cross-device link */\n#define ENODEV 19 /* No such device */\n#define ENOTDIR 20 /* Not a directory */\n#define EISDIR 21 /* Is a directory */\n#define EINVAL 22 /* Invalid argument */\n#define ENFILE 23 /* File table overflow */\n#define EMFILE 24 /* Too many open files */\n#define ENOTTY 25 /* Not a typewriter */\n#define ETXTBSY 26 /* Text file busy */\n#define EFBIG 27 /* File too large */\n#define ENOSPC 28 /* No space left on device */\n#define ESPIPE 29 /* Illegal seek */\n#define EROFS 30 /* Read-only file system */\n#define EMLINK 31 /* Too many links */\n#define EPIPE 32 /* Broken pipe */\n#define EDOM 33 /* Math argument out of domain of func */\n#define ERANGE 34 /* Math result not representable */\n#define EDEADLK 35 /* Resource deadlock would occur */\n#define ENAMETOOLONG 36 /* File name too long */\n#define ENOLCK 37 /* No record locks available */\n#define ENOSYS 38 /* Function not implemented */\n#define ENOTEMPTY 39 /* Directory not empty */\n#define ELOOP 40 /* Too many symbolic links encountered */\n#define EWOULDBLOCK EAGAIN /* Operation would block */\n#define ENOMSG 42 /* No message of desired type */\n#define EIDRM 43 /* Identifier removed */\n#define ECHRNG 44 /* Channel number out of range */\n#define EL2NSYNC 45 /* Level 2 not synchronized */\n#define EL3HLT 46 /* Level 3 halted */\n#define EL3RST 47 /* Level 3 reset */\n#define ELNRNG 48 /* Link number out of range */\n#define EUNATCH 49 /* Protocol driver not attached */\n#define ENOCSI 50 /* No CSI structure available */\n#define EL2HLT 51 /* Level 2 halted */\n#define EBADE 52 /* Invalid exchange */\n#define EBADR 53 /* Invalid request descriptor */\n#define EXFULL 54 /* Exchange full */\n#define ENOANO 55 /* No anode */\n#define EBADRQC 56 /* Invalid request code */\n#define EBADSLT 57 /* Invalid slot */\n#define EDEADLOCK EDEADLK\n#define EBFONT 59 /* Bad font file format */\n#define ENOSTR 60 /* Device not a stream */\n#define ENODATA 61 /* No data available */\n#define ETIME 62 /* Timer expired */\n#define ENOSR 63 /* Out of streams resources */\n#define ENONET 64 /* Machine is not on the network */\n#define ENOPKG 65 /* Package not installed */\n#define EREMOTE 66 /* Object is remote */\n#define ENOLINK 67 /* Link has been severed */\n#define EADV 68 /* Advertise error */\n#define ESRMNT 69 /* Srmount error */\n#define ECOMM 70 /* Communication error on send */\n#define EPROTO 71 /* Protocol error */\n#define EMULTIHOP 72 /* Multi hop attempted */\n#define EDOTDOT 73 /* RFS specific error */\n#define EBADMSG 74 /* Not a data message */\n#define EOVERFLOW 75 /* Value too large for defined data type */\n#define ENOTUNIQ 76 /* Name not unique on network */\n#define EBADFD 77 /* File descriptor in bad state */\n#define EREMCHG 78 /* Remote address changed */\n#define ELIBACC 79 /* Can not access a needed shared library */\n#define ELIBBAD 80 /* Accessing a corrupted shared library */\n#define ELIBSCN 81 /* .lib section in a.out corrupted */\n#define ELIBMAX 82 /* Attempting to link in too many shared libraries */\n#define ELIBEXEC 83 /* Cannot exec a shared library directly */\n#define EILSEQ 84 /* Illegal byte sequence */\n#define ERESTART 85 /* Interrupted system call should be restarted */\n#define ESTRPIPE 86 /* Streams pipe error */\n#define EUSERS 87 /* Too many users */\n#define ENOTSOCK 88 /* Socket operation on non-socket */\n#define EDESTADDRREQ 89 /* Destination address required */\n#define EMSGSIZE 90 /* Message too long */\n#define EPROTOTYPE 91 /* Protocol wrong type for socket */\n#define ENOPROTOOPT 92 /* Protocol not available */\n#define EPROTONOSUPPORT 93 /* Protocol not supported */\n#define ESOCKTNOSUPPORT 94 /* Socket type not supported */\n#define EOPNOTSUPP 95 /* Operation not supported on transport endpoint */\n#define EPFNOSUPPORT 96 /* Protocol family not supported */\n#define EAFNOSUPPORT 97 /* Address family not supported by protocol */\n#define EADDRINUSE 98 /* Address already in use */\n#define EADDRNOTAVAIL 99 /* Cannot assign requested address */\n#define ENETDOWN 100 /* Network is down */\n#define ENETUNREACH 101 /* Network is unreachable */\n#define ENETRESET 102 /* Network dropped connection because of reset */\n#define ECONNABORTED 103 /* Software caused connection abort */\n#define ECONNRESET 104 /* Connection reset by peer */\n#define ENOBUFS 105 /* No buffer space available */\n#define EISCONN 106 /* Transport endpoint is already connected */\n#define ENOTCONN 107 /* Transport endpoint is not connected */\n#define ESHUTDOWN 108 /* Cannot send after transport endpoint shutdown */\n#define ETOOMANYREFS 109 /* Too many references: cannot splice */\n#define ETIMEDOUT 110 /* Connection timed out */\n#define ECONNREFUSED 111 /* Connection refused */\n#define EHOSTDOWN 112 /* Host is down */\n#define EHOSTUNREACH 113 /* No route to host */\n#define EALREADY 114 /* Operation already in progress */\n#define EINPROGRESS 115 /* Operation now in progress */\n#define ESTALE 116 /* Stale NFS file handle */\n#define EUCLEAN 117 /* Structure needs cleaning */\n#define ENOTNAM 118 /* Not a XENIX named type file */\n#define ENAVAIL 119 /* No XENIX semaphores available */\n#define EISNAM 120 /* Is a named type file */\n#define EREMOTEIO 121 /* Remote I/O error */\n#define EDQUOT 122 /* Quota exceeded */\n#define ENOMEDIUM 123 /* No medium found */\n#define EMEDIUMTYPE 124 /* Wrong medium type */\n#endif\n")),(0,r.kt)("h3",{id:"float-and-limits"},"Float and Limits"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b8f\u5b9a\u4e49\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"CHAR/UCHAR/SCHAR/SHRT/USHRT/INT/UINT/LONG/ULONG/FLT/DBL/LDBL"),"\u6709\u5173\u7684",(0,r.kt)("inlineCode",{parentName:"li"},"MIN/MAX/EPSILON"))),(0,r.kt)("h3",{id:"locale"},"Locale"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u65f6\u95f4/\u5355\u4f4d/\u8d27\u5e01\u7b49\u4e00\u7cfb\u5217\u7684\u56fd\u9645\u5316"),(0,r.kt)("li",{parentName:"ul"},"\u5e38\u7528\u51fd\u6570")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"_CRTIMP char * __cdecl setlocale(int, const char *);\n_CRTIMP struct lconv * __cdecl localeconv(void);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"int \u503c")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define LC_ALL          0\n#define LC_COLLATE      1\n#define LC_CTYPE        2\n#define LC_MONETARY     3\n#define LC_NUMERIC      4\n#define LC_TIME         5\n")),(0,r.kt)("h3",{id:"math"},"Math"),(0,r.kt)("p",null,"\u6570\u5b66\u51fd\u6570\u5e93(\u5305\u62ec\u540e\u7f00 f(float)/l(long double))"),(0,r.kt)("h3",{id:"setjmp"},"SetJMP"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5e38\u7528\u51fd\u6570")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int setjmp(jmp_buf env);\nvoid longjmp(jmp_buf env, int val);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528\uff1a\u7528\u4e8e if/else\u3001loop\u3001switch \u8bed\u53e5",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"\u76f4\u63a5\u8c03\u7528 setjmp \u51fd\u6570\u65f6\uff0c\u8fd4\u56de\u503c\u4e3a 0;"),(0,r.kt)("li",{parentName:"ol"},"\u8c03\u7528 longjmp \u51fd\u6570\u65f6\uff0c\u82e5 val \u503c\u4e0d\u4e3a 0,\u5219\u8df3\u8f6c\u81f3\u4e0a\u6b21 setjmp \u8fd4\u56de\u503c\u4e3a 0 \u5904\uff0c\u7ee7\u7eed\u5411\u540e\u6267\u884c\u8bed\u53e5"))),(0,r.kt)("li",{parentName:"ul"},"\u529f\u80fd",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"\u5b9e\u73b0\u975e\u672c\u5730(\u5c40\u90e8)\u8df3\u8f6c(\u8de8\u8d8a\u591a\u5c42\u51fd\u6570\u8c03\u7528\u6808\u8fdb\u884c\u8df3\u8f6c)"),(0,r.kt)("li",{parentName:"ol"},"\u5b9e\u73b0\u7c7b Java \u5f02\u5e38\u673a\u5236(\u5f02\u5e38\u629b\u51fa\u53ca\u6355\u83b7)")))),(0,r.kt)("h3",{id:"signal"},"Signal"),(0,r.kt)("p",null,"\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u4e2d\u6240\u6709\u6570\u636e\u5e94\u4e3a volatile \u7c7b\u578b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"_CRTIMP int __cdecl raise(int);\n_CRTIMP void (__cdecl * __cdecl signal(int, void (__cdecl *)(int)))(int);\n")),(0,r.kt)("h3",{id:"stdarg"},"Stdarg"),(0,r.kt)("p",null,"\u7528\u4e8e\u7f16\u5199\u53ef\u53d8\u53c2\u6570\u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void printargs(int arg1, ...) /* \u8f93\u51fa\u6240\u6709int\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u76f4\u5230-1\u7ed3\u675f */\n{\n    va_list ap;\n    int i;\n    va_start(ap, arg1);\n    for (i = arg1; i != -1; i = va_arg(ap, int))\n    printf(\"%d \", i);\n    va_end(ap);\n    putchar('\\n');\n\n}\n")),(0,r.kt)("h3",{id:"stddef"},"Stddef"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b8f",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"NULL Null \u6307\u9488\u5e38\u91cf"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"offsetof(type, member-designator)"),"\n\u83b7\u5f97\u5b57\u6bb5\u5728\u7ed3\u6784\u4f53\u4e2d\u7684\u504f\u79fb\u91cf"))),(0,r.kt)("li",{parentName:"ul"},"\u7c7b\u578b",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ptrdiff_t"),"\n\u5e26\u7b26\u53f7\u7684\u6574\u6570\u7c7b\u578b, \u7528\u6765\u8868\u793a\u6307\u9488\u76f8\u51cf\u7684\u7ed3\u679c\u7c7b\u578b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"wchar_t"),"\n\u5bbd\u5b57\u7b26\u7c7b\u578b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size_t"),"\n\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b, \u7528\u6765\u8868\u793a sizeof \u64cd\u4f5c\u7b26\u7684\u7ed3\u679c\u7c7b\u578b")))),(0,r.kt)("h3",{id:"string"},"String"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"men \u7cfb\u51fd\u6570\uff1a\u64cd\u4f5c\u4efb\u610f\u5b57\u7b26\u5e8f\u5217"),(0,r.kt)("li",{parentName:"ul"},"strn \u7cfb\u51fd\u6570\uff1a\u64cd\u4f5c\u975e\u7a7a\u5b57\u7b26\u5e8f\u5217"),(0,r.kt)("li",{parentName:"ul"},"str \u7cfb\u51fd\u6570\uff1a\u64cd\u4f5c\u5b57\u7b26\u4e32\u5e8f\u5217('\\0')")),(0,r.kt)("h2",{id:"gdb-tutorial"},"GDB Tutorial"),(0,r.kt)("h3",{id:"basic-command"},"Basic Command"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"r(run)"),(0,r.kt)("li",{parentName:"ul"},"l(list)"),(0,r.kt)("li",{parentName:"ul"},"b(break)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"b line_num"),(0,r.kt)("li",{parentName:"ul"},"b filename:line_num"))),(0,r.kt)("li",{parentName:"ul"},"display/format address")),(0,r.kt)("p",null,"e.g ",(0,r.kt)("inlineCode",{parentName:"p"},"display $pc"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"i $pc"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"t \u6309\u4e8c\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"d \u6309\u5341\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"o \u6309\u516b\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"u \u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u65e0\u7b26\u53f7\u6574\u578b."),(0,r.kt)("li",{parentName:"ul"},"x \u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"a \u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"f \u6309\u6d6e\u70b9\u6570\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"c \u6309\u5b57\u7b26\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"s \u6309\u5b57\u7b26\u4e32\u683c\u5f0f\u663e\u793a\u53d8\u91cf."),(0,r.kt)("li",{parentName:"ul"},"disas \u663e\u793a\u6c47\u7f16\u4ee3\u7801."),(0,r.kt)("li",{parentName:"ul"},"x /num-size-format ",(0,r.kt)("inlineCode",{parentName:"li"},"$pc"),"/rsp/rbp.")),(0,r.kt)("p",null,"e.g size:w(2 \u5b57\u8282) format:x/d/s(\u5341\u516d\u8fdb\u5236/\u5341\u8fdb\u5236/\u5b57\u7b26\u4e32)\n2wx"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"examine - \u67e5\u770b\u5185\u5b58\nn\u3001f\u3001u \u662f\u53ef\u9009\u7684\u53c2\u6570",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"n \u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u663e\u793a\u5185\u5b58\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u5f53\u524d\u5730\u5740\u5411\u540e\u663e\u793a\u51e0\u4e2a\u5730\u5740\u7684\u5185\u5bb9\u3002"),(0,r.kt)("li",{parentName:"ul"},"f \u8868\u793a\u663e\u793a\u7684\u683c\u5f0f\uff0c\u53c2\u89c1\u4e0a\u9762\u3002\u5982\u679c\u5730\u5740\u6240\u6307\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u683c\u5f0f\u53ef\u4ee5\u662f s\uff0c\u5982\u679c\u5730\u5341\u662f\u6307\u4ee4\u5730\u5740\uff0c\u90a3\u4e48\u683c\u5f0f\u53ef\u4ee5\u662f i\u3002"),(0,r.kt)("li",{parentName:"ul"},"u \u8868\u793a\u4ece\u5f53\u524d\u5730\u5740\u5f80\u540e\u8bf7\u6c42\u7684\u5b57\u8282\u6570\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\uff0cGDB \u9ed8\u8ba4\u662f 4 \u4e2a bytes.\nu \u53c2\u6570\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u5b57\u7b26\u6765\u4ee3\u66ff\uff0cb \u8868\u793a\u5355\u5b57\u8282\uff0ch \u8868\u793a\u53cc\u5b57\u8282\uff0cw \u8868\u793a\u56db\u5b57\u8282\uff0cg \u8868\u793a\u516b\u5b57\u8282.\n\u5f53\u6211\u4eec\u6307\u5b9a\u4e86\u5b57\u8282\u957f\u5ea6\u540e\uff0cGDB \u4f1a\u4ece\u6307\u5185\u5b58\u5b9a\u7684\u5185\u5b58\u5730\u5740\u5f00\u59cb\uff0c\u8bfb\u5199\u6307\u5b9a\u5b57\u8282\uff0c\u5e76\u628a\u5176\u5f53\u4f5c\u4e00\u4e2a\u503c\u53d6\u51fa\u6765.\n\u8868\u793a\u4e00\u4e2a\u5185\u5b58\u5730\u5740.")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u547d\u4ee4\uff1ax/3uh 0x54320 \u8868\u793a\uff0c\u4ece\u5185\u5b58\u5730\u5740 0x54320 \u8bfb\u53d6\u5185\u5bb9\uff0ch \u8868\u793a\u4ee5\u53cc\u5b57\u8282\u4e3a\u4e00\u4e2a\u5355\u4f4d\uff0c3 \u8868\u793a\u4e09\u4e2a\u5355\u4f4d\uff0cu \u8868\u793a\u6309\u5341\u516d\u8fdb\u5236\u663e\u793a\u3002")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"s step into",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"step1 \u4e0b\u4e00\u6761\u6c47\u7f16\u6307\u4ee4"))),(0,r.kt)("li",{parentName:"ul"},"n next line"),(0,r.kt)("li",{parentName:"ul"},"p print"),(0,r.kt)("li",{parentName:"ul"},"q quit"),(0,r.kt)("li",{parentName:"ul"},"up last stack"),(0,r.kt)("li",{parentName:"ul"},"bt(back trace) function stack \u663e\u793a\u5806\u6808\u56de\u6eaf\u4fe1\u606f"),(0,r.kt)("li",{parentName:"ul"},"info breakpoints/register")),(0,r.kt)("h3",{id:"gdb-set-command"},"GDB Set Command"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"set disassembly"),(0,r.kt)("li",{parentName:"ul"},"set variable")),(0,r.kt)("h3",{id:"gdb-shell"},"GDB Shell"),(0,r.kt)("p",null,"shell command"),(0,r.kt)("h3",{id:"gdb-assemble"},"GDB Assemble"),(0,r.kt)("h4",{id:"gdb-core-dump"},"GDB Core Dump"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ulimit -c unlimited\ngdb -c core_file_path target_exe_path\n")),(0,r.kt)("h4",{id:"gdb-disasm"},"GDB Disasm"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CS Segment")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(gdb) disass\n(gdb) x/i\n(gdb) x/5i $pc\n(gdb) ni/si\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Registers")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(gdb) i r\n(gdb) i r a\n(gdb) i r ds\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"DS Segment"),(0,r.kt)("li",{parentName:"ul"},"SS Segment")),(0,r.kt)("h3",{id:"gdb-stack-frame"},"GDB Stack Frame"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(gdb) bt\n(gdb) frame n\n(gdb) info locals\n")),(0,r.kt)("h2",{id:"gcc"},"GCC"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"-E: cpp(c preprocessor) \u9884\u5904\u7406 => .i"),(0,r.kt)("li",{parentName:"ul"},"-S: cll \u7f16\u8bd1 => .s"),(0,r.kt)("li",{parentName:"ul"},"-c: as(assemble) \u6c47\u7f16 => .o"),(0,r.kt)("li",{parentName:"ul"},"-time Time the execution of each subprocess"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-std=<standard>")," Assume that the input sources are for ",(0,r.kt)("inlineCode",{parentName:"li"},"<standard>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-B <directory>")," Add ",(0,r.kt)("inlineCode",{parentName:"li"},"<directory>")," to the compiler's search paths"),(0,r.kt)("li",{parentName:"ul"},"-v Display the programs invoked by the compiler"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-o <file>")," Place the output into ",(0,r.kt)("inlineCode",{parentName:"li"},"<file>")),(0,r.kt)("li",{parentName:"ul"},"-shared Create a shared library"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-Wall")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-v --help"))),(0,r.kt)("h2",{id:"awesome-tools"},"Awesome Tools"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u521b\u5efa\u4ee3\u7801\u6587\u6863\u8d44\u6599\u7684 NDoc"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u751f\u6210\u89e3\u51b3\u65b9\u6848\u7684 NAnt"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u751f\u6210\u4ee3\u7801\u7684 CodeSmith"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u76d1\u89c6\u4ee3\u7801\u7684 FxCop"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u7f16\u8bd1\u5c11\u91cf\u4ee3\u7801\u7684 Snippet Compiler"),(0,r.kt)("li",{parentName:"ul"},"\u4e24\u79cd\u4e0d\u540c\u7684\u8f6c\u6362\u5668\u5de5\u5177\uff1aASP.NET \u7248\u672c\u8f6c\u6362\u5668\u548c Visual Studio .NET \u9879\u76ee\u8f6c\u6362\u5668"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u751f\u6210\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 Regulator"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u5206\u6790\u7a0b\u5e8f\u96c6\u7684 .NET Reflector"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684 NUnit")))}k.isMDXComponent=!0},447:function(e,t,n){t.Z=n.p+"assets/images/ctype.h-a7837da75231c89bbe406f47093c0a1d.jpg"}}]);