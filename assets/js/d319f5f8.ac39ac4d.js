"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[6954],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,y=d["".concat(o,".").concat(m)]||d[m]||u[m]||l;return t?a.createElement(y,i(i({ref:n},c),{},{components:t})):a.createElement(y,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},617:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),i=["components"],s={author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","JavaScript","TypeScript"]},o="TypeScript Basic Notes",p={unversionedId:"web/javascript/typescriptBasicNotes",id:"web/javascript/typescriptBasicNotes",title:"TypeScript Basic Notes",description:"TypeScript Configuration",source:"@site/notes/web/javascript/typescriptBasicNotes.md",sourceDirName:"web/javascript",slug:"/web/javascript/typescriptBasicNotes",permalink:"/awesome-notes/web/javascript/typescriptBasicNotes",editUrl:"https://github.com/sabertazimi/awesome-notes/edit/main/notes/web/javascript/typescriptBasicNotes.md",tags:[{label:"Web",permalink:"/awesome-notes/tags/web"},{label:"JavaScript",permalink:"/awesome-notes/tags/java-script"},{label:"TypeScript",permalink:"/awesome-notes/tags/type-script"}],version:"current",lastUpdatedBy:"sabertazimi",lastUpdatedAt:1649514830,formattedLastUpdatedAt:"4/9/2022",frontMatter:{author:"Sabertazimi",authorTitle:"Web Developer",authorURL:"https://github.com/sabertazimi",authorImageURL:"https://github.com/sabertazimi.png",tags:["Web","JavaScript","TypeScript"]},sidebar:"sidebar",previous:{title:"JavaScript Basic Notes",permalink:"/awesome-notes/web/javascript/javascriptBasicNotes"},next:{title:"Express Basic Notes",permalink:"/awesome-notes/web/node/expressBasicNotes"}},c={},u=[{value:"TypeScript Configuration",id:"typescript-configuration",level:2},{value:"TypeScript Installation",id:"typescript-installation",level:3},{value:"TypeScript Config File",id:"typescript-config-file",level:3},{value:"Webpack for TypeScript",id:"webpack-for-typescript",level:3},{value:"Lint Tools",id:"lint-tools",level:3},{value:"ESLint",id:"eslint",level:4},{value:"TSLint",id:"tslint",level:4},{value:"Defined Types Tools",id:"defined-types-tools",level:3},{value:"TypeScript Compiler Performance",id:"typescript-compiler-performance",level:3},{value:"Modules",id:"modules",level:2},{value:"Globals Definition",id:"globals-definition",level:3},{value:"Library Definition",id:"library-definition",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Module Resolution",id:"module-resolution",level:3},{value:"Classic Module Resolution",id:"classic-module-resolution",level:4},{value:"Node Module Resolution",id:"node-module-resolution",level:4},{value:"Basic Types",id:"basic-types",level:2},{value:"Enum Types",id:"enum-types",level:2},{value:"Number Enum",id:"number-enum",level:3},{value:"String Enum",id:"string-enum",level:3},{value:"Enum with Functions",id:"enum-with-functions",level:3},{value:"Enum as Flags",id:"enum-as-flags",level:3},{value:"Enum Index Signature",id:"enum-index-signature",level:3},{value:"Internal of Enum",id:"internal-of-enum",level:3},{value:"Function",id:"function",level:2},{value:"Function Interface",id:"function-interface",level:3},{value:"Arrow Function",id:"arrow-function",level:3},{value:"Weak Overload",id:"weak-overload",level:3},{value:"Rest Parameters",id:"rest-parameters",level:3},{value:"Interface",id:"interface",level:2},{value:"Extends Interface",id:"extends-interface",level:3},{value:"Implements Interface",id:"implements-interface",level:3},{value:"Interface vs Type Alias",id:"interface-vs-type-alias",level:3},{value:"Access Modifiers",id:"access-modifiers",level:2},{value:"Member Access Modifiers",id:"member-access-modifiers",level:3},{value:"Readonly Types",id:"readonly-types",level:3},{value:"Index Signature",id:"index-signature",level:2},{value:"Index Signature Type Checking",id:"index-signature-type-checking",level:3},{value:"Select Index Types",id:"select-index-types",level:3},{value:"Symbol Index Types",id:"symbol-index-types",level:3},{value:"Template Literal Index Types",id:"template-literal-index-types",level:3},{value:"Indexed Access Types",id:"indexed-access-types",level:3},{value:"Literal Types",id:"literal-types",level:2},{value:"Template Literal Types",id:"template-literal-types",level:2},{value:"Moving Types",id:"moving-types",level:2},{value:"Keyof Types",id:"keyof-types",level:3},{value:"Generic Types",id:"generic-types",level:2},{value:"Generic Function",id:"generic-function",level:3},{value:"Generic Class",id:"generic-class",level:3},{value:"Specific Instances from Generic Types",id:"specific-instances-from-generic-types",level:3},{value:"Generic Types Constraints",id:"generic-types-constraints",level:3},{value:"Generic Types for Types Programming",id:"generic-types-for-types-programming",level:3},{value:"Union Types",id:"union-types",level:2},{value:"Intersection Types",id:"intersection-types",level:2},{value:"Conditional Types",id:"conditional-types",level:2},{value:"Basic Conditional Types",id:"basic-conditional-types",level:3},{value:"Nested Conditional Types",id:"nested-conditional-types",level:3},{value:"Distributive Conditional Types",id:"distributive-conditional-types",level:3},{value:"Mapped Types",id:"mapped-types",level:2},{value:"Basic Mapped Types",id:"basic-mapped-types",level:3},{value:"Union Mapped Types",id:"union-mapped-types",level:3},{value:"Key Mapped Types",id:"key-mapped-types",level:3},{value:"Function Mapped Types",id:"function-mapped-types",level:3},{value:"Custom Mapped Types",id:"custom-mapped-types",level:3},{value:"Utility Types",id:"utility-types",level:2},{value:"Null Type",id:"null-type",level:3},{value:"Boolean Type",id:"boolean-type",level:3},{value:"Primitive Type",id:"primitive-type",level:3},{value:"Promise Type",id:"promise-type",level:3},{value:"Proxy Type",id:"proxy-type",level:3},{value:"Recursive Type",id:"recursive-type",level:3},{value:"Lodash Types",id:"lodash-types",level:3},{value:"Type Inference",id:"type-inference",level:2},{value:"Type Guards",id:"type-guards",level:2},{value:"Type Predicates",id:"type-predicates",level:3},{value:"In Type Guard",id:"in-type-guard",level:3},{value:"TypeOf Type Guard",id:"typeof-type-guard",level:3},{value:"Instance Type Guard",id:"instance-type-guard",level:3},{value:"Never Type",id:"never-type",level:3},{value:"Type Assertion",id:"type-assertion",level:2},{value:"Mixins",id:"mixins",level:2},{value:"Closure",id:"closure",level:2},{value:"Decorators",id:"decorators",level:2},{value:"Decorators Pros",id:"decorators-pros",level:3},{value:"Class Decorators",id:"class-decorators",level:3},{value:"Class Properties Decorators",id:"class-properties-decorators",level:3},{value:"Method Parameters Decorators",id:"method-parameters-decorators",level:3},{value:"Methods Decorators",id:"methods-decorators",level:3},{value:"Decorators Execution Order",id:"decorators-execution-order",level:3},{value:"TypeScript Decorator Utils",id:"typescript-decorator-utils",level:3},{value:"IOC and DI Utils",id:"ioc-and-di-utils",level:4},{value:"Type System",id:"type-system",level:2},{value:"Covariance",id:"covariance",level:3},{value:"Contravariance",id:"contravariance",level:3},{value:"Project Reference",id:"project-reference",level:2},{value:"Monorepo",id:"monorepo",level:2},{value:"TypeScript Tools",id:"typescript-tools",level:2},{value:"Reference",id:"reference",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"typescript-basic-notes"},"TypeScript Basic Notes"),(0,l.kt)("h2",{id:"typescript-configuration"},"TypeScript Configuration"),(0,l.kt)("h3",{id:"typescript-installation"},"TypeScript Installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D typescript\nnpm i -D react react-dom @types/node @types/react @types/react-dom\n")),(0,l.kt)("h3",{id:"typescript-config-file"},"TypeScript Config File"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx tsconfig.json\nnpx tsc --init\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @tsconfig/create-react-app\n")),(0,l.kt)("p",null,"Basic ",(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig"},"tsconfig"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tsconfig/bases"},"extends"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@tsconfig/recommended/tsconfig.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@tsconfig/create-react-app/tsconfig.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@tsconfig/node16/tsconfig.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@tsconfig/deno/tsconfig.json")))),(0,l.kt)("li",{parentName:"ul"},"include"),(0,l.kt)("li",{parentName:"ul"},"exclude"),(0,l.kt)("li",{parentName:"ul"},"buildOptions"),(0,l.kt)("li",{parentName:"ul"},"compilerOptions"),(0,l.kt)("li",{parentName:"ul"},"watchOptions"),(0,l.kt)("li",{parentName:"ul"},"tsNode")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "include": ["./src/**/*"],\n  "exclude": ["node_modules", "build", "dist", "coverage"],\n  "compilerOptions": {\n    /* \u57fa\u672c\u9009\u9879 */\n    "target": "es5", // \'ES3\', \'ES5\', \'ES2015\', \'ES2016\', \'ES2017\', or \'ESNEXT\'\n    "module": "es2015", // \u6307\u5b9a\u4f7f\u7528\u6a21\u5757: \'commonjs\', \'amd\', \'system\', \'umd\' or \'es2015\'\n    "lib": ["es6", "dom"], // \u6307\u5b9a\u8981\u5305\u542b\u5728\u7f16\u8bd1\u4e2d\u7684\u5e93\u6587\u4ef6\n    "allowJs": true, // \u5141\u8bb8\u7f16\u8bd1 javascript \u6587\u4ef6\n    "checkJs": true, // \u62a5\u544a javascript \u6587\u4ef6\u4e2d\u7684\u9519\u8bef\n    "jsx": "react", // \'preserve\', \'react-native\', or \'react\'\n    "declaration": true, // \u751f\u6210\u76f8\u5e94\u7684 \'.d.ts\' \u6587\u4ef6\n    "sourceMap": true, // \u751f\u6210\u76f8\u5e94\u7684 \'.map\' \u6587\u4ef6\n    "outFile": "./", // \u5c06\u8f93\u51fa\u6587\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a\u6587\u4ef6\n    "outDir": "./build/", // \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\n    "rootDir": "./", // \u7528\u6765\u63a7\u5236\u8f93\u51fa\u76ee\u5f55\u7ed3\u6784 --outDir.\n    "removeComments": true, // \u5220\u9664\u7f16\u8bd1\u540e\u7684\u6240\u6709\u7684\u6ce8\u91ca\n    "noEmit": true, // \u4e0d\u751f\u6210\u8f93\u51fa\u6587\u4ef6\n    "importHelpers": true, // \u4ece tslib \u5bfc\u5165\u8f85\u52a9\u5de5\u5177\u51fd\u6570\n    "isolatedModules": true, // \u5c06\u6bcf\u4e2a\u6587\u4ef6\u505a\u4e3a\u5355\u72ec\u7684\u6a21\u5757 \uff08\u4e0e \'ts.transpileModule\' \u7c7b\u4f3c\uff09\n    "resolveJsonModule": true,\n\n    /* \u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5\u9009\u9879 */\n    "strict": true, // \u542f\u7528\u6240\u6709\u4e25\u683c\u7c7b\u578b\u68c0\u67e5\u9009\u9879\n    "noImplicitAny": true, // \u5728\u8868\u8fbe\u5f0f\u548c\u58f0\u660e\u4e0a\u6709\u9690\u542b\u7684 any\u7c7b\u578b\u65f6\u62a5\u9519\n    "strictNullChecks": true, // \u542f\u7528\u4e25\u683c\u7684 null \u68c0\u67e5\n    "noImplicitThis": true, // \u5f53 this \u8868\u8fbe\u5f0f\u503c\u4e3a any \u7c7b\u578b\u7684\u65f6\u5019\uff0c\u751f\u6210\u4e00\u4e2a\u9519\u8bef\n    "alwaysStrict": true, // \u4ee5\u4e25\u683c\u6a21\u5f0f\u68c0\u67e5\u6bcf\u4e2a\u6a21\u5757\uff0c\u5e76\u5728\u6bcf\u4e2a\u6587\u4ef6\u91cc\u52a0\u5165 \'use strict\'\n\n    /* \u989d\u5916\u7684\u68c0\u67e5 */\n    "noUnusedLocals": true, // \u6709\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u65f6\uff0c\u629b\u51fa\u9519\u8bef\n    "noUnusedParameters": true, // \u6709\u672a\u4f7f\u7528\u7684\u53c2\u6570\u65f6\uff0c\u629b\u51fa\u9519\u8bef\n    "noImplicitReturns": true, // \u5e76\u4e0d\u662f\u6240\u6709\u51fd\u6570\u91cc\u7684\u4ee3\u7801\u90fd\u6709\u8fd4\u56de\u503c\u65f6\uff0c\u629b\u51fa\u9519\u8bef\n    "noFallthroughCasesInSwitch": true, // \u62a5\u544a switch \u8bed\u53e5\u7684 fallthrough \u9519\u8bef\n\n    /* \u6a21\u5757\u89e3\u6790\u9009\u9879 */\n    "moduleResolution": "node", // \u9009\u62e9\u6a21\u5757\u89e3\u6790\u7b56\u7565\uff1a \'node\' (Node.js) or \'classic\'\n    "baseUrl": "./", // \u7528\u4e8e\u89e3\u6790\u975e\u76f8\u5bf9\u6a21\u5757\u540d\u79f0\u7684\u57fa\u76ee\u5f55\n    "paths": {\n      "@components": ["src/components"],\n      "@components/*": ["src/components/*"],\n      "@config": ["src/config"],\n      "@config/*": ["src/config/*"],\n      "@hooks": ["src/hooks"],\n      "@hooks/*": ["src/hooks/*"],\n      "@images": ["src/images"],\n      "@images/*": ["src/images/*"],\n      "@layouts": ["src/layouts"],\n      "@layouts/*": ["src/layouts/*"],\n      "@pages": ["src/pages"],\n      "@pages/*": ["src/pages/*"],\n      "@styles": ["src/styles"],\n      "@styles/*": ["src/styles/*"],\n      "@templates": ["src/templates"],\n      "@templates/*": ["src/templates/*"],\n      "@types": ["src/types"],\n      "@types/*": ["src/types/*"]\n    }, // \u6a21\u5757\u540d\u5230\u57fa\u4e8e baseUrl \u7684\u8def\u5f84\u6620\u5c04\u7684\u5217\u8868\n    "rootDirs": [], // \u6839\u6587\u4ef6\u5939\u5217\u8868\uff0c\u5176\u7ec4\u5408\u5185\u5bb9\u8868\u793a\u9879\u76ee\u8fd0\u884c\u65f6\u7684\u7ed3\u6784\u5185\u5bb9\n    "typeRoots": [], // \u5305\u542b\u7c7b\u578b\u58f0\u660e\u7684\u6587\u4ef6\u5217\u8868\n    "types": [], // \u9700\u8981\u5305\u542b\u7684\u7c7b\u578b\u58f0\u660e\u6587\u4ef6\u540d\u5217\u8868\n    "allowSyntheticDefaultImports": true, // \u5141\u8bb8\u4ece\u6ca1\u6709\u8bbe\u7f6e\u9ed8\u8ba4\u5bfc\u51fa\u7684\u6a21\u5757\u4e2d\u9ed8\u8ba4\u5bfc\u5165\u3002\n\n    /* Source Map Options */\n    "sourceRoot": "./", // \u6307\u5b9a\u8c03\u8bd5\u5668\u5e94\u8be5\u627e\u5230 TypeScript \u6587\u4ef6\u800c\u4e0d\u662f\u6e90\u6587\u4ef6\u7684\u4f4d\u7f6e\n    "mapRoot": "./", // \u6307\u5b9a\u8c03\u8bd5\u5668\u5e94\u8be5\u627e\u5230\u6620\u5c04\u6587\u4ef6\u800c\u4e0d\u662f\u751f\u6210\u6587\u4ef6\u7684\u4f4d\u7f6e\n    "inlineSourceMap": true, // \u751f\u6210\u5355\u4e2a sourcemap \u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u5c06 sourcemaps \u751f\u6210\u4e0d\u540c\u7684\u6587\u4ef6\n    "inlineSources": true, // \u5c06\u4ee3\u7801\u4e0e sourcemap \u751f\u6210\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\n\n    /* \u5176\u4ed6\u9009\u9879 */\n    "experimentalDecorators": true, // \u542f\u7528\u88c5\u9970\u5668\n    "emitDecoratorMetadata": true // \u4e3a\u88c5\u9970\u5668\u63d0\u4f9b\u5143\u6570\u636e\u7684\u652f\u6301\n  }\n}\n')),(0,l.kt)("h3",{id:"webpack-for-typescript"},"Webpack for TypeScript"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D typescript ts-loader source-map-loader\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const path = require('path');\n\nmodule.exports = {\n  entry: './src/index.tsx',\n  output: {\n    filename: '[name].bundle.js',\n    path: path.resolve(__dirname, 'dist'),\n  },\n  devtool: 'source-map',\n  resolve: {\n    extensions: ['.js', '.json', '.ts', '.tsx'],\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(ts|tsx)$/,\n        loader: 'ts-loader',\n      },\n      { enforce: 'pre', test: /\\.js$/, loader: 'source-map-loader' },\n    ],\n  },\n  externals: {\n    react: 'React',\n    'react-dom': 'ReactDOM',\n  },\n};\n")),(0,l.kt)("h3",{id:"lint-tools"},"Lint Tools"),(0,l.kt)("h4",{id:"eslint"},"ESLint"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/typescript-eslint/typescript-eslint"},"ESLint for TypeScript"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx eslint --init\n")),(0,l.kt)("h4",{id:"tslint"},"TSLint"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/progre/tslint-config-airbnb"},"TSLint Config Airbnb"))),(0,l.kt)("h3",{id:"defined-types-tools"},"Defined Types Tools"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/DefinitelyTyped/DefinitelyTyped"},"Types Definition")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Microsoft/dts-gen"},"DTSGen: Creates starter TypeScript definition files for any module or library")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/microsoft/dtslint"},"DTSLint: A utility built on TSLint for linting TypeScript declaration files"))),(0,l.kt)("h3",{id:"typescript-compiler-performance"},"TypeScript Compiler Performance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Project references."),(0,l.kt)("li",{parentName:"ul"},"Load ",(0,l.kt)("inlineCode",{parentName:"li"},"@types/")," by need (",(0,l.kt)("inlineCode",{parentName:"li"},"include"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"exclude"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"compilerOptions.types"),")."),(0,l.kt)("li",{parentName:"ul"},"Skip type checking (sometimes)."),(0,l.kt)("li",{parentName:"ul"},"Multithread: ",(0,l.kt)("inlineCode",{parentName:"li"},"ts-loader")," + ",(0,l.kt)("inlineCode",{parentName:"li"},"fork-ts-checker-plugin"),"."),(0,l.kt)("li",{parentName:"ul"},"Faster tools: ",(0,l.kt)("inlineCode",{parentName:"li"},"swc"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"rome"),".")),(0,l.kt)("h2",{id:"modules"},"Modules"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://microsoft.github.io/TypeSearch"},"Types Search"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Declaration Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Namespace"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Namespace"),(0,l.kt)("td",{parentName:"tr",align:"left"},"X"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Class"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X"),(0,l.kt)("td",{parentName:"tr",align:"left"},"X")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Enum"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X"),(0,l.kt)("td",{parentName:"tr",align:"left"},"X")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Interface"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Type Alias"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Function"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Variable"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"X")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Value")," means truly output JavaScript.")),(0,l.kt)("h3",{id:"globals-definition"},"Globals Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "include": ["./src/**/*", "globals.d.ts", "index.d.ts"]\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"declare module '*.css';\n// => import * as foo from './some/file.css';\n\ndeclare module '*.png' {\n  const value: unknown;\n  export = value;\n}\n// => import logo from './logo.png';\n// <img src={logo as string} />\n\ndeclare module '*.jpg' {\n  const value: unknown;\n  export = value;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"declare global {\n  namespace JSX {\n    interface Element extends React.ReactElement<any, any> {}\n    interface ElementClass extends React.Component<any> {\n      render(): React.ReactNode;\n    }\n  }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @types/react @types/react-dom\n")),(0,l.kt)("h3",{id:"library-definition"},"Library Definition"),(0,l.kt)("p",null,"lib.d.ts:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "target": "es5",\n    "lib": ["es6", "dom"]\n  }\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tsc --target es5 --lib dom,es6\n")),(0,l.kt)("h3",{id:"namespace"},"Namespace"),(0,l.kt)("p",null,"Namespace aliases:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import polygons = Shapes.Polygons;\n\nnamespace Shapes {\n  export namespace Polygons {\n    export class Triangle {}\n    export class Square {}\n  }\n}\nconst sq = new polygons.Square(); // Same as 'new Shapes.Polygons.Square()'\n")),(0,l.kt)("p",null,"Library namespace declaration\nwith ",(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/declaration-merging.html#merging-namespaces-with-classes-functions-and-enums"},"Declaration Merging"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export = React;\nexport as namespace React;\n\ndeclare namespace React {\n  type ElementType<P = any> =\n    | {\n        [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K]\n          ? K\n          : never;\n      }[keyof JSX.IntrinsicElements]\n    | ComponentType<P>;\n}\n")),(0,l.kt)("h3",{id:"module-resolution"},"Module Resolution"),(0,l.kt)("h4",{id:"classic-module-resolution"},"Classic Module Resolution"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import { a } from './module'"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/folder/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/folder/module.d.ts"),".")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import { a } from 'module'"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/folder/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/folder/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/module.d.ts"),".")),(0,l.kt)("h4",{id:"node-module-resolution"},"Node Module Resolution"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"const x = require('./module')"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module/package.json")," + ",(0,l.kt)("inlineCode",{parentName:"li"},'{ "types": "lib/mainModule.ts" }'),"\n= ",(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module/lib/mainModule.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module/index.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module/index.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/module/index.d.ts"),".")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"const x = require('module')"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module/package.json")," (if it specifies a ",(0,l.kt)("inlineCode",{parentName:"li"},"types")," property)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/@types/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module/index.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module/index.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/src/node_modules/module/index.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module/package.json")," (if it specifies a ",(0,l.kt)("inlineCode",{parentName:"li"},"types")," property)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/@types/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module/index.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module/index.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/root/node_modules/module/index.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module/package.json")," (if it specifies a ",(0,l.kt)("inlineCode",{parentName:"li"},"types")," property)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/@types/module.d.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module/index.ts"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module/index.tsx"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/module/index.d.ts"),".")),(0,l.kt)("h2",{id:"basic-types"},"Basic Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"boolean"),(0,l.kt)("li",{parentName:"ul"},"number"),(0,l.kt)("li",{parentName:"ul"},"string"),(0,l.kt)("li",{parentName:"ul"},"array"),(0,l.kt)("li",{parentName:"ul"},"tuple:\narray with ",(0,l.kt)("strong",{parentName:"li"},"fixed number")," of elements whose types are known (no need to be same)."),(0,l.kt)("li",{parentName:"ul"},"enum"),(0,l.kt)("li",{parentName:"ul"},"void"),(0,l.kt)("li",{parentName:"ul"},"null"),(0,l.kt)("li",{parentName:"ul"},"undefined"),(0,l.kt)("li",{parentName:"ul"},"any"),(0,l.kt)("li",{parentName:"ul"},"unknown: \u4efb\u4f55\u7c7b\u578b\u90fd\u80fd\u5206\u914d\u7ed9 unknown, \u4f46 unknown \u4e0d\u80fd\u5206\u914d\u7ed9\u5176\u4ed6\u57fa\u672c\u7c7b\u578b."),(0,l.kt)("li",{parentName:"ul"},"never: switch default case guard.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"let num: number;\nlet str: string;\nlet bool: boolean;\nlet boolArray: boolean[];\nlet tuple: [string, number];\nlet power: any;\n\n// \u8d4b\u503c\u4efb\u610f\u7c7b\u578b\npower = '123';\npower = 123;\n\n// \u5b83\u4e5f\u517c\u5bb9\u4efb\u4f55\u7c7b\u578b\npower = num;\nnum = power;\n\nfunction log(message: string): void {\n  console.log(message);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function unknownColor(x: never): never {\n  throw new Error('unknown color');\n}\n\ntype Color = 'red' | 'green' | 'blue';\n\nfunction getColorName(c: Color): string {\n  switch (c) {\n    case 'red':\n      return 'is red';\n    case 'green':\n      return 'is green';\n    default:\n      return unknownColor(c);\n  }\n}\n")),(0,l.kt)("h2",{id:"enum-types"},"Enum Types"),(0,l.kt)("h3",{id:"number-enum"},"Number Enum"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"enum CardSuit {\n  Clubs = 1,\n  Diamonds, // 2\n  Hearts, // 3\n  Spades, // 4\n}\n\n// \u7b80\u5355\u7684\u4f7f\u7528\u679a\u4e3e\u7c7b\u578b\nlet Card = CardSuit.Clubs;\n\n// \u7c7b\u578b\u5b89\u5168\nCard = 'not a member of card suit'; // Error: string \u4e0d\u80fd\u8d4b\u503c\u7ed9 `CardSuit` \u7c7b\u578b\n")),(0,l.kt)("h3",{id:"string-enum"},"String Enum"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"enum EvidenceTypeEnum {\n  UNKNOWN = '',\n  PASSPORT_VISA = 'passport_visa',\n  PASSPORT = 'passport',\n  SIGHTED_STUDENT_CARD = 'sighted_tertiary_edu_id',\n  SIGHTED_KEYPASS_CARD = 'sighted_keypass_card',\n  SIGHTED_PROOF_OF_AGE_CARD = 'sighted_proof_of_age_card',\n}\n")),(0,l.kt)("h3",{id:"enum-with-functions"},"Enum with Functions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"enum Weekday {\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n  Sunday,\n}\n\nnamespace Weekday {\n  export function isBusinessDay(day: Weekday) {\n    switch (day) {\n      case Weekday.Saturday:\n      case Weekday.Sunday:\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nconst mon = Weekday.Monday;\nconst sun = Weekday.Sunday;\n\nconsole.log(Weekday.isBusinessDay(mon)); // true\nconsole.log(Weekday.isBusinessDay(sun));\n")),(0,l.kt)("h3",{id:"enum-as-flags"},"Enum as Flags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"enum AnimalFlags {\n  None = 0,\n  HasClaws = 1 << 0,\n  CanFly = 1 << 1,\n  EatsFish = 1 << 2,\n  Endangered = 1 << 3,\n  EndangeredFlyingClawedFishEating = HasClaws | CanFly | EatsFish | Endangered,\n}\n\ninterface Animal {\n  flags: AnimalFlags;\n  [key: string]: any;\n}\n\nfunction printAnimalAbilities(animal: Animal) {\n  const animalFlags = animal.flags;\n  if (animalFlags & AnimalFlags.HasClaws) {\n    console.log('animal has claws');\n  }\n  if (animalFlags & AnimalFlags.CanFly) {\n    console.log('animal can fly');\n  }\n  if (animalFlags === AnimalFlags.None) {\n    console.log('nothing');\n  }\n}\n\nconst animal = { flags: AnimalFlags.None };\nprintAnimalAbilities(animal); // nothing\nanimal.flags |= AnimalFlags.HasClaws;\nprintAnimalAbilities(animal); // animal has claws\nanimal.flags &= ~AnimalFlags.HasClaws;\nprintAnimalAbilities(animal); // nothing\nanimal.flags |= AnimalFlags.HasClaws | AnimalFlags.CanFly;\nprintAnimalAbilities(animal); // animal has claws, animal can fly\n")),(0,l.kt)("h3",{id:"enum-index-signature"},"Enum Index Signature"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"keyof typeof EnumType"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"enum ColorPalette {\n  red = '#f03e3e',\n  pink = '#d7336c',\n  grape = '#ae3ec9',\n  violet = '#7048e8',\n  indigo = '#4263eb',\n  blue = '#1890ff',\n  cyan = '#1098ad',\n  teal = '#0ca678',\n  green = '#37b24d',\n  lime = '#74b816',\n  yellow = '#f59f00',\n  orange = '#f76707',\n}\n\nconst hashString = (name = '') => {\n  return name.length;\n};\n\nconst getColorByName = (name = ''): string => {\n  const palette = Object.keys(ColorPalette);\n  const colorIdx = hashString(name) % palette.length;\n  const paletteIdx = palette[colorIdx] as keyof typeof ColorPalette;\n  return ColorPalette[paletteIdx];\n};\n")),(0,l.kt)("h3",{id:"internal-of-enum"},"Internal of Enum"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"enum Tristate {\n  False,\n  True,\n  Unknown,\n}\n\n// compiles to\nlet Tristate;\n(function (Tristate) {\n  Tristate[(Tristate.False = 0)] = 'False';\n  Tristate[(Tristate.True = 1)] = 'True';\n  Tristate[(Tristate.Unknown = 2)] = 'Unknown';\n})(Tristate || (Tristate = {}));\n\nconsole.log(Tristate[0]); // 'False'\nconsole.log(Tristate.False); // 0\nconsole.log(Tristate[Tristate.False]); // 'False' because `Tristate.False == 0`\n")),(0,l.kt)("h2",{id:"function"},"Function"),(0,l.kt)("h3",{id:"function-interface"},"Function Interface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ReturnString {\n  (): string;\n}\n\ndeclare const foo: ReturnString;\n\nconst bar = foo(); // bar \u88ab\u63a8\u65ad\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Complex {\n  (foo: string, bar?: number, ...others: boolean[]): number;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Overloaded {\n  (foo: string): string;\n  (foo: number): number;\n}\n\n// \u5b9e\u73b0\u63a5\u53e3\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\nfunction stringOrNumber(foo: number): number;\nfunction stringOrNumber(foo: string): string;\nfunction stringOrNumber(foo: any): any {\n  if (typeof foo === 'number') {\n    return foo * foo;\n  } else if (typeof foo === 'string') {\n    return `hello ${foo}`;\n  }\n}\n\nconst overloaded: Overloaded = stringOrNumber;\n\n// \u4f7f\u7528\nconst str = overloaded(''); // str \u88ab\u63a8\u65ad\u4e3a 'string'\nconst num = overloaded(123); // num \u88ab\u63a8\u65ad\u4e3a 'number'\n")),(0,l.kt)("p",null,"WangCai extends Dog extends Animal.\nAnimal => WangCai \u662f Dog => Dog \u7684\u5b50\u7c7b\u578b:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u517c\u5bb9\u662f\u53cd\u5411\u7684, \u79f0\u4e4b\u4e3a\u9006\u53d8."),(0,l.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u517c\u5bb9\u662f\u6b63\u5411\u7684, \u79f0\u4e4b\u4e3a\u534f\u53d8.")),(0,l.kt)("h3",{id:"arrow-function"},"Arrow Function"),(0,l.kt)("p",null,"\u5728\u4e00\u4e2a\u4ee5 number \u7c7b\u578b\u4e3a\u53c2\u6570\uff0c\u4ee5 string \u7c7b\u578b\u4e3a\u8fd4\u56de\u503c\u7684\u51fd\u6570\u4e2d:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const simple: (foo: number) => string = foo => foo.toString();\n")),(0,l.kt)("h3",{id:"weak-overload"},"Weak Overload"),(0,l.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u7684\u7c7b\u578b\u91cd\u8f7d:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u591a\u4e2a\u91cd\u8f7d\u7b7e\u540d\u548c\u4e00\u4e2a\u5b9e\u73b0\u7b7e\u540d."),(0,l.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u4e86\u91cd\u8f7d\u7b7e\u540d, \u5219\u5b9e\u73b0\u7b7e\u540d",(0,l.kt)("strong",{parentName:"li"},"\u5bf9\u5916\u4e0d\u53ef\u89c1"),"."),(0,l.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u7b7e\u540d\u5fc5\u987b\u517c\u5bb9\u91cd\u8f7d\u7b7e\u540d.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// \u91cd\u8f7d\nfunction padding(all: number);\nfunction padding(topAndBottom: number, leftAndRight: number);\nfunction padding(top: number, right: number, bottom: number, left: number);\nfunction padding(a: number, b?: number, c?: number, d?: number) {\n  if (b === undefined && c === undefined && d === undefined) {\n    b = c = d = a;\n  } else if (c === undefined && d === undefined) {\n    c = a;\n    d = b;\n  }\n  return {\n    top: a,\n    right: b,\n    bottom: c,\n    left: d,\n  };\n}\n\npadding(1); // Okay: all\npadding(1, 1); // Okay: topAndBottom, leftAndRight\npadding(1, 1, 1, 1); // Okay: top, right, bottom, left\npadding(1, 1, 1); // Error: Not a part of the available overloads\n")),(0,l.kt)("h3",{id:"rest-parameters"},"Rest Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Arr = readonly unknown[];\nfunction partialCall<T extends Arr, U extends Arr, R>(\n  f: (...args: [...T, ...U]) => R,\n  ...headArgs: T\n) {\n  return (...tailArgs: U) => f(...headArgs, ...tailArgs);\n}\n\nconst foo = (x: string, y: number, z: boolean) => {};\nconst f1 = partialCall(foo, 100);\nconst f2 = partialCall(foo, 'hello', 100, true, 'oops');\nconst f3 = partialCall(foo, 'hello');\n\nf3(123, true);\nf3();\nf3(123, 'hello');\n")),(0,l.kt)("h2",{id:"interface"},"Interface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Name {\n  first: string;\n  second: string;\n}\n\nlet name: Name;\nname = {\n  first: 'John',\n  second: 'Doe',\n};\n\nname = {\n  // Error: 'Second is missing'\n  first: 'John',\n};\n\nname = {\n  // Error: 'Second is the wrong type'\n  first: 'John',\n  second: 1337,\n};\n")),(0,l.kt)("h3",{id:"extends-interface"},"Extends Interface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Lib a.d.ts\ninterface Point {\n  x: number;\n  y: number;\n}\ndeclare const myPoint: Point;\n\n// Lib b.d.ts\ninterface Point {\n  z: number;\n}\n\n// Your code\nconst z = myPoint.z; // Allowed!\n")),(0,l.kt)("h3",{id:"implements-interface"},"Implements Interface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Crazy {\n  new (): {\n    hello: number;\n  };\n}\n\nclass CrazyClass implements Crazy {\n  constructor() {\n    return { hello: 123 };\n  }\n}\n\n// Because\nconst crazy = new CrazyClass(); // crazy would be { hello:123 }\n")),(0,l.kt)("h3",{id:"interface-vs-type-alias"},"Interface vs Type Alias"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type aliases may not participate in declaration merging, but interfaces can."),(0,l.kt)("li",{parentName:"ul"},"Interfaces may only be used to declare the shapes of object, not re-name primitives."),(0,l.kt)("li",{parentName:"ul"},"The key distinction is that a type cannot be re-opened to add new properties,\nan interface which is always extendable.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Window {\n  title: string;\n}\n\ninterface Window {\n  ts: TypeScriptAPI;\n}\n\n// Error: Duplicate identifier 'Window'.\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Window {\n  title: string;\n}\n\ninterface Window {\n  ts: TypeScriptAPI;\n}\n\nconst src = 'const a = \"Hello World\"';\nwindow.ts.transpileModule(src, {});\n")),(0,l.kt)("h2",{id:"access-modifiers"},"Access Modifiers"),(0,l.kt)("h3",{id:"member-access-modifiers"},"Member Access Modifiers"),(0,l.kt)("p",null,"Public, Protected and Private:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"class Singleton {\n  private static instance: Singleton;\n  private constructor() {\n    // ..\n  }\n\n  public static getInstance() {\n    if (!Singleton.instance) {\n      Singleton.instance = new Singleton();\n    }\n\n    return Singleton.instance;\n  }\n\n  someMethod() {}\n}\n\nconst someThing = new Singleton(); // Error: constructor of 'singleton' is private\n\nconst instance = Singleton.getInstance(); // do some thing with the instance\n")),(0,l.kt)("h3",{id:"readonly-types"},"Readonly Types"),(0,l.kt)("p",null,"Readonly type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Foo {\n  readonly bar: number;\n  readonly bas: number;\n}\n\n// \u521d\u59cb\u5316\nconst foo: Foo = { bar: 123, bas: 456 };\n\n// \u4e0d\u80fd\u88ab\u6539\u53d8\nfoo.bar = 456; // Error: foo.bar \u4e3a\u4ec5\u8bfb\u5c5e\u6027\n")),(0,l.kt)("p",null,"Readonly indexable signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Foo = Readonly<Record<number, number>>;\n\n// \u4f7f\u7528\n\nconst foo: Foo = { 0: 123, 2: 345 };\nconsole.log(foo[0]); // ok\uff08\u8bfb\u53d6\uff09\nfoo[0] = 456; // Error: \u5c5e\u6027\u53ea\u8bfb\n")),(0,l.kt)("p",null,"Readonly properties of class"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"class Foo {\n  readonly bar = 1; // OK\n  readonly baz: string;\n  constructor() {\n    this.baz = 'hello'; // OK\n  }\n}\n")),(0,l.kt)("p",null,"Readonly generic type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Foo {\n  bar: number;\n  bas: number;\n}\n\ntype FooReadonly = Readonly<Foo>;\n\nconst foo: Foo = { bar: 123, bas: 456 };\nconst fooReadonly: FooReadonly = { bar: 123, bas: 456 };\n\nfoo.bar = 456; // ok\nfooReadonly.bar = 456; // Error: bar \u5c5e\u6027\u53ea\u8bfb\n")),(0,l.kt)("p",null,"In React"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"class Something extends React.Component<{ foo: number }, { baz: number }> {\n  someMethod() {\n    this.props.foo = 123; // Error: props \u662f\u4e0d\u53ef\u53d8\u7684\n    // eslint-disable-next-line react/no-direct-mutation-state\n    this.state.baz = 456; // Error: \u4f60\u5e94\u8be5\u4f7f\u7528 this.setState()\n  }\n}\n")),(0,l.kt)("h2",{id:"index-signature"},"Index Signature"),(0,l.kt)("p",null,"For ",(0,l.kt)("inlineCode",{parentName:"p"},"JavaScript"),",\nimplicitly calls ",(0,l.kt)("inlineCode",{parentName:"p"},"toString")," on any object index signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const obj = {\n  toString() {\n    console.log('toString called');\n    return 'Hello';\n  },\n};\n\nconst foo: any = {};\nfoo[obj] = 'World'; // toString called\nconsole.log(foo[obj]); // toString called, World\nconsole.log(foo.Hello); // World\n")),(0,l.kt)("p",null,"TypeScript will give an error to prevent beginners\nfrom doing such things."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Index Signature Error"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Element implicitly has an 'any' type\nbecause expression of type 'string' can't be used to index type XXX.\n")),(0,l.kt)("p",null,"can fixed with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Record<string, T>"),"."),(0,l.kt)("li",{parentName:"ul"},"explicit ",(0,l.kt)("strong",{parentName:"li"},"const")," propertyName type:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// propertyName should be extends keyof T\nfunction getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n  return o[propertyName]; // o[propertyName] is of type T[K]\n}\n")),(0,l.kt)("h3",{id:"index-signature-type-checking"},"Index Signature Type Checking"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const x: { foo: number; [x: string]: any };\nx = { foo: 1, baz: 2 }; // ok, 'baz' \u5c5e\u6027\u5339\u914d\u4e8e\u7d22\u5f15\u7b7e\u540d\n")),(0,l.kt)("p",null,"\u5f53\u4f60\u58f0\u660e\u4e00\u4e2a\u7d22\u5f15\u7b7e\u540d\u65f6\uff0c\u6240\u6709\u660e\u786e\u7684\u6210\u5458\u90fd\u5fc5\u987b\u7b26\u5408\u7d22\u5f15\u7b7e\u540d:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// ok\ninterface Foo {\n  [key: string]: number;\n  x: number;\n  y: number;\n}\n\n// Error\ninterface Bar {\n  [key: string]: number;\n  x: number;\n  y: string; // Error: y \u5c5e\u6027\u5fc5\u987b\u4e3a number \u7c7b\u578b\n}\n")),(0,l.kt)("p",null,"\u4f7f\u7528\u4ea4\u53c9\u7c7b\u578b\u53ef\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface FieldState {\n  value: string;\n}\n\ntype FormState = { isValid: boolean } & Record<string, FieldState>;\n")),(0,l.kt)("h3",{id:"select-index-types"},"Select Index Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Index = 'a' | 'b' | 'c';\ntype FromIndex = { [k in Index]?: number };\n\nconst good: FromIndex = { b: 1, c: 2 };\n\n// Error:\n// `{ b: 1, c: 2, d: 3 }` \u4e0d\u80fd\u5206\u914d\u7ed9 'FromIndex'\n// \u5bf9\u8c61\u5b57\u9762\u91cf\u53ea\u80fd\u6307\u5b9a\u5df2\u77e5\u7c7b\u578b\uff0c'd' \u4e0d\u5b58\u5728 'FromIndex' \u7c7b\u578b\u4e0a\nconst bad: FromIndex = { b: 1, c: 2, d: 3 };\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type FromSomeIndex<K extends string> = { [key in K]: number };\n")),(0,l.kt)("h3",{id:"symbol-index-types"},"Symbol Index Types"),(0,l.kt)("p",null,"From ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/pull/44512"},"typescript v4.4.0"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type SymbolMap<T> = Record<symbol, T>;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface PropertyMap {\n  [key: string]: string;\n  [key: number]: string;\n  [key: symbol]: string;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Colors = Record<symbol, number>;\n\nconst red = Symbol('red');\nconst green = Symbol('green');\nconst blue = Symbol('blue');\n\nconst colors: Colors = {};\n\ncolors[red] = 255; // Assignment of a number is allowed\nconst redVal = colors[red]; // 'redVal' has the type 'number'\n\ncolors[blue] = 'da ba dee'; // Error: Type 'string' is not assignable to type 'number'.\n")),(0,l.kt)("h3",{id:"template-literal-index-types"},"Template Literal Index Types"),(0,l.kt)("p",null,"From ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/pull/44512"},"typescript v4.4.0"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type DataProps = Record<`data-${string}`, string>;\n\n// eslint-disable-next-line @typescript-eslint/consistent-indexed-object-style\ninterface OptionsWithDataProps extends Options {\n  // Permit any property starting with 'data-'.\n  [optName: `data-${string}`]: unknown;\n}\n\nconst b: OptionsWithDataProps = {\n  width: 100,\n  height: 100,\n  'data-blah': true, // Works!\n  'unknown-property': true, // Error! 'unknown-property' wasn't declared in 'OptionsWithDataProps'.\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Thing<T> = Record<'a' | `foo${T}` | symbol, string>;\n\ntype StringThing = Thing<string>;\n// => { [a: string, [x: `foo${string}`]: string, [x: symbol]: string }\ntype BarThing = Thing<'bar'>;\n// => { [a: string, foobar: string, [x: symbol]: string }\n")),(0,l.kt)("h3",{id:"indexed-access-types"},"Indexed Access Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const MyArray = [\n  { name: 'Alice', age: 15 },\n  { name: 'Bob', age: 23 },\n  { name: 'Eve', age: 38 },\n];\n\ntype Person = typeof MyArray[number];\n// type Person = {\n//   name: string;\n//   age: number;\n// }\n\ntype Age = typeof MyArray[number]['age'];\n// type Age = number\n\ntype Age2 = Person['age'];\n// type Age2 = number\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"{ [K in keyof T]: indexedType }[keyof T]"),": \u8fd4\u56de\u952e\u540d (\u952e\u540d\u7ec4\u6210\u7684\u8054\u5408\u7c7b\u578b)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type PickByValueType<T, ValueType> = Pick<\n  T,\n  { [K in keyof T]-?: T[K] extends ValueType ? K : never }[keyof T]\n>;\n\ntype OmitByValueType<T, ValueType> = Pick<\n  T,\n  { [K in keyof T]-?: T[K] extends ValueType ? never : K }[keyof T]\n>;\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K;\n}[keyof T];\n\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never;\n}[keyof T];\n\ntype FunctionTypeKeys<T extends object> = {\n  [K in keyof T]-?: T[K] extends Function ? K : never;\n}[keyof T];\n\ntype Filter<T extends object, ValueType> = {\n  [K in keyof T as ValueType extends T[K] ? K : never]: T[K];\n}; // Filter<{name: string; id: number;}, string> => {name: string;}\n")),(0,l.kt)("h2",{id:"literal-types"},"Literal Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type CardinalDirection = 'North' | 'East' | 'South' | 'West';\n\nfunction move(distance: number, direction: CardinalDirection) {\n  // ...\n}\n\nmove(1, 'North'); // ok\nmove(1, 'Nurth'); // Error\n\ntype OneToFive = 1 | 2 | 3 | 4 | 5;\ntype Bools = true | false;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Options {\n  width: number;\n}\n\nfunction configure(x: Options | 'auto') {\n  // ...\n}\n\nconfigure({ width: 100 });\nconfigure('auto');\nconfigure('automatic');\n// ERROR:\n// Argument of type '\"automatic\"' is not assignable\n// to parameter of type 'Options | \"auto\"'.\n")),(0,l.kt)("h2",{id:"template-literal-types"},"Template Literal Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Based on literal types."),(0,l.kt)("li",{parentName:"ul"},"4 intrinsic String Manipulation Types:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Uppercase<StringType>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Lowercase<StringType>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Capitalize<StringType>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Uncapitalize<StringType>"))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface PropEventSource<Type> {\n  on<Key extends string & keyof Type>(\n    eventName: `${Key}Changed`,\n    callback: (newValue: Type[Key]) => void\n  ): void;\n}\n\n// Create a \"watched object\" with an 'on' method\n// so that you can watch for changes to properties.\ndeclare function makeWatchedObject<Type>(\n  obj: Type\n): Type & PropEventSource<Type>;\n\nconst person = makeWatchedObject({\n  firstName: 'Yi',\n  lastName: 'Long',\n  age: 26,\n});\n\nperson.on('firstNameChanged', newName => {\n  // (parameter) newName: string\n  console.log(`new name is ${newName.toUpperCase()}`);\n});\n\nperson.on('ageChanged', newAge => {\n  // (parameter) newAge: number\n  if (newAge < 0) {\n    console.warn('warning! negative age');\n  }\n});\n\n// It's typo-resistent\nperson.on('firstName', () => {});\n// Argument of type '\"firstName\"' is not assignable to\n// parameter of type '\"firstNameChanged\" | \"lastNameChanged\" | \"ageChanged\"'.\n\nperson.on('fstNameChanged', () => {});\n// Argument of type '\"fstNameChanged\"' is not assignable to\n// parameter of type '\"firstNameChanged\" | \"lastNameChanged\" | \"ageChanged\"'.\n")),(0,l.kt)("h2",{id:"moving-types"},"Moving Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// \u6355\u83b7\u5b57\u7b26\u4e32\u7684\u7c7b\u578b\u4e0e\u503c\nconst foo = 'Hello World';\n\n// \u4f7f\u7528\u4e00\u4e2a\u6355\u83b7\u7684\u7c7b\u578b\nlet bar: typeof foo;\n\n// bar \u4ec5\u80fd\u88ab\u8d4b\u503c 'Hello World'\nbar = 'Hello World'; // ok\nbar = 'anything else'; // Error\n")),(0,l.kt)("h3",{id:"keyof-types"},"Keyof Types"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"keyof foo")," get literal types of ",(0,l.kt)("inlineCode",{parentName:"p"},"foo")," keys (",(0,l.kt)("inlineCode",{parentName:"p"},"Object.keys"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const colors = {\n  red: 'red',\n  blue: 'blue',\n};\n\ntype Colors = keyof typeof colors;\n\nlet color: Colors; // color \u7684\u7c7b\u578b\u662f 'red' | 'blue' (literal types)\ncolor = 'red'; // ok\ncolor = 'blue'; // ok\ncolor = 'anythingElse'; // Error\n")),(0,l.kt)("h2",{id:"generic-types"},"Generic Types"),(0,l.kt)("h3",{id:"generic-function"},"Generic Function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function reverse<T>(items: T[]): T[] {\n  const toReturn = [];\n  for (let i = items.length - 1; i >= 0; i--) {\n    toReturn.push(items[i]);\n  }\n  return toReturn;\n}\n")),(0,l.kt)("h3",{id:"generic-class"},"Generic Class"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// \u521b\u5efa\u4e00\u4e2a\u6cdb\u578b\u7c7b\nclass Queue<T> {\n  private data = [];\n  push = (item: T) => this.data.push(item);\n  pop = (): T => this.data.shift();\n}\n\n// \u7b80\u5355\u7684\u4f7f\u7528\nconst queue = new Queue<number>();\nqueue.push(0);\nqueue.push('1'); // Error\uff1a\u4e0d\u80fd\u63a8\u5165\u4e00\u4e2a `string`\uff0c\u53ea\u6709 number \u7c7b\u578b\u88ab\u5141\u8bb8\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Listener<T> {\n  (event: T): any;\n}\n\ninterface Disposable {\n  dispose(): any;\n}\n\nclass TypedEvent<T> {\n  private listeners: Listener<T>[] = [];\n  private listenersOncer: Listener<T>[] = [];\n\n  public on = (listener: Listener<T>): Disposable => {\n    this.listeners.push(listener);\n\n    return {\n      dispose: () => this.off(listener),\n    };\n  };\n\n  public once = (listener: Listener<T>): void => {\n    this.listenersOncer.push(listener);\n  };\n\n  public off = (listener: Listener<T>) => {\n    const callbackIndex = this.listeners.indexOf(listener);\n    if (callbackIndex > -1) this.listeners.splice(callbackIndex, 1);\n  };\n\n  public emit = (event: T) => {\n    this.listeners.forEach(listener => listener(event));\n\n    this.listenersOncer.forEach(listener => listener(event));\n\n    this.listenersOncer = [];\n  };\n\n  public pipe = (te: TypedEvent<T>): Disposable => {\n    return this.on(e => te.emit(e));\n  };\n}\n")),(0,l.kt)("h3",{id:"specific-instances-from-generic-types"},"Specific Instances from Generic Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"class Foo<T> {\n  foo: T;\n}\n\nconst FooNumber = Foo as { new (): Foo<number> }; // ref 1\n\nfunction id<T>(x: T) {\n  return x;\n}\n\nconst idNum = id as { (x: number): number };\n")),(0,l.kt)("h3",{id:"generic-types-constraints"},"Generic Types Constraints"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Lengthwise {\n  length: number;\n}\n\nfunction createList<T extends number | Lengthwise>(): T[] {\n  return [] as T[];\n}\n\nconst numberList = createList<number>(); // ok\nconst stringList = createList<string>(); // ok\nconst arrayList = createList<any[]>(); // ok\nconst boolList = createList<boolean>(); // error\n")),(0,l.kt)("h3",{id:"generic-types-for-types-programming"},"Generic Types for Types Programming"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5728\u7c7b\u578b\u7f16\u7a0b\u91cc, \u6cdb\u578b\u5c31\u662f\u53d8\u91cf.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function pick<T extends object, U extends keyof T>(obj: T, keys: U[]): T[U][] {\n  return keys.map(key => obj[key]);\n}\n")),(0,l.kt)("h2",{id:"union-types"},"Union Types"),(0,l.kt)("p",null,"\u591a\u79cd\u7c7b\u578b\u4e4b\u4e00"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function formatCommandLine(command: string[] | string) {\n  let line = '';\n  if (typeof command === 'string') {\n    line = command.trim();\n  } else {\n    line = command.join(' ').trim();\n  }\n\n  // Do stuff with line: string\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Square {\n  kind: 'square';\n  size: number;\n}\n\ninterface Rectangle {\n  kind: 'rectangle';\n  width: number;\n  height: number;\n}\n\n// \u6709\u4eba\u4ec5\u4ec5\u662f\u6dfb\u52a0\u4e86 `Circle` \u7c7b\u578b\n// \u6211\u4eec\u53ef\u80fd\u5e0c\u671b TypeScript \u80fd\u5728\u4efb\u4f55\u88ab\u9700\u8981\u7684\u5730\u65b9\u629b\u51fa\u9519\u8bef\ninterface Circle {\n  kind: 'circle';\n  radius: number;\n}\n\ntype Shape = Square | Rectangle | Circle;\n\nfunction area(s: Shape) {\n  switch (s.kind) {\n    case 'square':\n      return s.size * s.size;\n    case 'rectangle':\n      return s.width * s.height;\n    case 'circle':\n      return Math.PI * s.radius ** 2;\n    default: {\n      const _exhaustiveCheck: never = s;\n      return _exhaustiveCheck;\n    }\n  }\n}\n")),(0,l.kt)("h2",{id:"intersection-types"},"Intersection Types"),(0,l.kt)("p",null,"extend \u662f\u4e00\u79cd\u975e\u5e38\u5e38\u89c1\u7684\u6a21\u5f0f,\nintersection type \u5177\u6709\u6240\u6709\u7c7b\u578b\u7684\u529f\u80fd"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function extend<T, U>(first: T, second: U): T & U {\n  const result = {} as T & U;\n  for (const id in first) {\n    (result as T)[id] = first[id];\n  }\n  for (const id in second) {\n    if (!Object.prototype.hasOwnProperty.call(result, id)) {\n      (result as U)[id] = second[id];\n    }\n  }\n\n  return result;\n}\n\nconst x = extend({ a: 'hello' }, { b: 42 });\n\n// \u73b0\u5728 x \u62e5\u6709\u4e86 a \u5c5e\u6027\u4e0e b \u5c5e\u6027\nconst a = x.a;\nconst b = x.b;\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"connect")," in React"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import * as React from 'react';\nimport type * as Redux from 'redux';\n\nimport type { MyReduxState } from './my-root-reducer.ts';\n\nexport interface OwnProps {\n  propFromParent: number;\n}\n\ninterface StateProps {\n  propFromReduxStore: string;\n}\n\ninterface DispatchProps {\n  onSomeEvent: () => void;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface State {\n  internalComponentStateField: string;\n}\n\nclass MyComponent extends React.Component<Props, State> {\n  // ...\n}\n\nfunction mapStateToProps(state: MyReduxState, ownProps: OwnProps): StateProps {\n  // ...\n}\n\nfunction mapDispatchToProps(\n  dispatch: Redux.Dispatch<any>,\n  ownProps: OwnProps\n): DispatchProps {\n  // ...\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyComponent);\n")),(0,l.kt)("h2",{id:"conditional-types"},"Conditional Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Basic conditional types\njust like ",(0,l.kt)("inlineCode",{parentName:"li"},"if else")," statement."),(0,l.kt)("li",{parentName:"ul"},"Nested conditional types\njust like ",(0,l.kt)("inlineCode",{parentName:"li"},"switch case")," statement."),(0,l.kt)("li",{parentName:"ul"},"Distributive conditional types\njust like ",(0,l.kt)("inlineCode",{parentName:"li"},"map")," statement (",(0,l.kt)("inlineCode",{parentName:"li"},"loop")," statement) on ",(0,l.kt)("inlineCode",{parentName:"li"},"union")," type."),(0,l.kt)("li",{parentName:"ul"},"Conditional types make TypeScript become real programing type system:\nTypeScript type system is ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/microsoft/TypeScript/issues/14833"},"Turing Complete"),".")),(0,l.kt)("h3",{id:"basic-conditional-types"},"Basic Conditional Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Animal {\n  live(): void;\n}\ninterface Dog extends Animal {\n  woof(): void;\n}\n\ntype Example1 = Dog extends Animal ? number : string;\n// => type Example1 = number\n\ntype Example2 = RegExp extends Animal ? number : string;\n// => type Example2 = string\n")),(0,l.kt)("h3",{id:"nested-conditional-types"},"Nested Conditional Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Conditional types can be nested."),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5d4c\u5957\u6761\u4ef6\u7c7b\u578b, \u53ef\u4ee5\u5c06\u7c7b\u578b\u7ea6\u675f\u6536\u62e2\u5230\u7cbe\u786e\u8303\u56f4.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type TypeName<T> = T extends string\n  ? 'string'\n  : T extends number\n  ? 'number'\n  : T extends boolean\n  ? 'boolean'\n  : T extends undefined\n  ? 'undefined'\n  : T extends Function\n  ? 'function'\n  : 'object';\n")),(0,l.kt)("h3",{id:"distributive-conditional-types"},"Distributive Conditional Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Conditional types in which checked type is ",(0,l.kt)("inlineCode",{parentName:"li"},"naked type parameter")," are called DCT."),(0,l.kt)("li",{parentName:"ul"},"DCT are automatically distributed over union types during instantiation."),(0,l.kt)("li",{parentName:"ul"},"When conditional types act on a generic type,\nthey become distributive when given a union type."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"( A | B | C ) extends T ? X : Y")," \u76f8\u5f53\u4e8e\n",(0,l.kt)("inlineCode",{parentName:"li"},"(A extends T ? X : Y) | (B extends T ? X : Y) | (B extends T ? X : Y)")),(0,l.kt)("li",{parentName:"ul"},"\u6ca1\u6709\u88ab\u989d\u5916\u5305\u88c5\u7684\u8054\u5408\u7c7b\u578b\u53c2\u6570, \u5728\u6761\u4ef6\u7c7b\u578b\u8fdb\u884c\u5224\u5b9a\u65f6\u4f1a\u5c06\u8054\u5408\u7c7b\u578b\u5206\u53d1, \u5206\u522b\u8fdb\u884c\u5224\u65ad.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'// "string" | "function"\ntype T1 = TypeName<string | (() => void)>;\n\n// "string" | "object"\ntype T2 = TypeName<string | string[]>;\n\n// "object"\ntype T3 = TypeName<string[] | number[]>;\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Naked<T> = T extends boolean ? 'Y' : 'N';\ntype Wrapped<T> = [T] extends [boolean] ? 'Y' : 'N';\n\n/*\n * \u5148\u5206\u53d1\u5230 Naked<number> | Naked<boolean>\n * \u7ed3\u679c\u662f \"N\" | \"Y\"\n */\ntype Distributed = Naked<number | boolean>;\n\n/*\n * \u4e0d\u4f1a\u5206\u53d1 \u76f4\u63a5\u662f [number | boolean] extends [boolean]\n * \u7ed3\u679c\u662f \"N\"\n */\ntype NotDistributed = Wrapped<number | boolean>;\n")),(0,l.kt)("h2",{id:"mapped-types"},"Mapped Types"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/blob/main/src/lib/es5.d.ts#L1448-L1546"},"Built-in Mapped Types"),"."),(0,l.kt)("h3",{id:"basic-mapped-types"},"Basic Mapped Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Readonly<T> = { readonly [P in keyof T]: T[P] };\ntype Partial<T> = { [P in keyof T]?: T[P] };\ntype ReadonlyPartial<T> = { readonly [P in keyof T]?: T[P] };\ntype Required<T> = { [P in keyof T]-?: T[P] };\ntype Nullable<T> = { [P in keyof T]: T[P] | null };\ntype NonNullable<T> = T extends null | undefined ? never : T;\ntype Clone<T> = { [P in keyof T]: T[P] };\ntype Stringify<T> = { [P in keyof T]: string };\n")),(0,l.kt)("h3",{id:"union-mapped-types"},"Union Mapped Types"),(0,l.kt)("p",null,"With distributive conditional type:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Extract<T, U> = T extends U ? T : never;\ntype Exclude<T, U> = T extends U ? never : T;\n")),(0,l.kt)("h3",{id:"key-mapped-types"},"Key Mapped Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Pick<T, K extends keyof T> = { [P in K]: T[P] };\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\ntype Record<K extends keyof any, T> = { [P in K]: T };\n")),(0,l.kt)("h3",{id:"function-mapped-types"},"Function Mapped Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Parameters<T extends (...args: any) => any> = T extends (\n  ...args: infer P\n) => any\n  ? P\n  : never;\n\ntype ConstructorParameters<T extends new (...args: any) => any> =\n  T extends new (...args: infer P) => any ? P : never;\n\ntype ReturnType<T extends (...args: any) => any> = T extends (\n  ...args: any[]\n) => infer R\n  ? R\n  : any;\n\ntype InstanceType<T extends new (...args: any) => any> = T extends new (\n  ...args: any\n) => infer R\n  ? R\n  : any;\n\ntype ThisParameterType<T> = T extends (this: infer U, ...args: any[]) => any\n  ? U\n  : unknown;\n")),(0,l.kt)("h3",{id:"custom-mapped-types"},"Custom Mapped Types"),(0,l.kt)("p",null,"Combine with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"in keyof")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"readonly")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"as")),(0,l.kt)("li",{parentName:"ul"},"Template literal types."),(0,l.kt)("li",{parentName:"ul"},"Conditional types."),(0,l.kt)("li",{parentName:"ul"},"Built-in types."),(0,l.kt)("li",{parentName:"ul"},"Other mapped types."),(0,l.kt)("li",{parentName:"ul"},"Other custom types."),(0,l.kt)("li",{parentName:"ul"},"etc.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Removes 'readonly' attributes from a type's properties\ntype Mutable<Type> = {\n  -readonly [Property in keyof Type]: Type[Property];\n};\n\ninterface LockedAccount {\n  readonly id: string;\n  readonly name: string;\n}\n\ntype UnlockedAccount = Mutable<LockedAccount>;\n// type UnlockedAccount = {\n//   id: string;\n//   name: string;\n// };\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Mapped types via `as` type\ntype Getters<Type> = {\n  [Property in keyof Type as `get${Capitalize<\n    string & Property\n  >}`]: () => Type[Property];\n};\n\ninterface Person {\n  name: string;\n  age: number;\n  location: string;\n}\n\ntype LazyPerson = Getters<Person>;\n// type LazyPerson = {\n//   getName: () => string;\n//   getAge: () => number;\n//   getLocation: () => string;\n// }\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Remove the 'kind' property\ntype RemoveKindField<Type> = {\n  [Property in keyof Type as Exclude<Property, 'kind'>]: Type[Property];\n};\n\ninterface Circle {\n  kind: 'circle';\n  radius: number;\n}\n\ntype KindlessCircle = RemoveKindField<Circle>;\n// type KindlessCircle = {\n//   radius: number;\n// }\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Mapped type via conditional type\ntype ExtractPII<Type> = {\n  [Property in keyof Type]: Type[Property] extends { pii: true } ? true : false;\n};\n\ninterface DBFields {\n  id: { format: 'incrementing' };\n  name: { type: string; pii: true };\n}\n\ntype ObjectsNeedingGDPRDeletion = ExtractPII<DBFields>;\n// type ObjectsNeedingGDPRDeletion = {\n//   id: false;\n//   name: true;\n// }\n")),(0,l.kt)("h2",{id:"utility-types"},"Utility Types"),(0,l.kt)("h3",{id:"null-type"},"Null Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Nullish = null | undefined;\ntype Nullable<T> = T | null;\ntype NonUndefinedable<A> = A extends undefined ? never : A;\ntype NonNullable<T> = T extends null | undefined ? never : T;\n")),(0,l.kt)("h3",{id:"boolean-type"},"Boolean Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Falsy = false | '' | 0 | null | undefined;\nconst isFalsy = (val: unknown): val is Falsy => !val;\n")),(0,l.kt)("h3",{id:"primitive-type"},"Primitive Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Primitive = string | number | boolean | bigint | symbol | null | undefined;\n\nconst isPrimitive = (val: unknown): val is Primitive => {\n  if (val === null || val === undefined) {\n    return true;\n  }\n\n  const typeDef = typeof val;\n\n  const primitiveNonNullishTypes = [\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol',\n  ];\n\n  return primitiveNonNullishTypes.includes(typeDef);\n};\n")),(0,l.kt)("h3",{id:"promise-type"},"Promise Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// TypeScript 4.5.\n// Get naked Promise<T> type.\ntype Awaited<T> = T extends Promise<infer U> ? Awaited<U> : T;\n\n// A = string.\ntype A = Awaited<Promise<string>>;\n\n// B = number.\ntype B = Awaited<Promise<Promise<number>>>;\n\n// C = boolean | number.\ntype C = Awaited<boolean | Promise<number>>;\n")),(0,l.kt)("h3",{id:"proxy-type"},"Proxy Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Proxy<T> {\n  get(): T;\n  set(value: T): void;\n}\n\ntype Proxify<T> = { [P in keyof T]: Proxy<T[P]> };\n")),(0,l.kt)("h3",{id:"recursive-type"},"Recursive Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type DeepReadonly<T> = {\n  +readonly [P in keyof T]: T[P] extends object ? DeepReadonly<T[P]> : T[P];\n};\n\ntype DeepMutable<T> = {\n  -readonly [P in keyof T]: T[P] extends object ? DeepMutable<T[P]> : T[P];\n};\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];\n};\n\ntype DeepRequired<T> = {\n  [P in keyof T]-?: T[P] extends object | undefined ? DeepRequired<T[P]> : T[P];\n};\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://mp.weixin.qq.com/s/KJdUdwbLN4g4M7xy34m-fA"},(0,l.kt)("inlineCode",{parentName:"a"},"PathOf<Form>")," complex recursive types"))),(0,l.kt)("h3",{id:"lodash-types"},"Lodash Types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Flatten<Type> = Type extends Array<infer Item> ? Item : Type;\n")),(0,l.kt)("h2",{id:"type-inference"},"Type Inference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u7cfb\u7edf\u5728\u83b7\u5f97\u8db3\u591f\u7684\u4fe1\u606f\u540e,\n\u80fd\u5c06 infer \u540e\u8ddf\u968f\u7684\u7c7b\u578b\u53c2\u6570\u63a8\u5bfc\u51fa\u6765,\n\u6700\u540e\u8fd4\u56de\u8fd9\u4e2a\u63a8\u5bfc\u7ed3\u679c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Parameters<T extends (...args: any) => any> = T extends (\n  ...args: infer P\n) => any\n  ? P\n  : never;\n\ntype ConstructorParameters<T extends new (...args: any) => any> =\n  T extends new (...args: infer P) => any ? P : never;\n\ntype ReturnType<T extends (...args: any) => any> = T extends (\n  ...args: any[]\n) => infer R\n  ? R\n  : any;\n\ntype InstanceType<T extends new (...args: any) => any> = T extends new (\n  ...args: any\n) => infer R\n  ? R\n  : any;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const foo = (): string => {\n  return 'sabertaz';\n};\n\n// string\ntype FooReturnType = ReturnType<typeof foo>;\n")),(0,l.kt)("h2",{id:"type-guards"},"Type Guards"),(0,l.kt)("h3",{id:"type-predicates"},"Type Predicates"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"is")," keyword for type predicate.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Falsy = false | '' | 0 | null | undefined;\nconst isFalsy = (val: unknown): val is Falsy => !val;\n")),(0,l.kt)("h3",{id:"in-type-guard"},"In Type Guard"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Fish {\n  swim: () => void;\n}\ninterface Bird {\n  fly: () => void;\n}\n\nfunction move(animal: Fish | Bird) {\n  if ('swim' in animal) {\n    return animal.swim();\n  }\n\n  return animal.fly();\n}\n")),(0,l.kt)("h3",{id:"typeof-type-guard"},"TypeOf Type Guard"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function fn(x: string | number) {\n  if (typeof x === 'string') {\n    return x.length;\n  } else {\n    return x + 1;\n  }\n}\n")),(0,l.kt)("h3",{id:"instance-type-guard"},"Instance Type Guard"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function logValue(x: Date | string) {\n  if (x instanceof Date) {\n    console.log(x.toUTCString());\n  } else {\n    console.log(x.toUpperCase());\n  }\n}\n")),(0,l.kt)("h3",{id:"never-type"},"Never Type"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"never")," type is assignable to every type."),(0,l.kt)("li",{parentName:"ul"},"No type is assignable to ",(0,l.kt)("inlineCode",{parentName:"li"},"never")," (except ",(0,l.kt)("inlineCode",{parentName:"li"},"never")," itself).")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Triangle {\n  kind: 'triangle';\n  sideLength: number;\n}\n\ntype Shape = Circle | Square | Triangle;\n\nfunction getArea(shape: Shape) {\n  switch (shape.kind) {\n    case 'circle':\n      return Math.PI * shape.radius ** 2;\n    case 'square':\n      return shape.sideLength ** 2;\n    default: {\n      // Type 'Triangle' is not assignable to type 'never'.\n      const _exhaustiveCheck: never = shape;\n      return _exhaustiveCheck;\n    }\n  }\n}\n")),(0,l.kt)("h2",{id:"type-assertion"},"Type Assertion"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"<type>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"as type"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"as")," is better in ",(0,l.kt)("inlineCode",{parentName:"p"},".jsx"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"let foo: any;\nconst bar = foo as string; // \u73b0\u5728 bar \u7684\u7c7b\u578b\u662f 'string'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function handler(event: Event) {\n  const mouseEvent = event as MouseEvent;\n}\n")),(0,l.kt)("h2",{id:"mixins"},"Mixins"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// \u6240\u6709 mixins \u90fd\u9700\u8981\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\n/////////////\n// mixins \u4f8b\u5b50\n////////////\n\n// \u6dfb\u52a0\u5c5e\u6027\u7684\u6df7\u5408\u4f8b\u5b50\nfunction TimesTamped<TBase extends Constructor>(Base: TBase) {\n  return class extends Base {\n    timestamp = Date.now();\n  };\n}\n\n// \u6dfb\u52a0\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u6df7\u5408\u4f8b\u5b50\nfunction ActiveTable<TBase extends Constructor>(Base: TBase) {\n  return class extends Base {\n    isActivated = false;\n\n    activate() {\n      this.isActivated = true;\n    }\n\n    deactivate() {\n      this.isActivated = false;\n    }\n  };\n}\n\n///////////\n// \u7ec4\u5408\u7c7b\n///////////\n\n// \u7b80\u7b54\u7684\u7c7b\nclass User {\n  name = '';\n}\n\n// \u6dfb\u52a0 TimesTamped \u7684 User\nconst TimestampedUser = TimesTamped(User);\n\n// Tina TimesTamped \u548c ActiveTable \u7684\u7c7b\nconst TimestampedActiveTableUser = TimesTamped(ActiveTable(User));\n\n//////////\n// \u4f7f\u7528\u7ec4\u5408\u7c7b\n//////////\n\nconst timestampedUserExample = new TimestampedUser();\nconsole.log(timestampedUserExample.timestamp);\n\nconst timestampedActiveTableUserExample = new TimestampedActiveTableUser();\nconsole.log(timestampedActiveTableUserExample.timestamp);\nconsole.log(timestampedActiveTableUserExample.isActivated);\n")),(0,l.kt)("h2",{id:"closure"},"Closure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const { called } = new (class {\n  count = 0;\n  called = () => {\n    this.count++;\n    console.log(`Called : ${this.count}`);\n  };\n})();\n\ncalled(); // Called : 1\ncalled(); // Called : 2\n")),(0,l.kt)("h2",{id:"decorators"},"Decorators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Attaching to a class:\naccess to the class prototype and its member properties."),(0,l.kt)("li",{parentName:"ul"},"Attaching to a class property:\naccess to the name and value of that property,\nalong with its class prototype ",(0,l.kt)("inlineCode",{parentName:"li"},"target"),"."),(0,l.kt)("li",{parentName:"ul"},"Attaching to a class method parameter:\naccess to that parameter\u2019s index, name and value."),(0,l.kt)("li",{parentName:"ul"},"Attaching to a class method:\naccess to the method\u2019s parameters, the metadata associated with the method object,\nalong with its class prototype ",(0,l.kt)("inlineCode",{parentName:"li"},"target"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// class definitions\n@decorator\nclass MyComponent extends React.Component<Props, State> {\n  // class properties\n  @decorator\n  private static api_version: string;\n\n  // class method parameters\n  private handleFormSubmit(@decorator myParam: string) {}\n\n  // class methods\n  @decorator\n  private handleFormSubmit() {}\n\n  // accessors\n  @decorator\n  public myAccessor() {\n    return this.privateProperty;\n  }\n}\n")),(0,l.kt)("h3",{id:"decorators-pros"},"Decorators Pros"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b9e\u73b0 Open-closed \u539f\u5219."),(0,l.kt)("li",{parentName:"ul"},"\u5206\u79bb\u8f85\u52a9\u6027\u529f\u80fd\u903b\u8f91 (Before/After \u94a9\u5b50, Trace, Log, Report, Debounce/Throttle)\n\u4e0e\u4e1a\u52a1\u903b\u8f91."),(0,l.kt)("li",{parentName:"ul"},"\u62bd\u8c61\u516c\u6709\u529f\u80fd\u51fd\u6570."),(0,l.kt)("li",{parentName:"ul"},"\u88c5\u9970\u5668\u6a21\u5f0f\u662f Class \u7ee7\u627f\u7684\u4e00\u4e2a\u66ff\u4ee3\u6a21\u5f0f.\n(\u7c7b\u4f3c\u4e8e\u7ec4\u5408\u6a21\u5f0f)")),(0,l.kt)("h3",{id:"class-decorators"},"Class Decorators"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function classDecorator(options: any[]) {\n  return target => {\n    // ...\n  };\n}\n\n@classDecorator\nclass Component {}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function inject(options: { api_version: string }) {\n  // returns the class decorator implementation\n  return target => {\n    // `target` will give us access to the entire class prototype\n    target.apiVersion = options.api_version;\n  };\n}\n\nfunction deprecated(target) {\n  console.log(`\n    this class is deprecated and will be removed\n    in a future version of the app\n  `);\n  console.log(`@: ${target}`);\n}\n\n@inject({\n  api_version: '0.3.4',\n})\n@deprecated\nclass MyComponent extends React.Component<Props> {\n  static apiVersion: string;\n}\n")),(0,l.kt)("h3",{id:"class-properties-decorators"},"Class Properties Decorators"),(0,l.kt)("p",null,"first parameter ",(0,l.kt)("inlineCode",{parentName:"p"},"target")," will be\n",(0,l.kt)("inlineCode",{parentName:"p"},"class prototype")," for normal properties\nand ",(0,l.kt)("inlineCode",{parentName:"p"},"class constructor")," for static properties."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function prop(target, name) {\n  // ...\n}\n\nfunction staticProp(constructor, name) {\n  // ...\n}\n\nclass MyComponent extends React.Component<Props> {\n  @prop\n  public member: string;\n\n  @staticProp\n  public static apiVersion: string;\n}\n")),(0,l.kt)("h3",{id:"method-parameters-decorators"},"Method Parameters Decorators"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"@uppercase"),"/",(0,l.kt)("inlineCode",{parentName:"p"},"@lowercase")," for string parameters,\n",(0,l.kt)("inlineCode",{parentName:"p"},"@rounded")," for number parameters."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function decorator<T>(classPrototype: T, name: string, index: int) {\n  // ...\n}\n\nclass MyComponent extends React.Component<Props> {\n  private handleMethod(@decorator param1: string) {\n    // ...\n  }\n}\n")),(0,l.kt)("h3",{id:"methods-decorators"},"Methods Decorators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"target")," parameter will class prototype"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"propertyKey")," will be a string containing the name of the method."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"propertyDescriptor")," will provide with standard metadata associated with the object:\nconfigurable, enumerable, value and writable,\nas well as get and set.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function methodDecorator(options: any[]) {\n  return (\n    target: MyComponent,\n    propertyKey: string,\n    propertyDescriptor: PropertyDescriptor\n  ) => {\n    // ...\n  };\n}\n\nclass MyComponent extends React.Component {\n  @methodDecorator\n  handleSomething() {\n    // ...\n  }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function enumerable(enumerable: boolean) {\n  return (\n    target: MyComponent,\n    propertyKey: string,\n    propertyDescriptor: PropertyDescriptor\n  ) => {\n    propertyDescriptor.enumerable = enumerable;\n  };\n}\n\nclass MyComponent extends React.Component {\n  @enumerable(false)\n  handleSomething() {\n    // ...\n  }\n}\n")),(0,l.kt)("h3",{id:"decorators-execution-order"},"Decorators Execution Order"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u540c\u7ea7\u88c5\u9970\u5668:",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"\u5b9e\u4f8b\u6210\u5458: (\u53c2\u6570 > \u65b9\u6cd5) -> \u8bbf\u95ee\u5668 -> \u5c5e\u6027 \u88c5\u9970\u5668 (\u6309\u987a\u5e8f)."),(0,l.kt)("li",{parentName:"ol"},"\u9759\u6001\u6210\u5458: (\u53c2\u6570 > \u65b9\u6cd5) -> \u8bbf\u95ee\u5668 -> \u5c5e\u6027 \u88c5\u9970\u5668 (\u6309\u987a\u5e8f)."),(0,l.kt)("li",{parentName:"ol"},"\u6784\u9020\u5668: \u53c2\u6570\u88c5\u9970\u5668."),(0,l.kt)("li",{parentName:"ol"},"\u7c7b\u88c5\u9970\u5668."))),(0,l.kt)("li",{parentName:"ul"},"\u540c\u7ea7\u88c5\u9970\u5668: \u5148\u4ece\u5916\u5230\u5185\u8fdb\u5165\uff0c\u7136\u540e\u7531\u5185\u5411\u5916\u6267\u884c.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'function f(key: string): any {\n  return function () {\n    console.log(\'\u6267\u884c: \', key);\n  };\n}\n\n@f(\'8. \u7c7b\')\nclass C {\n  @f(\'4. \u9759\u6001\u5c5e\u6027\')\n  static prop?: number;\n\n  @f(\'5. \u9759\u6001\u65b9\u6cd5\')\n  static method(@f(\'6. \u9759\u6001\u65b9\u6cd5\u53c2\u6570\') foo) {}\n\n  constructor(@f(\'7. \u6784\u9020\u5668\u53c2\u6570\') foo) {\n    super(foo);\n  }\n\n  @f(\'2. \u5b9e\u4f8b\u65b9\u6cd5\')\n  method(@f(\'1. \u5b9e\u4f8b\u65b9\u6cd5\u53c2\u6570\') foo) {}\n\n  @f(\'3. \u5b9e\u4f8b\u5c5e\u6027\')\n  prop?: number;\n}\n\n// "\u6267\u884c: ",  "1. \u5b9e\u4f8b\u65b9\u6cd5\u53c2\u6570"\n// "\u6267\u884c: ",  "2. \u5b9e\u4f8b\u65b9\u6cd5"\n// "\u6267\u884c: ",  "3. \u5b9e\u4f8b\u5c5e\u6027"\n// "\u6267\u884c: ",  "4. \u9759\u6001\u5c5e\u6027"\n// "\u6267\u884c: ",  "6. \u9759\u6001\u65b9\u6cd5\u53c2\u6570"\n// "\u6267\u884c: ",  "5. \u9759\u6001\u65b9\u6cd5"\n// "\u6267\u884c: ",  "7. \u6784\u9020\u5668\u53c2\u6570"\n// "\u6267\u884c: ",  "8. \u7c7b"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function dec(id) {\n  console.log('\u88c5\u9970\u5668\u521d\u59cb\u5316', id);\n\n  return function (target, property, descriptor) {\n    console.log('\u88c5\u9970\u5668\u6267\u884c', id);\n  };\n}\n\nclass Example {\n  @dec(1)\n  @dec(2)\n  method() {}\n}\n\n// \u88c5\u9970\u5668\u521d\u59cb\u5316 1\n// \u88c5\u9970\u5668\u521d\u59cb\u5316 2\n// \u88c5\u9970\u5668\u6267\u884c 2\n// \u88c5\u9970\u5668\u6267\u884c 1\n")),(0,l.kt)("h3",{id:"typescript-decorator-utils"},"TypeScript Decorator Utils"),(0,l.kt)("h4",{id:"ioc-and-di-utils"},"IOC and DI Utils"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/inversify/InversifyJS"},"InversifyJS: Powerful and lightweight inversion of control container"))),(0,l.kt)("h2",{id:"type-system"},"Type System"),(0,l.kt)("p",null,"TypeScript Type System is\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/issues/14833"},"Turing Complete"),"."),(0,l.kt)("h3",{id:"covariance"},"Covariance"),(0,l.kt)("p",null,"Covariance (\u534f\u53d8\u6027):"),(0,l.kt)("p",null,"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T")," is ",(0,l.kt)("strong",{parentName:"p"},"covariant")," if having ",(0,l.kt)("inlineCode",{parentName:"p"},"S <: P"),", then ",(0,l.kt)("inlineCode",{parentName:"p"},"T<S> <: T<P>"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type IsSubtype<S, P> = S extends P ? true : false;\n\ntype T1 = IsSubtype<Admin, User>;\n// type T1 = true\n\ntype T2 = IsSubtype<Promise<Admin>, Promise<User>>;\n// type T2 = true\n\ntype T3 = IsSubtype<'Hello', string>;\n// type T3 = true\n\ntype T4 = IsSubtype<Capitalize<'Hello'>, Capitalize<string>>;\n// type T4 = true\n")),(0,l.kt)("h3",{id:"contravariance"},"Contravariance"),(0,l.kt)("p",null,"Contravariance (\u9006\u53d8\u6027):"),(0,l.kt)("p",null,"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T")," is ",(0,l.kt)("strong",{parentName:"p"},"contravariant")," if having ",(0,l.kt)("inlineCode",{parentName:"p"},"S <: P"),", then ",(0,l.kt)("inlineCode",{parentName:"p"},"T<P> <: T<S>"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type IsSubtype<S, P> = S extends P ? true : false;\n\ntype Func<Param> = (param: Param) => void;\n\ntype T1 = IsSubtype<Admin, User>;\n// type T1 = true\n\ntype T2 = IsSubtype<Func<Admin>, Func<User>>;\n// type T2 = false\n\ntype T3 = IsSubtype<Func<User>, Func<Admin>>;\n// type T3 = true\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const logAdmin: Func<Admin> = (admin: Admin): void => {\n  console.log(`Name: ${admin.userName}`);\n  console.log(`Is super admin: ${admin.isSuperAdmin.toString()}`);\n};\n\nconst logUser: Func<User> = (user: User): void => {\n  console.log(`Name: ${user.userName}`);\n};\n\nconst admin = new Admin('admin1', true);\n\nlet logger: Func<Admin>;\n\nlogger = logUser;\nlogger(admin); // OK\n\nlogger = logAdmin;\nlogger(admin); // OK\n\nconst user = new User('user1');\n\nlet logger: Func<User>;\n\nlogger = logUser;\nlogger(user); // OK\n\nlogger = logAdmin;\n// Type 'Func<Admin>' is not assignable to type 'Func<User>'.\n//   Property 'isSuperAdmin' is missing in type 'User' but required in type 'Admin'.\nlogger(user); // Oops! `user.isSuperAdmin` is undefined.\n")),(0,l.kt)("h2",{id:"project-reference"},"Project Reference"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/project-references.html"},"Project Reference"),"\nfor TypeScript compile and build ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/typescript-cheatsheets/speed"},"Speed"),"."),(0,l.kt)("h2",{id:"monorepo"},"Monorepo"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://2ality.com/2021/07/simple-monorepos.html"},"TypeScript Monorepo"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"NPM workspaces."),(0,l.kt)("li",{parentName:"ul"},"TypeScript references.")),(0,l.kt)("h2",{id:"typescript-tools"},"TypeScript Tools"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tsconfig/bases"},"TS Config")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/TypeStrong/ts-node"},"TS Node")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/kulshekhar/ts-jest"},"TS Jest"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D jest typescript ts-jest @types/jest\nnpx ts-jest config:init\nnpx jest\n")),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/basarat/typescript-book"},"TypeScript Deep Dive")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/labs42io/clean-code-typescript"},"Clean TypeScript Code")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/danvk/effective-typescript"},"Effective TypeScript")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://mp.weixin.qq.com/s/XF8tWJlwZC04WTdmltmXNQ"},"TypeScript Compiler Internal"))))}m.isMDXComponent=!0}}]);